[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "LADLE",
    "section": "",
    "text": "We found current agentic frameworks unnecessarily complex:\n\nToo many levels of abstractions and boilerplate code.\nToo many interfaces to learn\nTo many wrappers to build for our code to fit these frameworks\n\nAs a response, we create Ladle which aims to:\n\nHave a small interface - making it easier to learn.\nNone intursive - You can use your own functions in ladle, without fitting them to a complex interace.\nBe low in abstractions - we dont create tons of wrappers you have to navigate, you bring your own functions.\nMake tracing and debugging simple.",
    "crumbs": [
      "Ladle"
    ]
  },
  {
    "objectID": "index.html#motivation",
    "href": "index.html#motivation",
    "title": "LADLE",
    "section": "",
    "text": "We found current agentic frameworks unnecessarily complex:\n\nToo many levels of abstractions and boilerplate code.\nToo many interfaces to learn\nTo many wrappers to build for our code to fit these frameworks\n\nAs a response, we create Ladle which aims to:\n\nHave a small interface - making it easier to learn.\nNone intursive - You can use your own functions in ladle, without fitting them to a complex interace.\nBe low in abstractions - we dont create tons of wrappers you have to navigate, you bring your own functions.\nMake tracing and debugging simple.",
    "crumbs": [
      "Ladle"
    ]
  },
  {
    "objectID": "index.html#installation",
    "href": "index.html#installation",
    "title": "LADLE",
    "section": "Installation",
    "text": "Installation\n# in an environment with python&gt;=3.10\npip install git+https://github.com/DeanLight/ladle.git\nLadle uses graphviz to draw your diagrams. These are automatically rendered in jupyter notebooks. Make sure you download and install graphviz on your system if you want diagrams to be rendered.",
    "crumbs": [
      "Ladle"
    ]
  },
  {
    "objectID": "index.html#usage",
    "href": "index.html#usage",
    "title": "LADLE",
    "section": "Usage",
    "text": "Usage\n\n# import the basic building blocks\nfrom ladle.diagrams import V,E,Define\n\n\n# define your own function\ndef add(a,b):\n    return a+b\n\n# or function-objects\nclass Pow():\n    def __init__(self,power):\n        self.power = power\n    def __call__(self,a):\n        return a**self.power\n    def __str__(self):\n        return f'Pow({self.power})'\n\n\n# define your diagram\nwith Define('hello world',direction='LR') as Schema:\n    V('add',add)\n    V('square',Pow(2))\n    E('Start-&gt;add(**=.)')\n    E('Start-&gt;square(a=b)')\n    E('add-&gt;End(add_result=.)')\n    E('square-&gt;End(square_result=.)')\n\n\n\n\n\n\n\n\n\n# run the diagram\ndiagram = Schema()\nfor trace in diagram.run({'a':1,'b':2}):\n    # print/log/etc the traces however you want\n    trace.pprint(skip_passthrough=True)\n# after running, access the output \ndiagram.output\n\nNode add:\n{'input': {'a': 1, 'b': 2}, 'output': 3}\n================================================================================\nNode square:\n{'input': {'a': 2}, 'output': 4}\n================================================================================\n\n\n{'add_result': 3, 'square_result': 4}",
    "crumbs": [
      "Ladle"
    ]
  },
  {
    "objectID": "index.html#reporting-bugs",
    "href": "index.html#reporting-bugs",
    "title": "LADLE",
    "section": "Reporting Bugs",
    "text": "Reporting Bugs\nFound bugs? Missing features? Feel free to open an issue",
    "crumbs": [
      "Ladle"
    ]
  },
  {
    "objectID": "index.html#contributing",
    "href": "index.html#contributing",
    "title": "LADLE",
    "section": "Contributing",
    "text": "Contributing\nWant to contribute to Ladle? Great! Feel free to submit a PR or discuss a feature you would like to add in the Issues.\nTo get a working development environment:\n# clone the repo\ngit clone https://github.com/DeanLight/ladle.git    \ncd ladle\n\n# install ladle in editable dev mode\npip install -e \".[dev]\"\n\n# run pre-commit to install commit hooks\npre-commit install\nLadle is developed using nbdev\n# Make changes under nbs/ directory\n# ...\n\n# clean and export notebooks into a python library\nnbdev_clean && nbdev_export\n\n# make sure tests pass\nnbdev_test\n\n# Changing the docs? make sure that they are rendering correctly\nnbdev_docs",
    "crumbs": [
      "Ladle"
    ]
  },
  {
    "objectID": "visualization.html",
    "href": "visualization.html",
    "title": "Visualization",
    "section": "",
    "text": "# Create example graph with node and edge properties\nG = nx.DiGraph()\n\n# Add nodes with properties\nG.add_node('A', role='start', color='lightblue')\nG.add_node('B', role='process', color='lightgreen') \nG.add_node('C', role='end', color='pink',nested_param = {'x':{'y':1}})\n\n# Add edges with properties\nG.add_edge('A', 'B', weight=5, label='step 1')\nG.add_edge('B', 'C', weight=3, label='*')\n\n\n# Draw the graph\n# draw_nx(G,subgraph_colors={'green':['C','B']})\n\n\nsource\n\n\n\n graph_to_graphviz_spec (g, label_key=None, drop_keys=None, **kwargs)\n\n\nsource\n\n\n\n\n edge_description (g, edge, drop_keys=None, **kwargs)\n\n\nsource\n\n\n\n\n node_description (g, node, label_key=None, drop_keys=None, **kwargs)\n\n\nsource\n\n\n\n\n wrap_text (text, width=None, **kwargs)\n\n\ngraph_to_graphviz_spec(G)\n\n([{'name': 'A', 'label': 'A\\nrole=start\\ncolor=lightblue'},\n  {'name': 'B', 'label': 'B\\nrole=process\\ncolor=lightgreen'},\n  {'name': 'C',\n   'label': \"C\\nrole=end\\ncolor=pink\\nnested_param={'x': {'y': 1}}\"}],\n [{'tail_name': 'A', 'head_name': 'B', 'label': 'weight=5\\nlabel=step 1'},\n  {'tail_name': 'B', 'head_name': 'C', 'label': 'weight=3\\nlabel=*'}])\n\n\n\nsource\n\n\n\n\n draw_graphviz (node_data, edge_data, name=None, direction='TB',\n                format='svg', node_attrs=None, edge_attrs=None,\n                graph_attrs=None, **kwargs)\n\n\nsource\n\n\n\n\n check_graphviz_installed ()\n\n\nsource\n\n\n\n\n draw_nx (g:networkx.classes.digraph.DiGraph, direction='TB', name=None,\n          format='svg', label_key=None, drop_keys=None, node_attrs=None,\n          edge_attrs=None, graph_attrs=None, **kwargs)\n\n\ndrawing = draw_nx(G,name=None,engine='dot')\ndrawing\n\n\n\n\n\n\n\n\n\nprint(drawing.source)\n\ndigraph {\n    labelloc=t rankdir=TB\n    A [label=\"A\nrole=start\ncolor=lightblue\" color=\"#9370DB\" fillcolor=\"#ECECFF\" shape=box style=filled]\n    B [label=\"B\nrole=process\ncolor=lightgreen\" color=\"#9370DB\" fillcolor=\"#ECECFF\" shape=box style=filled]\n    C [label=\"C\nrole=end\ncolor=pink\nnested_param={'x': {'y': 1}}\" color=\"#9370DB\" fillcolor=\"#ECECFF\" shape=box style=filled]\n    A -&gt; B [label=\"weight=5\nlabel=step 1\" color=black]\n    B -&gt; C [label=\"weight=3\nlabel=*\" color=black]\n}\n\n\n\n\nsource\n\n\n\n\n display_in_ipython (obj)\n\n\nsource\n\n\n\n\n is_ipython ()\n\n\ndisplay_in_ipython(drawing)\n\n\n\n\n\n\n\n\n\n# this is how we tell ipython what to display\ndrawing._repr_mimebundle_()\n\n{'image/svg+xml': '&lt;?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?&gt;\\n&lt;!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\"\\n \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\"&gt;\\n&lt;!-- Generated by graphviz version 12.2.1 (20241206.2353)\\n --&gt;\\n&lt;!-- Pages: 1 --&gt;\\n&lt;svg width=\"179pt\" height=\"335pt\"\\n viewBox=\"0.00 0.00 179.25 335.00\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"&gt;\\n&lt;g id=\"graph0\" class=\"graph\" transform=\"scale(1 1) rotate(0) translate(4 331)\"&gt;\\n&lt;polygon fill=\"white\" stroke=\"none\" points=\"-4,4 -4,-331 175.25,-331 175.25,4 -4,4\"/&gt;\\n&lt;!-- A --&gt;\\n&lt;g id=\"node1\" class=\"node\"&gt;\\n&lt;title&gt;A&lt;/title&gt;\\n&lt;polygon fill=\"#ececff\" stroke=\"#9370db\" points=\"135.62,-327 35.62,-327 35.62,-269.5 135.62,-269.5 135.62,-327\"/&gt;\\n&lt;text text-anchor=\"middle\" x=\"85.62\" y=\"-309.7\" font-family=\"Times,serif\" font-size=\"14.00\"&gt;A&lt;/text&gt;\\n&lt;text text-anchor=\"middle\" x=\"85.62\" y=\"-293.2\" font-family=\"Times,serif\" font-size=\"14.00\"&gt;role=start&lt;/text&gt;\\n&lt;text text-anchor=\"middle\" x=\"85.62\" y=\"-276.7\" font-family=\"Times,serif\" font-size=\"14.00\"&gt;color=lightblue&lt;/text&gt;\\n&lt;/g&gt;\\n&lt;!-- B --&gt;\\n&lt;g id=\"node2\" class=\"node\"&gt;\\n&lt;title&gt;B&lt;/title&gt;\\n&lt;polygon fill=\"#ececff\" stroke=\"#9370db\" points=\"139,-200.5 32.25,-200.5 32.25,-143 139,-143 139,-200.5\"/&gt;\\n&lt;text text-anchor=\"middle\" x=\"85.62\" y=\"-183.2\" font-family=\"Times,serif\" font-size=\"14.00\"&gt;B&lt;/text&gt;\\n&lt;text text-anchor=\"middle\" x=\"85.62\" y=\"-166.7\" font-family=\"Times,serif\" font-size=\"14.00\"&gt;role=process&lt;/text&gt;\\n&lt;text text-anchor=\"middle\" x=\"85.62\" y=\"-150.2\" font-family=\"Times,serif\" font-size=\"14.00\"&gt;color=lightgreen&lt;/text&gt;\\n&lt;/g&gt;\\n&lt;!-- A&#45;&gt;B --&gt;\\n&lt;g id=\"edge1\" class=\"edge\"&gt;\\n&lt;title&gt;A&#45;&gt;B&lt;/title&gt;\\n&lt;path fill=\"none\" stroke=\"black\" d=\"M85.62,-269.31C85.62,-252.41 85.62,-230.6 85.62,-211.99\"/&gt;\\n&lt;polygon fill=\"black\" stroke=\"black\" points=\"89.13,-212.11 85.63,-202.11 82.13,-212.11 89.13,-212.11\"/&gt;\\n&lt;text text-anchor=\"middle\" x=\"119\" y=\"-238.2\" font-family=\"Times,serif\" font-size=\"14.00\"&gt;weight=5&lt;/text&gt;\\n&lt;text text-anchor=\"middle\" x=\"119\" y=\"-221.7\" font-family=\"Times,serif\" font-size=\"14.00\"&gt;label=step 1&lt;/text&gt;\\n&lt;/g&gt;\\n&lt;!-- C --&gt;\\n&lt;g id=\"node3\" class=\"node\"&gt;\\n&lt;title&gt;C&lt;/title&gt;\\n&lt;polygon fill=\"#ececff\" stroke=\"#9370db\" points=\"171.25,-74 0,-74 0,0 171.25,0 171.25,-74\"/&gt;\\n&lt;text text-anchor=\"middle\" x=\"85.62\" y=\"-56.7\" font-family=\"Times,serif\" font-size=\"14.00\"&gt;C&lt;/text&gt;\\n&lt;text text-anchor=\"middle\" x=\"85.62\" y=\"-40.2\" font-family=\"Times,serif\" font-size=\"14.00\"&gt;role=end&lt;/text&gt;\\n&lt;text text-anchor=\"middle\" x=\"85.62\" y=\"-23.7\" font-family=\"Times,serif\" font-size=\"14.00\"&gt;color=pink&lt;/text&gt;\\n&lt;text text-anchor=\"middle\" x=\"85.62\" y=\"-7.2\" font-family=\"Times,serif\" font-size=\"14.00\"&gt;nested_param={&#39;x&#39;: {&#39;y&#39;: 1}}&lt;/text&gt;\\n&lt;/g&gt;\\n&lt;!-- B&#45;&gt;C --&gt;\\n&lt;g id=\"edge2\" class=\"edge\"&gt;\\n&lt;title&gt;B&#45;&gt;C&lt;/title&gt;\\n&lt;path fill=\"none\" stroke=\"black\" d=\"M85.62,-142.6C85.62,-126.01 85.62,-104.58 85.62,-85.45\"/&gt;\\n&lt;polygon fill=\"black\" stroke=\"black\" points=\"89.13,-85.71 85.63,-75.71 82.13,-85.71 89.13,-85.71\"/&gt;\\n&lt;text text-anchor=\"middle\" x=\"111.5\" y=\"-111.7\" font-family=\"Times,serif\" font-size=\"14.00\"&gt;weight=3&lt;/text&gt;\\n&lt;text text-anchor=\"middle\" x=\"111.5\" y=\"-95.2\" font-family=\"Times,serif\" font-size=\"14.00\"&gt;label=*&lt;/text&gt;\\n&lt;/g&gt;\\n&lt;/g&gt;\\n&lt;/svg&gt;\\n'}"
  },
  {
    "objectID": "visualization.html#rendering-graphs-with-graphviz",
    "href": "visualization.html#rendering-graphs-with-graphviz",
    "title": "Visualization",
    "section": "",
    "text": "# Create example graph with node and edge properties\nG = nx.DiGraph()\n\n# Add nodes with properties\nG.add_node('A', role='start', color='lightblue')\nG.add_node('B', role='process', color='lightgreen') \nG.add_node('C', role='end', color='pink',nested_param = {'x':{'y':1}})\n\n# Add edges with properties\nG.add_edge('A', 'B', weight=5, label='step 1')\nG.add_edge('B', 'C', weight=3, label='*')\n\n\n# Draw the graph\n# draw_nx(G,subgraph_colors={'green':['C','B']})\n\n\nsource\n\n\n\n graph_to_graphviz_spec (g, label_key=None, drop_keys=None, **kwargs)\n\n\nsource\n\n\n\n\n edge_description (g, edge, drop_keys=None, **kwargs)\n\n\nsource\n\n\n\n\n node_description (g, node, label_key=None, drop_keys=None, **kwargs)\n\n\nsource\n\n\n\n\n wrap_text (text, width=None, **kwargs)\n\n\ngraph_to_graphviz_spec(G)\n\n([{'name': 'A', 'label': 'A\\nrole=start\\ncolor=lightblue'},\n  {'name': 'B', 'label': 'B\\nrole=process\\ncolor=lightgreen'},\n  {'name': 'C',\n   'label': \"C\\nrole=end\\ncolor=pink\\nnested_param={'x': {'y': 1}}\"}],\n [{'tail_name': 'A', 'head_name': 'B', 'label': 'weight=5\\nlabel=step 1'},\n  {'tail_name': 'B', 'head_name': 'C', 'label': 'weight=3\\nlabel=*'}])\n\n\n\nsource\n\n\n\n\n draw_graphviz (node_data, edge_data, name=None, direction='TB',\n                format='svg', node_attrs=None, edge_attrs=None,\n                graph_attrs=None, **kwargs)\n\n\nsource\n\n\n\n\n check_graphviz_installed ()\n\n\nsource\n\n\n\n\n draw_nx (g:networkx.classes.digraph.DiGraph, direction='TB', name=None,\n          format='svg', label_key=None, drop_keys=None, node_attrs=None,\n          edge_attrs=None, graph_attrs=None, **kwargs)\n\n\ndrawing = draw_nx(G,name=None,engine='dot')\ndrawing\n\n\n\n\n\n\n\n\n\nprint(drawing.source)\n\ndigraph {\n    labelloc=t rankdir=TB\n    A [label=\"A\nrole=start\ncolor=lightblue\" color=\"#9370DB\" fillcolor=\"#ECECFF\" shape=box style=filled]\n    B [label=\"B\nrole=process\ncolor=lightgreen\" color=\"#9370DB\" fillcolor=\"#ECECFF\" shape=box style=filled]\n    C [label=\"C\nrole=end\ncolor=pink\nnested_param={'x': {'y': 1}}\" color=\"#9370DB\" fillcolor=\"#ECECFF\" shape=box style=filled]\n    A -&gt; B [label=\"weight=5\nlabel=step 1\" color=black]\n    B -&gt; C [label=\"weight=3\nlabel=*\" color=black]\n}\n\n\n\n\nsource\n\n\n\n\n display_in_ipython (obj)\n\n\nsource\n\n\n\n\n is_ipython ()\n\n\ndisplay_in_ipython(drawing)\n\n\n\n\n\n\n\n\n\n# this is how we tell ipython what to display\ndrawing._repr_mimebundle_()\n\n{'image/svg+xml': '&lt;?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?&gt;\\n&lt;!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\"\\n \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\"&gt;\\n&lt;!-- Generated by graphviz version 12.2.1 (20241206.2353)\\n --&gt;\\n&lt;!-- Pages: 1 --&gt;\\n&lt;svg width=\"179pt\" height=\"335pt\"\\n viewBox=\"0.00 0.00 179.25 335.00\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"&gt;\\n&lt;g id=\"graph0\" class=\"graph\" transform=\"scale(1 1) rotate(0) translate(4 331)\"&gt;\\n&lt;polygon fill=\"white\" stroke=\"none\" points=\"-4,4 -4,-331 175.25,-331 175.25,4 -4,4\"/&gt;\\n&lt;!-- A --&gt;\\n&lt;g id=\"node1\" class=\"node\"&gt;\\n&lt;title&gt;A&lt;/title&gt;\\n&lt;polygon fill=\"#ececff\" stroke=\"#9370db\" points=\"135.62,-327 35.62,-327 35.62,-269.5 135.62,-269.5 135.62,-327\"/&gt;\\n&lt;text text-anchor=\"middle\" x=\"85.62\" y=\"-309.7\" font-family=\"Times,serif\" font-size=\"14.00\"&gt;A&lt;/text&gt;\\n&lt;text text-anchor=\"middle\" x=\"85.62\" y=\"-293.2\" font-family=\"Times,serif\" font-size=\"14.00\"&gt;role=start&lt;/text&gt;\\n&lt;text text-anchor=\"middle\" x=\"85.62\" y=\"-276.7\" font-family=\"Times,serif\" font-size=\"14.00\"&gt;color=lightblue&lt;/text&gt;\\n&lt;/g&gt;\\n&lt;!-- B --&gt;\\n&lt;g id=\"node2\" class=\"node\"&gt;\\n&lt;title&gt;B&lt;/title&gt;\\n&lt;polygon fill=\"#ececff\" stroke=\"#9370db\" points=\"139,-200.5 32.25,-200.5 32.25,-143 139,-143 139,-200.5\"/&gt;\\n&lt;text text-anchor=\"middle\" x=\"85.62\" y=\"-183.2\" font-family=\"Times,serif\" font-size=\"14.00\"&gt;B&lt;/text&gt;\\n&lt;text text-anchor=\"middle\" x=\"85.62\" y=\"-166.7\" font-family=\"Times,serif\" font-size=\"14.00\"&gt;role=process&lt;/text&gt;\\n&lt;text text-anchor=\"middle\" x=\"85.62\" y=\"-150.2\" font-family=\"Times,serif\" font-size=\"14.00\"&gt;color=lightgreen&lt;/text&gt;\\n&lt;/g&gt;\\n&lt;!-- A&#45;&gt;B --&gt;\\n&lt;g id=\"edge1\" class=\"edge\"&gt;\\n&lt;title&gt;A&#45;&gt;B&lt;/title&gt;\\n&lt;path fill=\"none\" stroke=\"black\" d=\"M85.62,-269.31C85.62,-252.41 85.62,-230.6 85.62,-211.99\"/&gt;\\n&lt;polygon fill=\"black\" stroke=\"black\" points=\"89.13,-212.11 85.63,-202.11 82.13,-212.11 89.13,-212.11\"/&gt;\\n&lt;text text-anchor=\"middle\" x=\"119\" y=\"-238.2\" font-family=\"Times,serif\" font-size=\"14.00\"&gt;weight=5&lt;/text&gt;\\n&lt;text text-anchor=\"middle\" x=\"119\" y=\"-221.7\" font-family=\"Times,serif\" font-size=\"14.00\"&gt;label=step 1&lt;/text&gt;\\n&lt;/g&gt;\\n&lt;!-- C --&gt;\\n&lt;g id=\"node3\" class=\"node\"&gt;\\n&lt;title&gt;C&lt;/title&gt;\\n&lt;polygon fill=\"#ececff\" stroke=\"#9370db\" points=\"171.25,-74 0,-74 0,0 171.25,0 171.25,-74\"/&gt;\\n&lt;text text-anchor=\"middle\" x=\"85.62\" y=\"-56.7\" font-family=\"Times,serif\" font-size=\"14.00\"&gt;C&lt;/text&gt;\\n&lt;text text-anchor=\"middle\" x=\"85.62\" y=\"-40.2\" font-family=\"Times,serif\" font-size=\"14.00\"&gt;role=end&lt;/text&gt;\\n&lt;text text-anchor=\"middle\" x=\"85.62\" y=\"-23.7\" font-family=\"Times,serif\" font-size=\"14.00\"&gt;color=pink&lt;/text&gt;\\n&lt;text text-anchor=\"middle\" x=\"85.62\" y=\"-7.2\" font-family=\"Times,serif\" font-size=\"14.00\"&gt;nested_param={&#39;x&#39;: {&#39;y&#39;: 1}}&lt;/text&gt;\\n&lt;/g&gt;\\n&lt;!-- B&#45;&gt;C --&gt;\\n&lt;g id=\"edge2\" class=\"edge\"&gt;\\n&lt;title&gt;B&#45;&gt;C&lt;/title&gt;\\n&lt;path fill=\"none\" stroke=\"black\" d=\"M85.62,-142.6C85.62,-126.01 85.62,-104.58 85.62,-85.45\"/&gt;\\n&lt;polygon fill=\"black\" stroke=\"black\" points=\"89.13,-85.71 85.63,-75.71 82.13,-85.71 89.13,-85.71\"/&gt;\\n&lt;text text-anchor=\"middle\" x=\"111.5\" y=\"-111.7\" font-family=\"Times,serif\" font-size=\"14.00\"&gt;weight=3&lt;/text&gt;\\n&lt;text text-anchor=\"middle\" x=\"111.5\" y=\"-95.2\" font-family=\"Times,serif\" font-size=\"14.00\"&gt;label=*&lt;/text&gt;\\n&lt;/g&gt;\\n&lt;/g&gt;\\n&lt;/svg&gt;\\n'}"
  },
  {
    "objectID": "core.html",
    "href": "core.html",
    "title": "Core",
    "section": "",
    "text": "\"\"\"\nTODO before OS\n\n- Make mermaid diagrams local using ipython - DONE\n  - Run your own mermaid server - not now, just print the code and have the render it by themselves\n\n- CI/CD prep - Done\n    - stub openai\n     - make a joblib to file function\n     - and make mocking fixture to replace the function with the mock backed version.\n  - Instead we just change the location of the Diskcache based on env variables, populate the cache during local test and push it to the remote repo. - Done\n  - we need to make sure the the client is not initialized when cache always hits - Done\n\nTODO from here\n- Split out all non essential tools into ladle studio - Done\n  - put stt and itt in chat\n  - make DB contain in memory SQL and Chroma\n  - in tools make python execution node dependant on langchain\n  - move parsing nb to studio\n  - move supabase to studio\n\n- Get all the serialization logic from viz branch - Done\n\n- Pass nbdev Tests - Done\n\n- circle CI on docker working - Done \n\n# docs\n\n- Docs site\n  - explain that you need the mermaid extension\n\n\nTutorials:\n- Hello world\n  - how to define, how to run with variations\n  - with async and without async\n  - example from the index with step by step guide\n\n- port mapping\n - explain the syntax and all cases, show them with basic diagrams\n\n- Decision diagrams\n  - explain what we saw before are flow diagrams\n  - explain conditions\n  - explain State\n  - explain Breakpoints\n\n- nested diagrams\n  - simple nesting\n  - cant nest a breakable decision diagram within a flow diagram.\n\n- Customizing State\n  - history example\n  - queue example\n  - show all different accession patterns\n\n- Compound Diagrams\n  - in lining with scope\n  - each sub scope need to have one input and one output.\n  - flow nodes can't write to state.\n\n- Batching\n  - mention that the syntax here is in beta mode\n  - show for each and flatten\n  - show batching with per doc on the outside and on the inside\n  - show batching with pushing to other queues\n\nDocs TODOs\n - finish making the show docs table vizualization - Done\n - Make a nested docs dir inside the nbs dir where we will make the doc notbooks (not using nbdevs automatic documentation (to much mess))\n   - Tutorials\n   - LLM nodes\n   - examples\n   - reference\n  \n- new repo with no history\n - change repo name, create a new repo with new name and copy main branch into it.\n\n- examples of batching from the outside using async.\n\n- Find correct opensource license\n  - apache 2.0 on my name\n\n\"\"\"\n_=0"
  },
  {
    "objectID": "core.html#git-paths-and-env-vars",
    "href": "core.html#git-paths-and-env-vars",
    "title": "Core",
    "section": "Git paths and env vars",
    "text": "Git paths and env vars\n\nsource\n\nget_git_root\n\n get_git_root ()\n\n\nassert get_git_root() == Path.cwd().parent\n\n\nsource\n\n\nload_env\n\n load_env (path=None)\n\n\n# load_env()\n# assert os.getenv('OPENAI_API_KEY') is not None"
  },
  {
    "objectID": "core.html#caching",
    "href": "core.html#caching",
    "title": "Core",
    "section": "Caching",
    "text": "Caching\n\nos.environ.get('DISKCACHE','.cache')\n\n'.cache'"
  },
  {
    "objectID": "core.html#collection-utils",
    "href": "core.html#collection-utils",
    "title": "Core",
    "section": "Collection utils",
    "text": "Collection utils\n\nsource\n\nmerge_list_dicts\n\n merge_list_dicts (dict1, dict2)\n\n*Merge two dictionaries with list values by concatenating their lists.\nArgs: dict1: defaultdict(list) or dict with list values dict2: dict with list values\nReturns: defaultdict(list) with concatenated lists*\n\nfrom collections import defaultdict\n\n\n# Initial dicts\nd1 = defaultdict(list, {'a': [1, 2], 'b': [3]})\nd2 = {'a': [4], 'c': [5, 6]}\n\n# Merge them\nmerged = merge_list_dicts(d1, d2)\nassert merged == defaultdict(list, {'a': [1, 2, 4], 'b': [3], 'c': [5, 6]})\n\n\nsource\n\n\nnew_combinations\n\n new_combinations (new_params:Dict[str,List], old_params:Dict[str,List])\n\n*Generate cartesian product of parameters by first choosing new/old for each parameter. Skip combinations that only use old parameters.\nArgs: new_params: Dictionary of new parameter values to try old_params: Dictionary of previously tried parameter values*\n\nimport json\n\n\n# Test 1: Basic functionality\nnew = {'a': [1, 2], 'b': ['x']}\nold = {'a': [2, 3], 'b': ['x', 'y']}\n\nresults = list(new_combinations(new, old))\nserialized_results = { json.dumps(result,sort_keys=True) for result in results }\nassert serialized_results == {'{\"a\": [1, 2], \"b\": [\"x\", \"y\"]}',\n '{\"a\": [1, 2], \"b\": [\"x\"]}',\n '{\"a\": [2, 3], \"b\": [\"x\"]}'} , results\n\n\n# # Should include combinations with at least one new value\n# assert {'a': 1, 'b': 'x'} in results\n# assert {'a': 1, 'b': 'y'} in results\n# assert {'a': 2, 'b': 'x'} in results  # 2 is in both new and old\n\n# # Should not include combinations with only old values\n# assert {'a': 3, 'b': 'y'} not in results\n\n# # Test 2: Empty new params\n# new = {}\n# old = {'a': [1, 2], 'b': ['x']}\n# assert list(product_with_memory(new, old)) == []\n\n# # Test 3: Empty old params\n# new = {'a': [1, 2], 'b': ['x']}\n# old = {}\n# results = list(product_with_memory(new, old))\n# assert len(results) == 2  # All combinations of new params\n\n# # Test 4: Disjoint parameters\n# new = {'a': [1, 2]}\n# old = {'b': ['x', 'y']}\n# results = list(product_with_memory(new, old))\n# assert len(results) == 4  # 2 new 'a' values × 2 old 'b' values\n# assert {'a': 1, 'b': 'x'} in results\n# assert {'a': 1, 'b': 'y'} in results\n# assert {'a': 2, 'b': 'x'} in results\n# assert {'a': 2, 'b': 'y'} in results\n\n# # Test 5: Overlapping values\n# new = {'a': [1, 2, 3]}\n# old = {'a': [3, 4, 5]}\n# results = list(product_with_memory(new, old))\n# assert {'a': 1} in results\n# assert {'a': 2} in results\n# assert {'a': 3} in results  # 3 is in both new and old\n# assert {'a': 4} not in results\n# assert {'a': 5} not in results\n\n\nsource\n\n\ndict_cartesian_product\n\n dict_cartesian_product (input_dict, keys)\n\n*Generate cartesian products of dictionary values for specified keys while preserving other keys.\nArgs: input_dict (dict): Input dictionary with list values keys (list): List of keys to generate products from\nReturns: list[dict]: List of dictionaries containing all possible combinations*\n\n# Example usage:\ndata = {\n    'color': ['red', 'blue'],\n    'size': ['S', 'M'],\n    'style': ['casual', 'formal']\n}\n\nkeys_to_combine = ['color', 'size']\nresult = dict_cartesian_product(data, keys_to_combine)\nassert result == [{'color': 'red', 'size': 'S', 'style': ['casual', 'formal']},\n {'color': 'red', 'size': 'M', 'style': ['casual', 'formal']},\n {'color': 'blue', 'size': 'S', 'style': ['casual', 'formal']},\n {'color': 'blue', 'size': 'M', 'style': ['casual', 'formal']}],result\n\n\nd = defaultdict(list)\nd['x'] = [0, 1, 2]\ndict_cartesian_product(d,'x')\n\n[defaultdict(list, {'x': 0}),\n defaultdict(list, {'x': 1}),\n defaultdict(list, {'x': 2})]"
  },
  {
    "objectID": "core.html#named-lambdas",
    "href": "core.html#named-lambdas",
    "title": "Core",
    "section": "Named Lambdas",
    "text": "Named Lambdas\n\nsource\n\nNamedLambda\n\n NamedLambda (name, func)\n\nInitialize self. See help(type(self)) for accurate signature."
  },
  {
    "objectID": "core.html#async",
    "href": "core.html#async",
    "title": "Core",
    "section": "Async",
    "text": "Async\n\nsource\n\nmaybe_await\n\n maybe_await (func_or_coro:Any, args, kwargs)\n\nPrefer acall if it exists, otherwise try normal async/sync calling patterns\n\nsource\n\n\nmaybe_await\n\n maybe_await (func_or_coro:Any, args, kwargs)\n\nPrefer acall if it exists, otherwise try normal async/sync calling patterns\n\nclass F():\n    def __call__(self,x):\n        print('acall')\n        return x+1\n\nclass AsyncF():\n    async def __call__(self,x):\n        print('call')\n        return x+1\n\nasync def plus1async(x,**kwargs):\n    await asyncio.sleep(0.1)\n    return x+1\n\n\nassert inspect.iscoroutinefunction(plus1async)\nco = await maybe_await(plus1async,[1],{})\nco\n\n2\n\n\n\nprint(await maybe_await(F(),[1],{}))\nprint(await maybe_await(AsyncF(),[1],{}))\n\nacall\n2\ncall\n2\n\n\n\nco\n\n2"
  },
  {
    "objectID": "core.html#mocking-functions",
    "href": "core.html#mocking-functions",
    "title": "Core",
    "section": "Mocking functions",
    "text": "Mocking functions\n\nsource\n\nget_input_output_from_cache\n\n get_input_output_from_cache (func)\n\n*Extracts input/output pairs from a joblib Memory cache\nArgs: func: The cached function (must be decorated with joblib.Memory.cache)\nReturns: Dict[Tuple, Any]: Dictionary mapping input tuples (args, kwargs) to outputs*\n\nsource\n\n\nmock_from_dict\n\n mock_from_dict (func, cache_dict:Dict[Tuple,Any],\n                 call_on_missing:bool=True)\n\n*Creates a mock function that uses cached results from a dictionary, optionally calling the original function for missing inputs\nArgs: func: The original function to mock cache_dict: Dictionary mapping input tuples (args, kwargs) to outputs call_on_missing: If True, calls original function when input not in cache\nReturns: callable: A function that returns cached results or calls the original*\n\n# Example usage:\nfrom joblib import Memory\nfrom unittest.mock import patch\n\n\n# Set up the cache\nmemory = Memory(Path.home() / '.cache', verbose=0)\n# memory.clear()\n# Define and cache the function\n@memory.cache\ndef expensive_api_call(x, y):\n    # Simulate expensive API call\n    print(f'calling expensive_api_call({x}, {y})')  # To show when real function is called\n    return x + y\n\nexpensive_api_call(1, 2)\nexpensive_api_call(3, 4)\n\ncache_dict = get_input_output_from_cache(expensive_api_call)\nprint(cache_dict)\n\n# Use the mock in a context manager\nmock_func = mock_from_dict(expensive_api_call, cache_dict)\n\nwith patch('__main__.expensive_api_call',mock_func) as mock_api:\n    # Configure mock to use our cached results\n    \n    # These calls will use cached results without hitting the real API\n    assert mock_func(1, 2) == 3\n    assert mock_func(3, 4) == 7"
  },
  {
    "objectID": "core.html#logging",
    "href": "core.html#logging",
    "title": "Core",
    "section": "Logging",
    "text": "Logging\n\nsource\n\ncheckLogs\n\n checkLogs (level:int=10, name:str='__main__',\n            toFile:str|pathlib.Path=None, format='%(message)s')\n\n*context manager for temporarily changing logging levels. used for debugging purposes\nArgs: level (logging.Level: optional): logging level to change the logger to. Defaults to logging.DEBUG. name (str: optional): module name to raise logging level for. Defaults to root logger toFile (Path: optional): File to output logs to. Defaults to None\nYields: [logging.Logger]: the logger object that we raised the level of*"
  },
  {
    "objectID": "core.html#jinja2",
    "href": "core.html#jinja2",
    "title": "Core",
    "section": "Jinja2",
    "text": "Jinja2\n\nsource\n\njinja_undeclared_vars\n\n jinja_undeclared_vars (template)\n\n*Computes all undeclared vars in a jinja template\nArgs: template (Path or str): Path to file of template or string with the template content\nReturns: set: set of all undeclared vars*\n\nsource\n\n\njinja_render\n\n jinja_render (template, params:dict, silent=True,\n               to_file:pathlib.Path=None)\n\n*renders a jinja template\nArgs: template (Path or str): Path to file of template or string with the template content params (Dict): parameter dictionary with the variables to render into the template silent (Bool, Optional): Whether to print the rendered template to screen, defaults to False to_file (Path, Optional): If a path is supplied, prints the template to the file of said path\nReturns: set: set of all undeclared vars*\n\nsource\n\n\njson_render\n\n json_render (data:Any, context:Dict[str,Any], clean_whitespace:bool=True)\n\n*Recursively traverse a JSON-like object and render all strings using Jinja.\nArgs: data: JSON-like object to render context: Dictionary of variables to use for rendering\nReturns: Rendered copy of the input data structure\nExamples: &gt;&gt;&gt; context = {“name”: “Alice”, “age”: 30} &gt;&gt;&gt; data = { … “user_{{name}}”: { … “age”: “{{age}} years old”, … “greeting”: “Hello {{name}}!” … } … } &gt;&gt;&gt; json_render(data, context) { “user_Alice”: { “age”: “30 years old”, “greeting”: “Hello Alice!” } }*\n\nsource\n\n\njson_undeclared_vars\n\n json_undeclared_vars (data:Any)\n\n*Recursively traverse a JSON-like object and collect all undeclared Jinja variables.\nArgs: data: JSON-like object to analyze\nReturns: set: Set of all undeclared variables found in the structure\nExamples: &gt;&gt;&gt; data = { … “user_{{name}}”: { … “age”: “{{age}} years old”, … “greeting”: “Hello {{name}}!” … } … } &gt;&gt;&gt; json_undeclared_vars(data) {‘name’, ‘age’}*\n\ndata = {\n        \"{{user_name}}\": {\n                 \"age\": [\"{{age}} years old\"],\n                 \"greeting\": \"\"\"\n                 Hello\n                 {{name}}!\n                 \"\"\",\n             }\n        }\n\nassert json_undeclared_vars(data) == {'user_name', 'age', 'name'}\ncontext = {\"user_name\": \"John\", \"age\": 30, \"name\": \"Alice\"}\nrendered = json_render(data, context)\nassert rendered == {'John': {'age': ['30 years old'], 'greeting': 'Hello\\nAlice!'}},rendered"
  },
  {
    "objectID": "core.html#better-exception-messages",
    "href": "core.html#better-exception-messages",
    "title": "Core",
    "section": "Better exception messages",
    "text": "Better exception messages\n\nsource\n\nwrap_exception\n\n wrap_exception (template:str, verbose:bool=False)\n\n*Decorator that adds context to exceptions using a template string.\nArgs: template: A jinja template string that can reference function kwargs verbose: If True, includes all local variables in error message\nExample: @helpful_context(“Failed to process {{filename}}”) def process_file(filename: str): …*\n\n'\\n'.join([])\n\n''\n\n\n\n@wrap_exception(\"Failed to read config file {{filepath}}. Local x value was {{x}}\", verbose=True)\ndef read_config(filepath: str, encoding: str = 'utf-8') -&gt; dict:\n    x = 42  # example local variable\n    data = {'test': 123}  # another local\n    with open(filepath, encoding=encoding) as f:\n        return json.load(f)\n\n# When called with invalid parameters:\ntry:\n    read_config('missing.json')\nexcept FileNotFoundError as e:\n    print(e)\n    # Output will be something like:\n    # Failed to read config file missing.json. Local x value was 42\n    # Original error: [Errno 2] No such file or directory: 'missing.json'\n    # \n    # Local variables at time of error:\n    #   filepath = 'missing.json'\n    #   encoding = 'utf-8'\n    #   x = 42\n    #   data = {'test': 123}\n\nFailed to read config file 'missing.json'. Local x value was 42\n\nLocal variables in read_config() at time of error:\n  filepath = 'missing.json'\n  encoding = 'utf-8'\n  x = 42\n  data = {'test': 123}\n\nOriginal error: [Errno 2] No such file or directory: 'missing.json'"
  },
  {
    "objectID": "core.html#validate-input",
    "href": "core.html#validate-input",
    "title": "Core",
    "section": "Validate Input",
    "text": "Validate Input\n\nsource\n\nis_valid_object\n\n is_valid_object (obj, model)\n\n\nclass Foo(BaseModel):\n    a: int\n    b: str\n\n\nassert is_valid_object({\"a\": 10, \"b\": \"adf\"}, Foo)\nassert not is_valid_object({\"a\": \"hehe\", \"b\": \"adf\"}, Foo)\nassert is_valid_object({\"a\": 10, \"b\": \"adf\", \"c\": 3}, Foo)"
  },
  {
    "objectID": "core.html#working-with-missing-values",
    "href": "core.html#working-with-missing-values",
    "title": "Core",
    "section": "Working with Missing values",
    "text": "Working with Missing values\n\nsource\n\nhas_missing\n\n has_missing (model, keys=None)\n\n\nsource\n\n\nget_missing\n\n get_missing (model, keys=None)\n\n*Recursively check a model for Missing or None values and return a list of keys with Missing/None values.\nArgs: model: A pydantic model instance or dict keys: Optional list of specific keys to check. If None, checks all keys.\nReturns: list: List of keys (as strings) that have Missing or None values*\n\nclass UserData(SQLModel):\n    name: Optional[str] = Field(None, description='The name of the user')\n    age: Optional[int] = Field(None, description='The age of the user')\n    email: Optional[str] = Field(None, description='The email of the user')\n\n\n# Test empty dict\nassert has_missing(UserData()) == True\n\n# Test basic dict with Missing value\ntest_dict = {\"name\": None, \"age\": 25}\nassert get_missing(test_dict) == [\"name\"]\n\n# Test dict with no Missing values\ntest_dict = {\"name\": \"John\", \"age\": 25}\nassert get_missing(test_dict) == []\n\n# Test nested dict with Missing values\ntest_nested = {\n    \"user\": {\n        \"name\": \"John\",\n        \"details\": {\n            \"email\": None,\n            \"phone\": \"123-456-7890\"\n        }\n    }\n}\nassert get_missing(test_nested) == [\"user.details.email\"]\n\n# Test with Pydantic model\ntest_model = UserData(name=\"John\", age=None, email=\"john@example.com\")\nassert get_missing(test_model) == [\"age\"]\n\n# Test with all Missing values\ntest_all_missing = UserData(name=None, age=None, email=None)\nassert sorted(get_missing(test_all_missing)) == sorted([\"name\", \"age\", \"email\"])\n\ntest_partial = UserData(name=None, age=25, email=None)\nassert get_missing(test_partial, keys=[\"name\", \"age\"]) == [\"name\"]"
  },
  {
    "objectID": "docs/tutorials/decision_diagrams.html",
    "href": "docs/tutorials/decision_diagrams.html",
    "title": "Decision Diagrams",
    "section": "",
    "text": "def add(a,b):\n    return a+b\n\nclass Pow():\n    def __init__(self,power):\n        self.power = power\n    def __call__(self,a):\n        return a**self.power\n    def __str__(self):\n        return f'Pow({self.power})'\nfrom ladle.diagrams import (\n    Define,\n    V,\n    E,\n)",
    "crumbs": [
      "Tutorials",
      "Decision Diagrams"
    ]
  },
  {
    "objectID": "docs/tutorials/decision_diagrams.html#different-types-of-diagrams",
    "href": "docs/tutorials/decision_diagrams.html#different-types-of-diagrams",
    "title": "Decision Diagrams",
    "section": "Different types of diagrams",
    "text": "Different types of diagrams\nThe type of diagrams we have seen so far are called flow diagrams. In Flow diagrams:\n\nThere are no cycles\nAll nodes run based on the output\n\nAnother Type of Diagrams are Decision Diagrams. In Decision diagrams: * You can have cycles * After Each Node, we need to choose the next node to run based on a condition function.\nFlow diagrams are the default type but we can also define them explicitly.\n\nwith Define('hello world flow',type='flow',direction='LR') as D:\n    V('square',Pow(2),inputs=['Start(a=b)'],outputs=['End(square_result=.)'])\n    V('cube',Pow(3),inputs=['Start(a=b)'],outputs=['End(cube_result=.)'])\n\nd=D()\nfor trace in d.run({'a':1,'b':2}):\n    trace.pprint(skip_passthrough=True)\nd.output\n\n\n\n\n\n\n\n\nNode square:\n{'input': {'a': 2}, 'output': 4}\n================================================================================\nNode cube:\n{'input': {'a': 2}, 'output': 8}\n================================================================================\n\n\n{'square_result': 4, 'cube_result': 8}\n\n\nDecision diagrams can be defined in a similar manner\n\ndef is_b_even(obj):\n    return obj['b']%2==0\n\n\nwith Define('Hello World Decision',type='decision',direction='LR') as D:\n    V('square',Pow(2),outputs=['End(square_result=.)'])\n    V('cube',Pow(3),outputs=['End(cube_result=.)'])\n    # we define conditional edges by adding a cond argument to the edge\n    E('Start-&gt;square(a=b)',cond=is_b_even)\n    # each non-end node must have at least one edge with no condition, the default edge\n    E('Start-&gt;cube(a=b)')\n\n\n\n\n\n\n\n\nWe can also inline conditional edge definition in the node definition by providing a tuple of the form (edge_string,cond) to the inputs or outputs keys.\n\nwith Define('Hello World Decision',type='decision',direction='LR') as D:\n    V('square',Pow(2),inputs=[\n        ('Start(a=b)',is_b_even),\n        ],\n        outputs=['End(square_result=.)'])\n    V('cube',Pow(3),inputs=['Start(a=b)'],outputs=['End(cube_result=.)'])\n\n\n\n\n\n\n\n\nUnlike in our flow example, here either square or cube is called, but not both.\n\nd=D()\nfor trace in d.run({'a':1,'b':2}):\n    trace.pprint(skip_passthrough=True)\nd.output\n\nNode square:\n{'input': {'a': 2}, 'output': 4}\n================================================================================\n\n\n{'square_result': 4}\n\n\n\nd=D()\nfor trace in d.run({'a':1,'b':3}):\n    trace.pprint(skip_passthrough=True)\nd.output\n\nNode cube:\n{'input': {'a': 3}, 'output': 27}\n================================================================================\n\n\n{'cube_result': 27}",
    "crumbs": [
      "Tutorials",
      "Decision Diagrams"
    ]
  },
  {
    "objectID": "docs/tutorials/decision_diagrams.html#conditions-made-easier",
    "href": "docs/tutorials/decision_diagrams.html#conditions-made-easier",
    "title": "Decision Diagrams",
    "section": "Conditions made easier",
    "text": "Conditions made easier\nHaving to write funciton like checking if the key b is even can get out of hand pretty fast.\nTo avoid having to write alot of small condition functions for different object configurations, Ladle’s standard library has a Condition class that gives you the power of port mapping in your conditions.\n\nfrom ladle.std import Condition\n\n\nis_even = lambda x: x%2==0\nsmaller_than_5 = lambda x: x&lt;5\n\nis_b_even = Condition(is_even,mapping='x=b',name='is_b_even')\n\n\nwith Define('Hello World Decision',type='decision',direction='LR') as D:\n    V('square',Pow(2),inputs=[\n        ('Start(a=b)',is_b_even),\n        ],\n        outputs=['End(square_result=.)'])\n    V('cube',Pow(3),inputs=['Start(a=b)'],outputs=['End(cube_result=.)'])\n\nd=D()\nfor trace in d.run({'a':1,'b':2}):\n    trace.pprint(skip_passthrough=True)\nd.output\n\n\n\n\n\n\n\n\nNode square:\n{'input': {'a': 2}, 'output': 4}\n================================================================================\n\n\n{'square_result': 4}\n\n\nCondition has a bunch of other nice utilities, such as the ability to combine conditons via and or or\n\nb_smaller_than_5 = Condition(smaller_than_5,mapping='x=b',name='b_smaller_than_5')\n\neven_but_not_too_big = is_b_even & b_smaller_than_5\neven_but_not_too_big\n\n(is_b_even & b_smaller_than_5)\n\n\n\nwith Define('Hello World Decision',type='decision',direction='LR') as D:\n    V('square',Pow(2),inputs=[\n        ('Start(a=b)',even_but_not_too_big),\n        ],\n        outputs=['End(square_result=.)'])\n    V('cube',Pow(3),inputs=['Start(a=b)'],outputs=['End(cube_result=.)'])\n\n\n\n\n\n\n\n\n\nd=D()\nfor trace in d.run({'a':1,'b':2}):\n    trace.pprint(skip_passthrough=True)\nd.output\n\nNode square:\n{'input': {'a': 2}, 'output': 4}\n================================================================================\n\n\n{'square_result': 4}\n\n\n\nd=D()\nfor trace in d.run({'a':1,'b':10}):\n    trace.pprint(skip_passthrough=True)\nd.output\n\nNode cube:\n{'input': {'a': 10}, 'output': 1000}\n================================================================================\n\n\n{'cube_result': 1000}\n\n\nYou can find out more about Condition and other utilities in the Standard Library Nodes Section.",
    "crumbs": [
      "Tutorials",
      "Decision Diagrams"
    ]
  },
  {
    "objectID": "docs/tutorials/decision_diagrams.html#introduce-diagram-state",
    "href": "docs/tutorials/decision_diagrams.html#introduce-diagram-state",
    "title": "Decision Diagrams",
    "section": "Introduce Diagram State",
    "text": "Introduce Diagram State\nOften, we would like to use state from previous nodes. In flow diagrams, we can simply connect them, but in decision diagrams, this can make the diagram not well defined.\nTo solve this problem, ladle has support for diagram states.\nHere is a basic example of it:\n\nwith Define('Remember Input',type='decision',direction='LR') as D:\n    V('square',Pow(2),inputs=[\n        ('Start(a=b)',is_b_even),\n        ],\n        outputs=['End(square_result=.)'])\n    V('cube',Pow(3),inputs=['Start(a=b)'],outputs=['End(cube_result=.)'])\n\n    # We can write and read from the state using nodes of the from 'State/key'\n    # State nodes are special nodes that are not part of the execution, but are used to store information.\n    E('Start-&gt;State/init_a(0=a)')\n    V('End',inputs=['State/init_a(init_a=.)'])\n\nd=D()\nfor trace in d.run({'a':1,'b':2}):\n    trace.pprint(skip_passthrough=True)\nd.output\n\n\n\n\n\n\n\n\nNode square:\n{'input': {'a': 2}, 'output': 4}\n================================================================================\n\n\n{'square_result': 4, 'init_a': 1}\n\n\nIf we dont supply a node that writes to a State, we can supply the state manually when running the diagram\n\nwith Define('Remember Input',type='decision',direction='LR') as D:\n    V('square',Pow(2),inputs=[\n        ('Start(a=b)',is_b_even),\n        ],\n        outputs=['End(square_result=.)'])\n    V('cube',Pow(3),inputs=['Start(a=b)'],outputs=['End(cube_result=.)'])\n\n    E('Start-&gt;State/init_a(0=a)')\n    V('End',inputs=['State/init_a(init_a=.)'])\n    V('End',inputs=['State/remember(remember=.)'])\n\nd=D()\nfor trace in d.run({'a':1,'b':2},state={'remember':100}):\n    trace.pprint(skip_passthrough=True)\nd.output\n\n\n\n\n\n\n\n\nNode square:\n{'input': {'a': 2}, 'output': 4}\n================================================================================\n\n\n{'square_result': 4, 'init_a': 1, 'remember': 100}\n\n\nDiagram State is a very powerful feature of ladle. To learn more about the power of state, see the customizing state section.",
    "crumbs": [
      "Tutorials",
      "Decision Diagrams"
    ]
  },
  {
    "objectID": "docs/tutorials/decision_diagrams.html#breakpoint---interactive-diagrams",
    "href": "docs/tutorials/decision_diagrams.html#breakpoint---interactive-diagrams",
    "title": "Decision Diagrams",
    "section": "Breakpoint - interactive Diagrams",
    "text": "Breakpoint - interactive Diagrams\nGetting feedback from the user mid flow can lead to very powerful agents. To enable this in ladle, we can have breakpoint like nodes in Decision Diagrams. They can be defined like so:\n\nis_42 = lambda x: x==42\ndef question_life(x):\n    return f'is {x} really the answer?'\n\ndef yes_man(message):\n    return f'Yes man, {message}'\n\nwith Define('Answer to Life with Feedback',type='decision',direction='LR') as D:\n    V('add',add,\n        inputs=['Start(**)'],\n        outputs=[\n            ('End',is_42),\n            'Reflect(x=.)'\n        ])\n    # we mark a node as a breakpoint via the is_break flag\n    V('Reflect',question_life,outputs=['GetFeedback'])\n    V('GetFeedback',yes_man,is_break=True,\n        outputs=['End']\n    )\n\n\n\n\n\n\n\n\nWhen we run a diagram, we actually run it either to the End, or the first breakpoint we encounter. We can check this via the finished attribute of the diagram.\n\nd1=D()\nfor trace in d1.run({'a':20,'b':22}):\n    trace.pprint(skip_passthrough=True)\n\nd1.finished,d1.output\n\nNode add:\n{'input': {'a': 20, 'b': 22}, 'output': 42}\n================================================================================\n\n\n(True, 42)\n\n\n\nd2=D()\nfor trace in d2.run({'a':20,'b':21}):\n    trace.pprint(skip_passthrough=True)\n\nd2.finished,d2.output\n\nNode add:\n{'input': {'a': 20, 'b': 21}, 'output': 41}\n================================================================================\nNode Reflect:\n{'input': {'x': 41}, 'output': 'is 41 really the answer?'}\n================================================================================\n\n\n(False, 'is 41 really the answer?')\n\n\nrunning an unfinished diagram again will cause it to continue, while running a finished diagram again will cause it to restart.\n\nfor trace in d2.run('43 is fine too'):\n    trace.pprint(skip_passthrough=True)\n\nd2.finished,d2.output\n\nNode GetFeedback:\n{'input': {0: '43 is fine too'}, 'output': 'Yes man, 43 is fine too'}\n================================================================================\n\n\n(True, 'Yes man, 43 is fine too')\n\n\n\nfor trace in d1.run({'a':7,'b':35}):\n    trace.pprint(skip_passthrough=True)\n\nd1.finished,d1.output\n\nNode add:\n{'input': {'a': 7, 'b': 35}, 'output': 42}\n================================================================================\n\n\n(True, 42)\n\n\nWe can use this pattern to communicate with the user in a stateful way.\nLets define a mock client, in practice, this will be your app’s logic\n\nclass Client:\n    def __init__(self,user_messages):\n        self.msg_queue = user_messages\n    def end_of_conversation(self):\n        return len(self.msg_queue)==0\n    def get_next_user_input(self):\n        next_msg = self.msg_queue.pop(0)\n        print(f'User: {next_msg}')\n        return next_msg\n    def send_answer(self,answer):\n        print(f'Assistant: {answer}')\n    def new_topic(self):\n        print('='*100)\n\n\nuser_messages = [\n    {'a':20,'b':22},\n    {'a':20,'b':23},\n    f'43 is fine too',\n    {'a':7,'b':35}\n]\nclient = Client(user_messages)\n\nd=D()\nwhile not client.end_of_conversation():\n    next_input = client.get_next_user_input()\n    for trace in d.run(next_input):\n        pass\n    client.send_answer(d.output)\n    if d.finished:\n        client.new_topic()\n\nUser: {'a': 20, 'b': 22}\nAssistant: 42\n====================================================================================================\nUser: {'a': 20, 'b': 23}\nAssistant: is 43 really the answer?\nUser: 43 is fine too\nAssistant: Yes man, 43 is fine too\n====================================================================================================\nUser: {'a': 7, 'b': 35}\nAssistant: 42\n====================================================================================================",
    "crumbs": [
      "Tutorials",
      "Decision Diagrams"
    ]
  },
  {
    "objectID": "docs/tutorials/old_tutorial.html",
    "href": "docs/tutorials/old_tutorial.html",
    "title": "Tutorial",
    "section": "",
    "text": "import os\nfrom ladle.diagrams import (\n    Define,\n    Scope,\n    V,\n    E,\n    draw_diagram\n)\n\nfrom ladle.core import  checkLogs\nfrom ladle.viz import draw_nx\nimport pytest\nimport asyncio"
  },
  {
    "objectID": "docs/tutorials/old_tutorial.html#defining-a-diagram",
    "href": "docs/tutorials/old_tutorial.html#defining-a-diagram",
    "title": "Tutorial",
    "section": "Defining a diagram",
    "text": "Defining a diagram\nLet’s define the simplest flow diagram using V - it doesn’t do actions just runs nodes in parallel.\n\nwith Define('basic_flow1',type='flow') as D:\n    V('Start')\n    V('End')\n    V('transfer',inputs=['Start'],outputs=['End'])\n\n\n\n\n\n\n\n\nWe can define the same diagram using E.\n\nwith Define('basic_flow2',type='flow') as D:\n    E('Start-&gt;transfer')\n    E('transfer-&gt;End')\n\n\n\n\n\n\n\n\nWe can also print out a diagram without rendering it\n\ndraw_diagram(D)"
  },
  {
    "objectID": "docs/tutorials/old_tutorial.html#running-a-diagram",
    "href": "docs/tutorials/old_tutorial.html#running-a-diagram",
    "title": "Tutorial",
    "section": "Running a diagram",
    "text": "Running a diagram\nWe create an instance of diagram D to make sure we get a fresh copy of the diagram in cases where we want have multiple instances of the same diagram.\n\nd = D()\n\nRun the diagram\n\n# Can run the whole diagram fom beginning to the end\nprint('Run the whole diagram fom beginning to the end:')\nprint(d.run_all(0))\n# We can check if diagram got to the end    \nprint('Check if diagram got to the end:')\nprint(d.finished)\n# We can check the output of the diagram\nprint('Check the output of the diagram:')\nprint(d.output)\n\nRun the whole diagram fom beginning to the end:\n0\nCheck if diagram got to the end:\nTrue\nCheck the output of the diagram:\n0\n\n\nUsually we would want to run the diagram step by step to see what’s happening.\nFor that we use d.run() and print the trace every node that is run will return a trace object.\nThis trace object contains the input and output of the node as well as some other useful information we can use this trace to both debug the diagram.\nWe can print the trace to the user.\n\nprint('Run the diagram step by step to see what\\'s happening:')\nfor trace in d.run(0):\n    trace.pprint()\n\nRun the diagram step by step to see what's happening:\nNode Start:\n{'input': {0: 0}, 'output': 0}\n================================================================================\nNode transfer:\n{'input': {0: 0}, 'output': 0}\n================================================================================\nNode End:\n{'input': {0: 0}, 'output': 0}\n================================================================================\n\n\nOr we can save the trace to a file (logging)\n\nlog_file = 'log.txt'\nfor trace in d.run(0):\n    trace.pprint(file=log_file)\n\nLet’s take a look at the log file\n\n! cat log.txt\nos.unlink(log_file)\n\nNode Start:\n{'input': {0: 0}, 'output': 0}\n================================================================================\nNode transfer:\n{'input': {0: 0}, 'output': 0}\n================================================================================\nNode End:\n{'input': {0: 0}, 'output': 0}\n================================================================================"
  },
  {
    "objectID": "docs/tutorials/old_tutorial.html#double-splat",
    "href": "docs/tutorials/old_tutorial.html#double-splat",
    "title": "Tutorial",
    "section": "Double splat (**)",
    "text": "Double splat (**)\n** is used to “expand” a dict into keyword arguments.\nSum node expects two arguments x and y. We unpack the output of the Parallel_end node into keyword arguments.\n\ndef plus1(x):\n    return x+1\n\ndef plus2(y):\n    return y+2\n\ndef sum2(x,y):\n    return x+y\n\nwith Define('parallel_flow_splat',type='flow') as ParallelDS:\n    V('Start',\n        outputs=['Parallel_node1(x=x)','Parallel_node2(y=y)']\n        )\n    V('Parallel_node1',plus1)\n    V('Parallel_node2',plus2)\n    E('Parallel_node1-&gt;Parallel_end(x=.)')\n    E('Parallel_node2-&gt;Parallel_end(y=.)')\n    V('Sum',sum2)\n    E('Parallel_end-&gt;Sum(**)') \n    E('Sum-&gt;End')\n\n\nd = ParallelDS()\nfor trace in d.run({'x':1,'y':2}):\n    trace.pprint()\n\n\n\n\n\n\n\n\nNode Start:\n{'input': {'x': 1, 'y': 2}, 'output': {'x': 1, 'y': 2}}\n================================================================================\nNode Parallel_node2:\n{'input': {'y': 2}, 'output': 4}\n================================================================================\nNode Parallel_node1:\n{'input': {'x': 1}, 'output': 2}\n================================================================================\nNode Parallel_end:\n{'input': {'x': 2, 'y': 4}, 'output': {'x': 2, 'y': 4}}\n================================================================================\nNode Sum:\n{'input': {'x': 2, 'y': 4}, 'output': 6}\n================================================================================\nNode End:\n{'input': {0: 6}, 'output': 6}\n================================================================================\n\n\nIf we don’t use double splat, the output of parallel end is passed as one argument to the Sum node.\nWe get an error because the sum function expects two arguments.\n\nwith Define('parallel_flow',type='flow') as ParallelD:\n    V('Start',\n        outputs=['Parallel_node1(x=x)','Parallel_node2(y=y)']\n        )\n    V('Parallel_node1',plus1)\n    V('Parallel_node2',plus2)\n    E('Parallel_node1-&gt;Parallel_end(x=.)')\n    E('Parallel_node2-&gt;Parallel_end(y=.)')\n    V('Sum',sum)\n    E('Parallel_end-&gt;Sum') \n    E('Sum-&gt;End')\n\nd = ParallelD()\ntry:\n    for trace in d.run({'x':1,'y':2}):\n        trace.pprint()\nexcept Exception as e:\n    print(f\"Error: {e}\")\n\n\n\n\n\n\n\n\nNode Start:\n{'input': {'x': 1, 'y': 2}, 'output': {'x': 1, 'y': 2}}\n================================================================================\nNode Parallel_node1:\n{'input': {'x': 1}, 'output': 2}\n================================================================================\nNode Parallel_node2:\n{'input': {'y': 2}, 'output': 4}\n================================================================================\nNode Parallel_end:\n{'input': {'x': 2, 'y': 4}, 'output': {'x': 2, 'y': 4}}\n================================================================================\nError: When running node 'Sum[None]':\nFunction &lt;built-in function sum&gt;(args=[{'x': 2, 'y': 4}],kwargs={})\nreturned\nError 'unsupported operand type(s) for +: 'int' and 'str''\n\n\n\nWe can always explicitly pass the arguments to the Sum node.\nBut double splat is more convenient when there are many arguments.\n\nwith Define('parallel_flow_explicit',type='flow') as ParallelE:\n    V('Start',\n        outputs=['Parallel_node1(x=x)','Parallel_node2(y=y)']\n        )\n    V('Parallel_node1',plus1)\n    V('Parallel_node2',plus2)\n    E('Parallel_node1-&gt;Parallel_end(x=.)')\n    E('Parallel_node2-&gt;Parallel_end(y=.)')\n    V('Sum',sum2)\n    E('Parallel_end-&gt;Sum(x=x,y=y)') \n    E('Sum-&gt;End')\n\nd = ParallelE()\nd.run_all({'x': 1,'y':2})\nprint( 'finished:', d.finished)\nprint( 'output:',d.output)\n\n\n\n\n\n\n\n\nfinished: True\noutput: 6"
  },
  {
    "objectID": "docs/tutorials/old_tutorial.html#unnamed-ports-for-discarding-inputs",
    "href": "docs/tutorials/old_tutorial.html#unnamed-ports-for-discarding-inputs",
    "title": "Tutorial",
    "section": "Unnamed ports for discarding inputs",
    "text": "Unnamed ports for discarding inputs\nWe can discard inputs that we don’t need in the next node.\n\ndef plus1(x):\n    return x+1\n\n\nwith Define('unnamed_ports',type='flow') as D:\n    E('Start-&gt;Transfer(y=y)')\n    V('plus',plus1,\n        inputs=[\n        'Start(_=x)',\n        'Transfer(x=y)'],\n        outputs=['End']\n        )\n\n\n\n\n\n\n\n\n\nd=D()\n# with checkLogs(name='ladle.diagrams.flow'):    \nfor trace in d.run({'x':1,'y':2}):\n    trace.pprint()\n\nNode Start:\n{'input': {'x': 1, 'y': 2}, 'output': {'x': 1, 'y': 2}}\n================================================================================\nNode Transfer:\n{'input': {'y': 2}, 'output': {'y': 2}}\n================================================================================\nNode plus:\n{'input': {'x': 2}, 'output': 3}\n================================================================================\nNode End:\n{'input': {0: 3}, 'output': 3}\n================================================================================"
  },
  {
    "objectID": "docs/tutorials/old_tutorial.html#nested-breaks",
    "href": "docs/tutorials/old_tutorial.html#nested-breaks",
    "title": "Tutorial",
    "section": "Nested breaks",
    "text": "Nested breaks\n\ndef is_3(x):\n    return x['content'] == 3\n\ndef is_10(x):\n    return x['content'] == 10\n\nwith Define('inner_break') as InnerD:\n    V('add',MessageAdder(0),inputs=['Start(**)'],outputs=['break'])\n    V('break',is_break=True,outputs=['add(**)',('End',is_3)])\n    \n\nwith Define('outer_break') as OuterD:\n    V('inner',InnerD,inputs=['Start(**)'],outputs=['break'])\n    V('break',is_break=True,outputs=['inner(**)',('End',is_10)])\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nExpected Behavior: * We enter the inner diagram and remain there until we receive a message with content=3 * When we receive a 3, we exit the inner diagram and hit the break in the outer diagram * The outer diagram will only terminate when we receive a message with content=10 * To completely exit both diagrams, we need a sequence where: * First a message with content=3 (to exit the inner diagram) * Then a message with content=10 (to exit the outer diagram)\n\ninputs = [\n    {'role':'human','content':0},\n    {'role':'human','content':1},\n    {'role':'human','content':2},\n    {'role':'human','content':3}, # exit inner the first time\n    {'role':'human','content':5}, # go to outer and then to inner again\n    {'role':'human','content':10}, # 10 wont get us out of the inner diagram\n    {'role':'human','content':3}, # exit inner the second time\n    {'role':'human','content':10}, # 10 will get us out of the outer diagram\n]\nouter_d = OuterD()\n\nwhile True:\n    for trace in outer_d.run(input=inputs.pop(0)):\n        #print(f'{trace.node_name[0]:&lt;16} == {trace.input_}')\n        trace.pprint(skip_passthrough=True) # we use passthrough=True to skip the nodes that only pass the information through and dont' change it\n    if outer_d.finished:\n        break\n\nassert outer_d.output == {'role': 'human', 'content': 10}\n\nNode inner.add:\n{ 'input': {'content': 0, 'role': 'human'},\n  'output': {'content': 0, 'role': 'adder'}}\n================================================================================\nNode inner:\n{ 'input': {'content': 0, 'role': 'human'},\n  'output': {'content': 0, 'role': 'adder'}}\n================================================================================\nNode inner.add:\n{ 'input': {'content': 1, 'role': 'human'},\n  'output': {'content': 1, 'role': 'adder'}}\n================================================================================\nNode inner:\n{ 'input': {'content': 1, 'role': 'human'},\n  'output': {'content': 1, 'role': 'adder'}}\n================================================================================\nNode inner.add:\n{ 'input': {'content': 2, 'role': 'human'},\n  'output': {'content': 2, 'role': 'adder'}}\n================================================================================\nNode inner:\n{ 'input': {'content': 2, 'role': 'human'},\n  'output': {'content': 2, 'role': 'adder'}}\n================================================================================\nNode inner:\n{ 'input': {'content': 3, 'role': 'human'},\n  'output': {'content': 3, 'role': 'human'}}\n================================================================================\nNode inner.add:\n{ 'input': {'content': 5, 'role': 'human'},\n  'output': {'content': 5, 'role': 'adder'}}\n================================================================================\nNode inner:\n{ 'input': {'content': 5, 'role': 'human'},\n  'output': {'content': 5, 'role': 'adder'}}\n================================================================================"
  },
  {
    "objectID": "docs/tutorials/old_tutorial.html#default-states",
    "href": "docs/tutorials/old_tutorial.html#default-states",
    "title": "Tutorial",
    "section": "Default states",
    "text": "Default states\nKey points about default states:\n\nWriting to state:\nUse E('node-&gt;state/key') to save a node’s output to state with key key.\nReading from state: Use E('state/key-&gt;node(port=.)') to read from state.\nNo special setup needed: Default states work out of the box without any configuration.\nValues persist throughout diagram execution: Each diagram instance maintains its own separate state.\n\n\ndef plus1(x):\n    return x+1\n\ndef plus2(x):\n    return x+2\n\n\n# with checkLogs(name='ladle.diagrams.validate'):\nwith Define('states') as StateD:\n    V('Option1',plus2)\n    V('Default_option',plus1)\n    E('Start-&gt;Option1',cond=mod2)\n    E('Start-&gt;Default_option')\n    E('Default_option-&gt;End')\n    E('Option1-&gt;End')\n\n    E('Start-&gt;state/start')\n    E('state/start-&gt;End(start_state=.)')\n\n\n\n\n\n\n\n\n\nd = StateD()\nprint('Running with input 1:')\nfor trace in d.run(1):\n    trace.pprint()\nprint('Running with input 2:')\nfor trace in d.run(2):\n    trace.pprint()\n\nRunning with input 1:\nNode Start:\n{'input': {0: 1}, 'output': 1}\n================================================================================\nNode Default_option:\n{'input': {0: 1}, 'output': 2}\n================================================================================\nNode End:\n{'input': {0: 2, 'start_state': 1}, 'output': {0: 2, 'start_state': 1}}\n================================================================================\nRunning with input 2:\nNode Start:\n{'input': {0: 2}, 'output': 2}\n================================================================================\nNode Option1:\n{'input': {0: 2}, 'output': 4}\n================================================================================\nNode End:\n{'input': {0: 4, 'start_state': 2}, 'output': {0: 4, 'start_state': 2}}\n================================================================================\n\n\nIf we don’t pass the state input from another node we need to initialize it on run\n\ndef plus(x,y):\n    return x+y\n\nwith Define('init_state_no_clash') as NoClash:\n    \n    V('add1',plus,\n        inputs=['Start(x)','State/init(y)'],\n        outputs=['State/first_sum']\n        )\n\n    V('break',is_break=True,inputs=['add1(x)'])\n\n    V('add2',plus,\n        inputs=['break(x)','State/first_sum(y)'],\n        outputs=['End']\n        )\n\n\n\n\n\n\n\n\nIf we don’t initialize the state on run, we get an error.\n\nd = NoClash()\ntry:\n    for trace in d.run(input=10):\n        trace.pprint()\nexcept AttributeError as e:\n    print(f\"Error: {e}\")\n\nNode Start:\n{'input': {0: 10}, 'output': 10}\n================================================================================\nError: When getting state key 'init' from state BaseModelExtra():\n\nOriginal error: 'BaseModelExtra' object has no attribute 'init'\n\n\n\ninputs = [\n    10,\n    100\n]\n\noutputs = []\nd=NoClash()\nwhile True:\n    # note that here the init state is preserved between runs\n    for trace in d.run(input=inputs.pop(0),state={'init':1000}):\n        trace.pprint()\n    outputs.append(d.output)\n    if d.finished:\n        break\n\nassert outputs == [1010,1110],outputs\n\nNode Start:\n{'input': {0: 10}, 'output': 10}\n================================================================================\nNode add1:\n{'input': {'x': 10, 'y': 1000}, 'output': 1010}\n================================================================================\nNode break:\n{'input': {0: 100}, 'output': 100}\n================================================================================\nNode add2:\n{'input': {'x': 100, 'y': 1010}, 'output': 1110}\n================================================================================\nNode End:\n{'input': {0: 1110}, 'output': 1110}\n================================================================================"
  },
  {
    "objectID": "docs/tutorials/old_tutorial.html#custom-states",
    "href": "docs/tutorials/old_tutorial.html#custom-states",
    "title": "Tutorial",
    "section": "Custom states",
    "text": "Custom states\nCustom states provide a way to implement more sophisticated state management behavior in your diagrams. They are implemented using Pydantic BaseModel classes.\nLet’s see an example of a history of values custom state.\n\nfrom ladle.core import NamedLambda\nfrom pydantic import BaseModel,ConfigDict,computed_field\n\ndef plus1(x):\n    return x+1\n\n# a custom state is any basemodel\nclass CustomState(BaseModel):\n    # we can allow arbitrary attributes by setting extra='allow'\n    # this is useful for defining on the fly state keys with normal behavior\n    model_config = ConfigDict(extra='allow')\n    # Define typed fields with default values\n    history:list[int] = list()\n\n    # Custom methods to manipulate state\n    def save(self,value):\n        self.history.append(value)\n\nState Operations: * Read from state using State/key-&gt;node(port=.) * Write to state using node-&gt;State/key * Custom operations through defined methods like save()\n\nwith Define('save_state',state=CustomState) as D:\n    V('add',plus1)\n\n    E('Start-&gt;add')\n    E('add-&gt;End')\n    E('add-&gt;State/save') \n\n# TODO - not sure what those mean and where to put them\n# we can customize the state behaviour of a given state key by using the State function\n# set_append=True means that the state value will be appended to the list of values for the given key\n# we can also add custom getters and setters to a state key for more complex state behaviour\n# getter is a function of the form (value)-&gt;(processed_value)\n# setter is a function of the form (old_value,new_value)-&gt;(processed_value)\n\n\n\n\n\n\n\n\nHere is another example of a custom state. Several nodes writing to State/history to maintain a record of values.\n\nfrom itertools import pairwise\nfrom typing import Any,Annotated\nclass CustomState(BaseModel):\n    model_config = ConfigDict(extra='allow')\n\n    history: Annotated[list[Any],list.append] = list()\n\nwith Define('far ancestor writing to state',type='flow',state=CustomState) as D:\n    a = MessageAdder(0)\n\n    for u in ['a','b','c']:\n        V(u,a)\n        E(f'{u}-&gt;state/history')\n\n    for u,v in pairwise(['Start','a','b','c','End']):\n        E(f'{u}-&gt;{v}(**)')"
  },
  {
    "objectID": "docs/tutorials/old_tutorial.html#basic-batch-processing",
    "href": "docs/tutorials/old_tutorial.html#basic-batch-processing",
    "title": "Tutorial",
    "section": "Basic Batch Processing",
    "text": "Basic Batch Processing\nThe simplest form of batch processing uses the for_each parameter to iterate over lists of items:\n\nwith Define('basic_batch', type='flow') as D:\n    V('make_items', MakeItems(3, delta=1, sleep=0.1), inputs=['Start'])\n    V('more_items', MakeItems(3, delta=10, sleep=0.1),\n        for_each=['x'],  # Iterate over each item in the input\n        inputs=['make_items(x)'],\n        outputs=['End'],\n        flat=True  # Flatten the resulting nested lists\n    )\n    V('End', sort)\n\n\n\n\n\n\n\n\nIn this example: * make_items generates a list [0, 1, 2] * more_items processes each number separately, generating [10, 11, 12] for each input * The flat=True parameter combines all results into a single list * Finally, the results are sorted\nWhen run with input 0, produces: [0, 1, 2, 10, 11, 12, 20, 21, 22]\n\nd = D()\nfor trace in d.run(0):\n    trace.pprint()\n\nNode Start:\n{'input': {0: 0}, 'output': 0}\n================================================================================\nNode make_items:\n{'input': {0: 0}, 'output': [0, 1, 2]}\n================================================================================\nNode more_items[0]:\n{'input': {'x': 0}, 'output': [0, 10, 20]}\n================================================================================\nNode more_items[1]:\n{'input': {'x': 1}, 'output': [1, 11, 21]}\n================================================================================\nNode more_items[2]:\n{'input': {'x': 2}, 'output': [2, 12, 22]}\n================================================================================\nNode End:\n{ 'input': {0: [0, 10, 20, 1, 11, 21, 2, 12, 22]},\n  'output': [0, 1, 2, 10, 11, 12, 20, 21, 22]}\n================================================================================"
  },
  {
    "objectID": "docs/tutorials/old_tutorial.html#cartesian-products",
    "href": "docs/tutorials/old_tutorial.html#cartesian-products",
    "title": "Tutorial",
    "section": "Cartesian Products",
    "text": "Cartesian Products\nYou can process multiple input streams in parallel using for_each with multiple parameters:\n\nwith Define('batch_processing_sleep_product',type='flow') as D:\n    V('one',MakeItemsAsync(2,1,sleep=0.05),inputs=['Start(0=1)'])\n    V('two',MakeItemsAsync(2,100,sleep=0.10),inputs=['Start(0=2)'])\n    V('three',MakeItemsAsync(2,10000,sleep=0.2),inputs=['Start(0=3)'])\n    V('sum',sum_all,inputs=['one(0)','two(1)','three(2)'],for_each=[0,1,2])\n    V('End',sort,inputs=['sum'])\n\n\n\n\n\n\n\n\n\nsum_all(1,2,3)\n\n6\n\n\n\nd=D()\nfor trace in d.run({1:10,2:1000,3:100000}):\n    # trace.pprint()\n    pass\n\nassert d.output == [101010, 101011, 101110, 101111, 111010, 111011, 111110, 111111]"
  },
  {
    "objectID": "docs/tutorials/old_tutorial.html#mixing-stream-and-non-stream-inputs",
    "href": "docs/tutorials/old_tutorial.html#mixing-stream-and-non-stream-inputs",
    "title": "Tutorial",
    "section": "Mixing Stream and Non-Stream Inputs",
    "text": "Mixing Stream and Non-Stream Inputs\nYou can combine batch processing with regular inputs:\n\n# TODO - try to do sub diagram with flat and without flat to see what's happening\n\n\nwith Define('batch_processing_comb_bad',type='flow') as D_bad:\n    V('non_stream_first',add_to_arr,inputs=['Start(arr)','State/x(x = .)'])\n    V('stream_first',MakeItemsAsync(3,10,sleep=0.05),inputs=['Start(x)'],for_each=['x'],flat=True)\n\n    V('Concat',concat,inputs=['non_stream_first(0)','stream_first(1)'])\n    V('End',inputs=['Concat'])\n\n\n\n\n\n\n\n\n\ndd = D_bad()\nfor trace in dd.run([0],state={'x':100,'y':1000}):\n    trace.pprint(skip_passthrough=True)\n\nNode non_stream_first:\n{'input': {'arr': [0], 'x': 100}, 'output': [100]}\n================================================================================\nNode stream_first[0]:\n{'input': {'x': 0}, 'output': [0, 10, 20]}\n================================================================================\nNode Concat:\n{'input': {0: [100], 1: [0, 10, 20]}, 'output': [100, 0, 10, 20]}\n================================================================================\n\n\n\nwith Define('batch_processing_comb',type='flow') as D:\n    V('non_stream_first',add_to_arr,inputs=['Start(arr)','State/x(x = .)'])\n    V('stream_first',MakeItemsAsync(3,10,sleep=0.05),inputs=['Start(x)'],for_each=['x'],flat=True)\n\n    V('non_stream_second',add_to_arr,inputs=['non_stream_first(_)','stream_first(arr)','State/y(x = .)'])\n    V('stream_second',add_to_arr,inputs=['stream_first(x)','non_stream_first(arr)'],for_each=['x'],flat=True)\n\n    V('Concat',concat,inputs=['non_stream_second(0)','stream_second(1)'])\n    V('End',sort,inputs=['Concat'])\n\n\n\n\n\n\n\n\n\n# with checkLogs(name='ladle.diagrams.flow'):\nd=D()\nfor trace in d.run([0],state={'x':100,'y':1000}):\n    trace.pprint(skip_passthrough=True)\n\nNode non_stream_first:\n{'input': {'arr': [0], 'x': 100}, 'output': [100]}\n================================================================================\nNode stream_first[0]:\n{'input': {'x': 0}, 'output': [0, 10, 20]}\n================================================================================\nNode non_stream_second:\n{'input': {'arr': [0, 10, 20], 'x': 1000}, 'output': [1000, 1010, 1020]}\n================================================================================\nNode stream_second[2]:\n{'input': {'arr': [100], 'x': 20}, 'output': [120]}\n================================================================================\nNode stream_second[0]:\n{'input': {'arr': [100], 'x': 0}, 'output': [100]}\n================================================================================\nNode stream_second[1]:\n{'input': {'arr': [100], 'x': 10}, 'output': [110]}\n================================================================================\nNode Concat:\n{ 'input': {0: [1000, 1010, 1020], 1: [120, 100, 110]},\n  'output': [1000, 1010, 1020, 120, 100, 110]}\n================================================================================\nNode End:\n{ 'input': {0: [1000, 1010, 1020, 120, 100, 110]},\n  'output': [100, 110, 120, 1000, 1010, 1020]}\n================================================================================"
  },
  {
    "objectID": "docs/tutorials/old_tutorial.html#nested-diagrams-in-batch-processing",
    "href": "docs/tutorials/old_tutorial.html#nested-diagrams-in-batch-processing",
    "title": "Tutorial",
    "section": "Nested Diagrams in Batch Processing",
    "text": "Nested Diagrams in Batch Processing\nYou can even use entire diagrams as batch processors:\n\nasync def add_sleep(x):\n    await asyncio.sleep(0.1)\n    return x+1\n\n\nwith Define('async_adder')as AsyncAdd:\n    V('add',add_sleep,inputs=['Start(x=x)'],outputs=['End'])\n\nasync_add=AsyncAdd()\nfor trace in async_add.run({'x':0}):\n    pass\n\n\n\n\n\n\n\n\n\nwith Define('nested_foreach',type='flow') as D:\n    V('generate',MakeItemsAsync(3,10,sleep=0.05),inputs=['Start(**)'])\n    V('add',AsyncAdd,inputs=['generate(x=.)'],for_each=['x'])\n    V('End',sort,inputs=['add'])\n\n\n\n\n\n\n\n\n\nd=D()\nfor trace in d.run({'x':0}):\n    trace.pprint(skip_passthrough=True)\n\nNode generate:\n{'input': {'x': 0}, 'output': [0, 10, 20]}\n================================================================================\nNode add[1].add:\n{'input': {'x': 10}, 'output': 11}\n================================================================================\nNode add[0].add:\n{'input': {'x': 0}, 'output': 1}\n================================================================================\nNode add[2].add:\n{'input': {'x': 20}, 'output': 21}\n================================================================================\nNode add[1]:\n{'input': {'x': 10}, 'output': 11}\n================================================================================\nNode add[2]:\n{'input': {'x': 20}, 'output': 21}\n================================================================================\nNode add[0]:\n{'input': {'x': 0}, 'output': 1}\n================================================================================\nNode End:\n{'input': {0: [11, 21, 1]}, 'output': [1, 11, 21]}\n================================================================================"
  },
  {
    "objectID": "docs/tutorials/old_tutorial.html#real-world-example-text-processing",
    "href": "docs/tutorials/old_tutorial.html#real-world-example-text-processing",
    "title": "Tutorial",
    "section": "Real-World Example: Text Processing",
    "text": "Real-World Example: Text Processing\nHere’s a practical example of batch processing for text analysis:\n\nsample_doc = {'text':\"\"\"\nThe elephant is one of the most remarkable creatures on Earth. Known for their intelligence and complex social structures, elephants form deep family bonds that can last a lifetime. These gentle giants possess remarkable memory capabilities and demonstrate emotional behaviors like mourning their dead. Their distinctive trunks, containing over 40,000 muscles, serve multiple purposes from gathering food to expressing affection.\n\nThe arctic fox is a fascinating animal that has adapted perfectly to life in the extreme cold. During winter, its thick white fur provides both insulation and camouflage in the snowy landscape, while in summer its coat turns brownish-gray to blend with the tundra. These resourceful predators can survive temperatures as low as -50°C (-58°F) and will travel vast distances across the Arctic ice in search of food, often following polar bears to scavenge their leftovers.\n\nThe octopus stands out as one of the ocean's most intelligent invertebrates. With nine brains (one central brain and eight additional ones in each arm), these cephalopods can solve complex puzzles, open jars, and even use tools. Their remarkable ability to change both color and texture allows them to perfectly mimic their surroundings, making them masters of disguise. Despite their impressive capabilities, most octopus species live only 1-2 years, making their intelligence even more remarkable given their short lifespan.\n\"\"\",\n'id':'animal_book'\n}\n\n\ndef splitter(doc):\n    doc_id = doc['id']\n    text = doc['text']\n    return [{'text':chunk.strip(),'id':f'{doc_id}_{i}'} for i,chunk in enumerate(text.split('\\n\\n'))]\n\n\ndef summarizer(text):\n    return text[:20]\n\n\nwith Define('Distilation Rag Uploader',type='flow') as D:\n    V('split_texts',splitter,inputs=['Start(doc=.)'],for_each=['doc'],flat=True)\n    V('summarize_texts',summarizer,inputs=['split_texts(text=text)'],for_each=['text'])\n    V('End',sort,inputs=['summarize_texts'])\n\n\n\n\n\n\n\n\nThis pipeline: * Takes a document and splits it into chunks * Processes each chunk independently * Combines and sorts the results\n\nd = D()\nfor trace in d.run([sample_doc]):\n    #trace.pprint()\n    pass\n\nassert d.output == ['The arctic fox is a ', 'The elephant is one ', 'The octopus stands o'],d.output"
  },
  {
    "objectID": "docs/tutorials/stateful_nodes.html",
    "href": "docs/tutorials/stateful_nodes.html",
    "title": "Stateful Nodes",
    "section": "",
    "text": "In some cases, we would like our node to be stateful. If you are not sure whether you should make your node stateful, you probably dont.\nBut, you can, here is how:\n\n# you define a function object that has __call__ method\nclass StatefulSum():\n\n    def __init__(self):\n        self.history = []\n    def __call__(self,item):\n        self.history.append(item)\n        return sum(self.history)\n    def __str__(self):\n        return f'StatefulSum'\n\n    # And you have to implement the following 3 methods\n    # reset the state\n    def reset(self):\n        self.history = []\n\n    # dump the state as a json serializable object\n    def dump_state(self):\n        return self.history\n\n    # load the state from a json serializable object\n    def load_state(self,state_object):\n        self.history = state_object\n\n\ns = StatefulSum()\ns(1)\ns(2)\ns(3)\ns.dump_state()\n\n[1, 2, 3]\n\n\n\nfrom ladle.diagrams import V,E,Define\nfrom ladle.std import Condition\nfrom pydantic import BaseModel, ConfigDict\n\n\nclass TimerState(BaseModel):\n    model_config = ConfigDict(extra='allow')\n    timer: int = 0\n\n    def set_timer(self,val):\n        self.timer = val\n\n    def tick(self):\n        self.timer = self.timer -1 \n        return self.timer\n\n    @classmethod\n    def is_time_up(cls,val):\n        return val &lt;= 0\n\n\nwith Define('Stateful node example',type='decision',state=TimerState) as D:\n    V('Start',outputs=[\n        'state/set_timer(0=turns)',\n        'counter(message=message)'\n    ])\n\n    V('counter',\n        inputs=['state/tick(timer)'],\n        outputs=[\n            ('End',Condition(TimerState.is_time_up,'0=timer','is_time_up')),\n            'message(0=message)'\n        ]\n        )\n\n    V('message',StatefulSum(),outputs=['break']),\n    V('break',is_break=True,outputs=['counter(message=message)'])\n\n\n\n\n\n\n\n\n\ninputs = [\n    {'message':1,'turns':4},\n    {'message':2},\n    {'message':3},\n    {'message':4},\n]\nd=D()\n\nwhile True:\n    inp = inputs.pop(0)\n    for trace in d.run(inp):\n        trace.pprint(skip_passthrough=True)\n    \n    if d.finished:\n        break\n\ninputs\n\nNode message:\n{'input': {0: 1}, 'output': 1}\n================================================================================\nNode message:\n{'input': {0: 2}, 'output': 3}\n================================================================================\nNode message:\n{'input': {0: 3}, 'output': 6}\n================================================================================\n\n\n[]\n\n\nWe can see when dumping the diagram, that the state of the message node is also saved:\n\nd.dump_state()\n\n{'state': {'timer': 0},\n 'output': {'message': 4, 'timer': 0},\n 'finished': True,\n 'next_node': None,\n 'run_uid': '5616513f-8a5b-45d0-939f-bafcfe67e475',\n 'node_state': {'message': [1, 2, 3]}}",
    "crumbs": [
      "Tutorials",
      "Stateful Nodes"
    ]
  },
  {
    "objectID": "docs/tutorials/compound_diagrams.html",
    "href": "docs/tutorials/compound_diagrams.html",
    "title": "Compound Diagrams",
    "section": "",
    "text": "Sometimes, we would like to combine parrallel flows with conditional logic in one Diagram. While this could always be performed with nested diagrams, it is also possible to create compound diagrams with the use of Scopes\ndef add(a,b):\n    return a+b\n\nclass Pow():\n    def __init__(self,power):\n        self.power = power\n    def __call__(self,a):\n        return a**self.power\n    def __str__(self):\n        return f'Pow({self.power})'\n\nclass Add():\n    def __init__(self,a):\n        self.a = a\n    def __call__(self,b):\n        return self.a+b\n    def __str__(self):\n        return f'Add({self.a})'\n\nclass IsModulo():\n    def __init__(self,mod):\n        self.mod = mod\n    def __call__(self,a):\n        return a%self.mod==0\n    def __str__(self):\n        return f'IsModulo({self.mod})'\n\nclass EqualsTo():\n    def __init__(self,value):\n        self.value = value\n    def __call__(self,a):\n        return a==self.value\n    def __str__(self):\n        return f'EqualsTo({self.value})'\nfrom ladle.diagrams import (\n    Define,\n    V,\n    E,\n    Scope # note the new import\n)",
    "crumbs": [
      "Tutorials",
      "Compound Diagrams"
    ]
  },
  {
    "objectID": "docs/tutorials/compound_diagrams.html#flow-in-decision",
    "href": "docs/tutorials/compound_diagrams.html#flow-in-decision",
    "title": "Compound Diagrams",
    "section": "Flow in Decision",
    "text": "Flow in Decision\nWe define a diagram as follows:\n\nwith Define('parallel in decision',type='decision',direction='LR') as D:\n    \n    V('parallel_start',inputs=['Start'])\n    \n    # all edges defined within a flow scope are automatically added as flow edges\n    with Scope('flow'):\n        V('square',Pow(2),inputs=['parallel_start'])\n        V('cube',Pow(3),inputs=['parallel_start'])\n        V('add',add,inputs=['square(a)','cube(b)'])\n        # we can override the scope and define an edge type explicitly\n        E('add-&gt;parallel_start',cond=EqualsTo(12),type='decision')\n    \n    E('add-&gt;End')\n\n\n\n\n\n\n\n\nA legal compound diagram must have a single start and end node for each sub scope. In this case, parallel_start and add are the start and end of the flow scope respectivly.\n\nd = D()\nfor trace in d.run(3):\n    trace.pprint()\n\nNode Start:\n{'input': {0: 3}, 'output': 3}\n================================================================================\nNode parallel_start:\n{'input': {0: 3}, 'output': 3}\n================================================================================\nNode cube:\n{'input': {0: 3}, 'output': 27}\n================================================================================\nNode square:\n{'input': {0: 3}, 'output': 9}\n================================================================================\nNode add:\n{'input': {'a': 9, 'b': 27}, 'output': 36}\n================================================================================\nNode End:\n{'input': {0: 36}, 'output': 36}\n================================================================================\n\n\n\nd = D()\nfor trace in d.run(2):\n    trace.pprint()\n\nNode Start:\n{'input': {0: 2}, 'output': 2}\n================================================================================\nNode parallel_start:\n{'input': {0: 2}, 'output': 2}\n================================================================================\nNode cube:\n{'input': {0: 2}, 'output': 8}\n================================================================================\nNode square:\n{'input': {0: 2}, 'output': 4}\n================================================================================\nNode add:\n{'input': {'a': 4, 'b': 8}, 'output': 12}\n================================================================================\nNode parallel_start:\n{'input': {0: 12}, 'output': 12}\n================================================================================\nNode square:\n{'input': {0: 12}, 'output': 144}\n================================================================================\nNode cube:\n{'input': {0: 12}, 'output': 1728}\n================================================================================\nNode add:\n{'input': {'a': 144, 'b': 1728}, 'output': 1872}\n================================================================================\nNode End:\n{'input': {0: 1872}, 'output': 1872}\n================================================================================",
    "crumbs": [
      "Tutorials",
      "Compound Diagrams"
    ]
  },
  {
    "objectID": "docs/tutorials/compound_diagrams.html#decision-in-flow",
    "href": "docs/tutorials/compound_diagrams.html#decision-in-flow",
    "title": "Compound Diagrams",
    "section": "Decision in Flow",
    "text": "Decision in Flow\nWe are not limited to a single sub scope. We can even nest them as deep as we want, though above a certain size, its better to use nested diagrams for debugability.\n\nwith Define('parallel decisions',type='flow',direction='LR') as D:\n    V('Start',outputs=['choice1','choice2'])\n    with Scope('decision'):\n        V('choice1',outputs=[\n            ('square',IsModulo(2)),\n            'cube'\n            ])\n        V('square',Pow(2),outputs=['end_choice1'])\n        V('cube',Pow(3),outputs=['end_choice1'])\n        \n        V('choice2',outputs=[\n            ('add2',IsModulo(3)),\n            'add3'\n            ])\n        V('add2',Add(2),outputs=['end_choice2'])\n        V('add3',Add(3),outputs=['end_choice2'])\n\n    V('sum',add,inputs=['end_choice1(a)','end_choice2(b)'],outputs=['End'])\n\n\n\n\n\n\n\n\nNote that even though we defined them in a single decision Scope, we have actually created 2 decision sub scopes.\n\nd=D()\nfor trace in d.run(2):\n    trace.pprint(skip_passthrough=True)\n\nNode square:\n{'input': {0: 2}, 'output': 4}\n================================================================================\nNode add3:\n{'input': {0: 2}, 'output': 5}\n================================================================================\nNode sum:\n{'input': {'a': 4, 'b': 5}, 'output': 9}\n================================================================================\n\n\n\nd=D()\nfor trace in d.run(3):\n    trace.pprint(skip_passthrough=True)\n\nNode add2:\n{'input': {0: 3}, 'output': 5}\n================================================================================\nNode cube:\n{'input': {0: 3}, 'output': 27}\n================================================================================\nNode sum:\n{'input': {'a': 27, 'b': 5}, 'output': 32}\n================================================================================",
    "crumbs": [
      "Tutorials",
      "Compound Diagrams"
    ]
  },
  {
    "objectID": "docs/tutorials/port_mapping.html",
    "href": "docs/tutorials/port_mapping.html",
    "title": "Port Mapping",
    "section": "",
    "text": "Ladle edges have a port mapping language that allows us to map subobjects of the output of one node, into the inputs of the functions of the other nodes.\nIn python, a function’s arguments are supplied as follows f(*args,**kwargs) where:\n\nargs is a list of positional arguments\nkwargs is a dictionary that maps from the name of the keyword argument to its value\npositional arguments can also be called by their name\n\nIn ladle, we encode both positional and keyword arguments as a dictionary whose keys are: * Contiguous integers in case of positional arguments * strings in case of keyword arguments * each such key is called a port of the function\nA port mapping is a sequence of terms of the form &lt;port&gt;=&lt;access_pattern&gt; Where an access pattern defines which part of the output to use.\nHere are some examples to illustrate this:\n\nfrom ladle.diagrams import V,E,Define\n\nLet us make a nested object so we can see the power of port mapping in action.\nAccess patterns try to access object attributes and then object keys. Lets see both:\n\nclass TestObj:\n    def __init__(self):\n        self.a = 10\n        self.b = {'x': 20}\n        self.c = {'y': 30}\n    def __str__(self):\n        return f'TestObj(a={self.a},b={self.b},c={self.c})'\n    def __repr__(self):\n        return self.__str__()\n\nnested_object = {\n    'a': 1,\n    'b': 2,\n    'c':{\n        'a': 3,\n        'b': 4\n    },\n    'd':TestObj(),\n}\n\nNow lets define some simple diagrams, try to guess what the input of each node will be\n\nwith Define('Key Access',direction='LR') as D:\n    E('Start-&gt;End(x=a,y=b)')\n\nprint(nested_object)\nD().run_all(nested_object)\n\n\n\n\n\n\n\n\n{'a': 1, 'b': 2, 'c': {'a': 3, 'b': 4}, 'd': TestObj(a=10,b={'x': 20},c={'y': 30})}\n\n\n{'x': 1, 'y': 2}\n\n\n\nwith Define('Nested Key Access',direction='LR') as D:\n    E('Start-&gt;End(x=d.b,y=d.b.x)')\n\nprint(nested_object)\nD().run_all(nested_object)\n\n\n\n\n\n\n\n\n{'a': 1, 'b': 2, 'c': {'a': 3, 'b': 4}, 'd': TestObj(a=10,b={'x': 20},c={'y': 30})}\n\n\n{'x': {'x': 20}, 'y': 20}\n\n\n\nwith Define('Whole Object Access',direction='LR') as D:\n    E('Start-&gt;End(a=.)')\n\nprint(nested_object)\nD().run_all(nested_object)\n\n\n\n\n\n\n\n\n{'a': 1, 'b': 2, 'c': {'a': 3, 'b': 4}, 'd': TestObj(a=10,b={'x': 20},c={'y': 30})}\n\n\n{'a': {'a': 1,\n  'b': 2,\n  'c': {'a': 3, 'b': 4},\n  'd': TestObj(a=10,b={'x': 20},c={'y': 30})}}\n\n\n\nwith Define('Positional Access',direction='LR') as D:\n    E('Start-&gt;End(0=a,1=b,x=c)')\n\nprint(nested_object)\nD().run_all(nested_object)\n\n\n\n\n\n\n\n\n{'a': 1, 'b': 2, 'c': {'a': 3, 'b': 4}, 'd': TestObj(a=10,b={'x': 20},c={'y': 30})}\n\n\n{0: 1, 1: 2, 'x': {'a': 3, 'b': 4}}\n\n\n\nwith Define('Nested Positional Access',direction='LR') as D:\n    E('Start-&gt;End(0=c.a,1=d.c)')\n\nprint(nested_object)\nD().run_all(nested_object)\n\n\n\n\n\n\n\n\n{'a': 1, 'b': 2, 'c': {'a': 3, 'b': 4}, 'd': TestObj(a=10,b={'x': 20},c={'y': 30})}\n\n\n{0: 3, 1: {'y': 30}}\n\n\n\nwith Define('Splat Access',direction='LR') as D:\n    E('Start-&gt;End(**=.,x=a)')\n\nprint(nested_object)\nD().run_all(nested_object)\n\n\n\n\n\n\n\n\n{'a': 1, 'b': 2, 'c': {'a': 3, 'b': 4}, 'd': TestObj(a=10,b={'x': 20},c={'y': 30})}\n\n\n{'a': 1,\n 'b': 2,\n 'c': {'a': 3, 'b': 4},\n 'd': TestObj(a=10,b={'x': 20},c={'y': 30}),\n 'x': 1}\n\n\n\nwith Define('Nested Splat Access',direction='LR') as D:\n    E('Start-&gt;End(**=c)') # this only works for dict likes, and not for arbitrary objects\n\nprint(nested_object)\nD().run_all(nested_object)\n\n\n\n\n\n\n\n\n{'a': 1, 'b': 2, 'c': {'a': 3, 'b': 4}, 'd': TestObj(a=10,b={'x': 20},c={'y': 30})}\n\n\n{'a': 3, 'b': 4}\n\n\n\nwith Define('Default Access',direction='LR') as D:\n    E('Start-&gt;End') # this is identical to 'Start-&gt;End(0=.)'\n\n\nprint(nested_object)\n# note that if we got a single object, we return obj, rather than {0:obj}\nD().run_all(nested_object)\n\n\n\n\n\n\n\n\n{'a': 1, 'b': 2, 'c': {'a': 3, 'b': 4}, 'd': TestObj(a=10,b={'x': 20},c={'y': 30})}\n\n\n{'a': 1,\n 'b': 2,\n 'c': {'a': 3, 'b': 4},\n 'd': TestObj(a=10,b={'x': 20},c={'y': 30})}\n\n\n\nwith Define('Default Access with other keys',direction='LR') as D:\n    E('Start-&gt;End(0=., x=a)')\n\n\nprint(nested_object)\n# note that if we got a single object, we return obj, rather than {0:obj}\nD().run_all(nested_object)\n\n\n\n\n\n\n\n\n{'a': 1, 'b': 2, 'c': {'a': 3, 'b': 4}, 'd': TestObj(a=10,b={'x': 20},c={'y': 30})}\n\n\n{0: {'a': 1,\n  'b': 2,\n  'c': {'a': 3, 'b': 4},\n  'd': TestObj(a=10,b={'x': 20},c={'y': 30})},\n 'x': 1}\n\n\n\nwith Define('ignore_key',direction='LR') as D:\n    # this is used to ignore the output of a previous node,\n    # while still having it come before the current node\n    E('Start-&gt;End(_=.)') \n\n\nprint(nested_object)\n# note that if we got a single object, we return obj, rather than {0:obj}\nD().run_all(nested_object)\n\n\n\n\n\n\n\n\n{'a': 1, 'b': 2, 'c': {'a': 3, 'b': 4}, 'd': TestObj(a=10,b={'x': 20},c={'y': 30})}\n\n\n{}",
    "crumbs": [
      "Tutorials",
      "Port Mapping"
    ]
  },
  {
    "objectID": "docs/examples/distilled_rag.html",
    "href": "docs/examples/distilled_rag.html",
    "title": "Rag with chunk distilation search",
    "section": "",
    "text": "from pathlib import Path\nfrom pprint import pprint\n\nfrom ladle.diagrams import (\n    Define,Scope,\n    V,E,\n    draw_diagram\n)\nfrom ladle.chat import Chat\nfrom ladle.std import Condition as C,StructureJson\nfrom ladle.db import ChromaClient\nchroma_client = ChromaClient()",
    "crumbs": [
      "Examples",
      "Distilled RAG"
    ]
  },
  {
    "objectID": "docs/examples/distilled_rag.html#upload-docs",
    "href": "docs/examples/distilled_rag.html#upload-docs",
    "title": "Rag with chunk distilation search",
    "section": "Upload docs",
    "text": "Upload docs\n\nsample_doc = {'text':\"\"\"\nThe elephant is one of the most remarkable creatures on Earth. Known for their intelligence and complex social structures, elephants form deep family bonds that can last a lifetime. These gentle giants possess remarkable memory capabilities and demonstrate emotional behaviors like mourning their dead. Their distinctive trunks, containing over 40,000 muscles, serve multiple purposes from gathering food to expressing affection.\n\nThe arctic fox is a fascinating animal that has adapted perfectly to life in the extreme cold. During winter, its thick white fur provides both insulation and camouflage in the snowy landscape, while in summer its coat turns brownish-gray to blend with the tundra. These resourceful predators can survive temperatures as low as -50°C (-58°F) and will travel vast distances across the Arctic ice in search of food, often following polar bears to scavenge their leftovers.\n\nThe octopus stands out as one of the ocean's most intelligent invertebrates. With nine brains (one central brain and eight additional ones in each arm), these cephalopods can solve complex puzzles, open jars, and even use tools. Their remarkable ability to change both color and texture allows them to perfectly mimic their surroundings, making them masters of disguise. Despite their impressive capabilities, most octopus species live only 1-2 years, making their intelligence even more remarkable given their short lifespan.\n\"\"\",\n'id':'animal_book'\n}\n\n\ndef splitter(doc):\n    doc_id = doc['id']\n    text = doc['text']\n    return [{'text':chunk.strip(),'id':f'{doc_id}_{i}'} for i,chunk in enumerate(text.split('\\n\\n'))]\n\nchunks = splitter(sample_doc)\nchunks\n\n[{'text': 'The elephant is one of the most remarkable creatures on Earth. Known for their intelligence and complex social structures, elephants form deep family bonds that can last a lifetime. These gentle giants possess remarkable memory capabilities and demonstrate emotional behaviors like mourning their dead. Their distinctive trunks, containing over 40,000 muscles, serve multiple purposes from gathering food to expressing affection.',\n  'id': 'animal_book_0'},\n {'text': 'The arctic fox is a fascinating animal that has adapted perfectly to life in the extreme cold. During winter, its thick white fur provides both insulation and camouflage in the snowy landscape, while in summer its coat turns brownish-gray to blend with the tundra. These resourceful predators can survive temperatures as low as -50°C (-58°F) and will travel vast distances across the Arctic ice in search of food, often following polar bears to scavenge their leftovers.',\n  'id': 'animal_book_1'},\n {'text': \"The octopus stands out as one of the ocean's most intelligent invertebrates. With nine brains (one central brain and eight additional ones in each arm), these cephalopods can solve complex puzzles, open jars, and even use tools. Their remarkable ability to change both color and texture allows them to perfectly mimic their surroundings, making them masters of disguise. Despite their impressive capabilities, most octopus species live only 1-2 years, making their intelligence even more remarkable given their short lifespan.\",\n  'id': 'animal_book_2'}]\n\n\n\nunstructured_summary = {\n   'doc':{\n      'text': \"The octopus stands out as one of the ocean's most intelligent invertebrates. With nine brains (one central brain and eight additional ones in each arm), these cephalopods can solve complex puzzles, open jars, and even use tools. Their remarkable ability to change both color and texture allows them to perfectly mimic their surroundings, making them masters of disguise. Despite their impressive capabilities, most octopus species live only 1-2 years, making their intelligence even more remarkable given their short lifespan.\",\n      'id': 'animal_book_2'\n   },\n   'description': 'Description of elephants as intelligent and social animals.',\n}\n\nStructureJson('text=description','id=doc.id','metadata.full_text=doc.text')(**unstructured_summary)\n\n{'text': 'Description of elephants as intelligent and social animals.',\n 'id': 'animal_book_2',\n 'metadata': {'full_text': \"The octopus stands out as one of the ocean's most intelligent invertebrates. With nine brains (one central brain and eight additional ones in each arm), these cephalopods can solve complex puzzles, open jars, and even use tools. Their remarkable ability to change both color and texture allows them to perfectly mimic their surroundings, making them masters of disguise. Despite their impressive capabilities, most octopus species live only 1-2 years, making their intelligence even more remarkable given their short lifespan.\"}}\n\n\n\ntopic_summarizer = Chat(model='gpt-4o-mini',\n    messages=[\n        {'role':'system','content':'''\n        You are a helpful assistant that summarizes chunks of text.\n        Here are some examples of how to summarize text:\n        Text:\n        Dogs are loyal companions that come in many breeds. They are known for their intelligence, \n        trainability and ability to form strong bonds with humans. Dogs have been domesticated \n        for thousands of years and serve many roles including pets, working animals, and service animals.\n        They communicate through barking, body language and facial expressions. Most dogs are social \n        animals that thrive on interaction with their human families.\n        Summary:\n        Description of dogs as pets.\n        '''},\n        {'role':'user','content':'{{text}}'}\n    ])\n\nres = await topic_summarizer(text=chunks[0]['text'])\nres\n\n{'role': 'assistant',\n 'content': 'Description of elephants as intelligent and social animals with strong family bonds.',\n 'meta': {'input_tokens': 292, 'output_tokens': 21}}\n\n\n\nwith Define('add_description_to_doc',type='flow') as AddDesc:\n    V('get_description',topic_summarizer,inputs=['Start(text=doc.text)'])\n    V('End',StructureJson('text=description','id=doc.id','metadata.full_text=doc.text'),\n        inputs=['Start(doc=doc)',\n        'get_description(description=content)'\n        ])\n\n\n\n\n\n\n\n\n\nadd_desc = AddDesc()\nfor trace in add_desc.run({'doc':sample_doc}):\n    # trace.pprint()\n    pass\nadd_desc.output\n\n{'text': 'Description of elephants, arctic foxes, and octopuses, highlighting their intelligence, adaptability, and unique features.',\n 'id': 'animal_book',\n 'metadata': {'full_text': \"\\nThe elephant is one of the most remarkable creatures on Earth. Known for their intelligence and complex social structures, elephants form deep family bonds that can last a lifetime. These gentle giants possess remarkable memory capabilities and demonstrate emotional behaviors like mourning their dead. Their distinctive trunks, containing over 40,000 muscles, serve multiple purposes from gathering food to expressing affection.\\n\\nThe arctic fox is a fascinating animal that has adapted perfectly to life in the extreme cold. During winter, its thick white fur provides both insulation and camouflage in the snowy landscape, while in summer its coat turns brownish-gray to blend with the tundra. These resourceful predators can survive temperatures as low as -50°C (-58°F) and will travel vast distances across the Arctic ice in search of food, often following polar bears to scavenge their leftovers.\\n\\nThe octopus stands out as one of the ocean's most intelligent invertebrates. With nine brains (one central brain and eight additional ones in each arm), these cephalopods can solve complex puzzles, open jars, and even use tools. Their remarkable ability to change both color and texture allows them to perfectly mimic their surroundings, making them masters of disguise. Despite their impressive capabilities, most octopus species live only 1-2 years, making their intelligence even more remarkable given their short lifespan.\\n\"}}\n\n\n\n# TODO consider adding zip to ladle foreach syntax\nwith Define('Distilation Rag Uploader',type='flow') as DistRagUpload:\n    V('split_texts',splitter,inputs=['Start(doc=docs)'],for_each=['doc'],flat=True)\n    V('add_description',AddDesc,\n        inputs=['split_texts(doc=.)'],\n        for_each=['doc'])\n    V('End',chroma_client.upsert,inputs=['add_description(docs)','Start(collection_name=collection_name)'])\n\n\n\n\n\n\n\n\n\nchroma_client.add_collection(\"animal_book\",exists_ok=True)\nd = DistRagUpload()\nfor trace in d.run({'docs':[sample_doc],'collection_name':'animal_book'}):\n    # trace.pprint()\n    pass\n\nd.output\n\n[{'text': 'Description of elephants as intelligent and social animals with strong family bonds.',\n  'id': 'animal_book_0',\n  'metadata': {'full_text': 'The elephant is one of the most remarkable creatures on Earth. Known for their intelligence and complex social structures, elephants form deep family bonds that can last a lifetime. These gentle giants possess remarkable memory capabilities and demonstrate emotional behaviors like mourning their dead. Their distinctive trunks, containing over 40,000 muscles, serve multiple purposes from gathering food to expressing affection.'}},\n {'text': 'The arctic fox is a well-adapted animal for extreme cold, with thick white fur for insulation and camouflage in winter, turning brownish-gray in summer. It survives temperatures as low as -50°C and scavenges from polar bears across the Arctic ice.',\n  'id': 'animal_book_1',\n  'metadata': {'full_text': 'The arctic fox is a fascinating animal that has adapted perfectly to life in the extreme cold. During winter, its thick white fur provides both insulation and camouflage in the snowy landscape, while in summer its coat turns brownish-gray to blend with the tundra. These resourceful predators can survive temperatures as low as -50°C (-58°F) and will travel vast distances across the Arctic ice in search of food, often following polar bears to scavenge their leftovers.'}},\n {'text': 'Description of octopuses as intelligent invertebrates with unique abilities.',\n  'id': 'animal_book_2',\n  'metadata': {'full_text': \"The octopus stands out as one of the ocean's most intelligent invertebrates. With nine brains (one central brain and eight additional ones in each arm), these cephalopods can solve complex puzzles, open jars, and even use tools. Their remarkable ability to change both color and texture allows them to perfectly mimic their surroundings, making them masters of disguise. Despite their impressive capabilities, most octopus species live only 1-2 years, making their intelligence even more remarkable given their short lifespan.\"}}]\n\n\n\nchroma_client.list('animal_book')\n\n[{'id': 'animal_book_0',\n  'text': 'Description of elephants as intelligent and social animals with strong family bonds.',\n  'metadata': {'full_text': 'The elephant is one of the most remarkable creatures on Earth. Known for their intelligence and complex social structures, elephants form deep family bonds that can last a lifetime. These gentle giants possess remarkable memory capabilities and demonstrate emotional behaviors like mourning their dead. Their distinctive trunks, containing over 40,000 muscles, serve multiple purposes from gathering food to expressing affection.'},\n  'embedding': array([ 0.06449884,  0.02342647, -0.02490086, ...,  0.00664062,\n         -0.00696826,  0.02305202])},\n {'id': 'animal_book_1',\n  'text': 'The arctic fox is a well-adapted animal for extreme cold, with thick white fur for insulation and camouflage in winter, turning brownish-gray in summer. It survives temperatures as low as -50°C and scavenges from polar bears across the Arctic ice.',\n  'metadata': {'full_text': 'The arctic fox is a fascinating animal that has adapted perfectly to life in the extreme cold. During winter, its thick white fur provides both insulation and camouflage in the snowy landscape, while in summer its coat turns brownish-gray to blend with the tundra. These resourceful predators can survive temperatures as low as -50°C (-58°F) and will travel vast distances across the Arctic ice in search of food, often following polar bears to scavenge their leftovers.'},\n  'embedding': array([-0.02050381,  0.00120946,  0.00811564, ...,  0.00389746,\n         -0.02793997,  0.02572217])},\n {'id': 'animal_book_2',\n  'text': 'Description of octopuses as intelligent invertebrates with unique abilities.',\n  'metadata': {'full_text': \"The octopus stands out as one of the ocean's most intelligent invertebrates. With nine brains (one central brain and eight additional ones in each arm), these cephalopods can solve complex puzzles, open jars, and even use tools. Their remarkable ability to change both color and texture allows them to perfectly mimic their surroundings, making them masters of disguise. Despite their impressive capabilities, most octopus species live only 1-2 years, making their intelligence even more remarkable given their short lifespan.\"},\n  'embedding': array([ 0.03985221,  0.04562302, -0.01292609, ..., -0.00327196,\n          0.00185028, -0.0030714 ])}]",
    "crumbs": [
      "Examples",
      "Distilled RAG"
    ]
  },
  {
    "objectID": "docs/examples/distilled_rag.html#query-docs",
    "href": "docs/examples/distilled_rag.html#query-docs",
    "title": "Rag with chunk distilation search",
    "section": "Query docs",
    "text": "Query docs\n\ndistilled_query = topic_summarizer = Chat(model='gpt-4o-mini',\n    messages=[\n        {'role':'system','content':'''\n        You are a helpful assistant that predicts what kind of summaries will be helpful for a given query.\n        Here are some examples:\n        query:\n        I have an elephant and a dog. What is the most important thing about them?\n        Summaries:\n        Descriptions of elephants.\n        Descriptions of dogs.\n        query:\n        What is the most important thing about elephants?\n        Summaries:\n        Descriptions of elephants.\n        query:\n        What is the most important thing about dogs?\n        Summaries:\n        Description of dogs as pets.\n        '''},\n        {'role':'user','content':'query:{{query}}'},\n        {'role':'assistant','content':'summaries:'}\n\n    ])\n\nres = await distilled_query(query=\"I need help with my lion choco\")\npprint(res)\n\n{'content': 'Descriptions of lion chocolates.',\n 'meta': {'input_tokens': 220, 'output_tokens': 13},\n 'role': 'assistant'}\n\n\n\nfull_text_rag_prompt = [\n            {'role':'system','content':'''\n            You are a helpful assistant that answers questions about animals.\n\n            Here are some examples of how to answer questions about animals:\n            {% for example in examples %}\n            Question: {{example['question']}}\n            Answer: {{example['answer']}}\n            {% endfor %}\n\n            I found the following documents that may be relevant to the user's question:\n            {% for doc in docs %}\n            {{doc['metadata']['full_text']}}\n            {% endfor %}\n            '''},\n            {'role':'user','content':'{{input}}'},\n            ]\n\nstyle_examples = [\n    {\n        'question': \"What are the key traits of Pandas?\",\n        'answer': \"\"\"Here are the key traits of Pandas:\n            • Pandas are a type of bear\n            • They are native to South America\n            • They are known for their black and white fur\n            • They are known for their love of bamboo\"\"\"\n    },\n    {\n        'question': \"What are the key traits of Lions?\",\n        'answer': \"\"\"Here are the key traits of Lions:\n            • Lions are a type of bear\n            • They are native to Africa\n            • They are known for their mane of hair\"\"\"\n    }\n]\nfull_text_rag_chat = Chat(model='gpt-4o-mini',messages=full_text_rag_prompt,examples=style_examples)\n\n\nwith Define('Distilled RAG',type='flow') as DistRag:\n    V('distill_query',distilled_query,\n        inputs=['Start(query=query)'],\n    )\n    V('get_docs',chroma_client.query,\n        inputs=['distill_query(query=content)','Start(collection_name=collection_name,k=k,threshold=threshold)'],\n    )\n    V('chat',full_text_rag_chat,\n        inputs=['get_docs(docs)','Start(input=query)'],\n        outputs=['End']\n    )\n\n\n\n\n\n\n\n\n\nd=DistRag()\nfor trace in d.run({'query':'I need help with my elephant choco','collection_name':'animal_book','k':2,'threshold':1}):\n    trace.pprint()\n    pass\npprint(d.output)\n\nNode Start:\n{ 'input': { 'collection_name': 'animal_book',\n             'k': 2,\n             'query': 'I need help with my elephant choco',\n             'threshold': 1},\n  'output': { 'collection_name': 'animal_book',\n              'k': 2,\n              'query': 'I need help with my elephant choco',\n              'threshold': 1}}\n================================================================================\nNode distill_query:\n{ 'input': {'query': 'I need help with my elephant choco'},\n  'output': { 'content': 'Descriptions of elephants and care tips for pet '\n                         'elephants.',\n              'meta': {'input_tokens': 220, 'output_tokens': 18},\n              'role': 'assistant'}}\n================================================================================\nNode get_docs:\n{ 'input': { 'collection_name': 'animal_book',\n             'k': 2,\n             'query': 'Descriptions of elephants and care tips for pet '\n                      'elephants.',\n             'threshold': 1},\n  'output': [ { 'distance': 0.758659303188324,\n                'id': 'animal_book_0',\n                'metadata': { 'full_text': 'The elephant is one of the most '\n                                           'remarkable creatures on Earth. '\n                                           'Known for their intelligence and '\n                                           'complex social structures, '\n                                           'elephants form deep family bonds '\n                                           'that can last a lifetime. These '\n                                           'gentle giants possess remarkable '\n                                           'memory capabilities and '\n                                           'demonstrate emotional behaviors '\n                                           'like mourning their dead. Their '\n                                           'distinctive trunks, containing '\n                                           'over 40,000 muscles, serve '\n                                           'multiple purposes from gathering '\n                                           'food to expressing affection.'},\n                'text': 'Description of elephants as intelligent and social '\n                        'animals with strong family bonds.'}]}\n================================================================================\nNode chat:\n{ 'input': { 'docs': [ { 'distance': 0.758659303188324,\n                         'id': 'animal_book_0',\n                         'metadata': { 'full_text': 'The elephant is one of '\n                                                    'the most remarkable '\n                                                    'creatures on Earth. Known '\n                                                    'for their intelligence '\n                                                    'and complex social '\n                                                    'structures, elephants '\n                                                    'form deep family bonds '\n                                                    'that can last a lifetime. '\n                                                    'These gentle giants '\n                                                    'possess remarkable memory '\n                                                    'capabilities and '\n                                                    'demonstrate emotional '\n                                                    'behaviors like mourning '\n                                                    'their dead. Their '\n                                                    'distinctive trunks, '\n                                                    'containing over 40,000 '\n                                                    'muscles, serve multiple '\n                                                    'purposes from gathering '\n                                                    'food to expressing '\n                                                    'affection.'},\n                         'text': 'Description of elephants as intelligent and '\n                                 'social animals with strong family bonds.'}],\n             'input': 'I need help with my elephant choco'},\n  'output': { 'content': 'Here are the key traits of Elephants: • Elephants '\n                         'are known for their intelligence and complex social '\n                         'structures. • They form deep family bonds that can '\n                         'last a lifetime. • Elephants possess remarkable '\n                         'memory capabilities. • They demonstrate emotional '\n                         'behaviors, such as mourning their dead. • Their '\n                         'distinctive trunks contain over 40,000 muscles and '\n                         'serve multiple purposes, including gathering food '\n                         'and expressing affection.',\n              'meta': {'input_tokens': 332, 'output_tokens': 85},\n              'role': 'assistant'}}\n================================================================================\nNode End:\n{ 'input': { 0: { 'content': 'Here are the key traits of Elephants: • '\n                             'Elephants are known for their intelligence and '\n                             'complex social structures. • They form deep '\n                             'family bonds that can last a lifetime. • '\n                             'Elephants possess remarkable memory '\n                             'capabilities. • They demonstrate emotional '\n                             'behaviors, such as mourning their dead. • Their '\n                             'distinctive trunks contain over 40,000 muscles '\n                             'and serve multiple purposes, including gathering '\n                             'food and expressing affection.',\n                  'meta': {'input_tokens': 332, 'output_tokens': 85},\n                  'role': 'assistant'}},\n  'output': { 'content': 'Here are the key traits of Elephants: • Elephants '\n                         'are known for their intelligence and complex social '\n                         'structures. • They form deep family bonds that can '\n                         'last a lifetime. • Elephants possess remarkable '\n                         'memory capabilities. • They demonstrate emotional '\n                         'behaviors, such as mourning their dead. • Their '\n                         'distinctive trunks contain over 40,000 muscles and '\n                         'serve multiple purposes, including gathering food '\n                         'and expressing affection.',\n              'meta': {'input_tokens': 332, 'output_tokens': 85},\n              'role': 'assistant'}}\n================================================================================\n{'content': 'Here are the key traits of Elephants: • Elephants are known for '\n            'their intelligence and complex social structures. • They form '\n            'deep family bonds that can last a lifetime. • Elephants possess '\n            'remarkable memory capabilities. • They demonstrate emotional '\n            'behaviors, such as mourning their dead. • Their distinctive '\n            'trunks contain over 40,000 muscles and serve multiple purposes, '\n            'including gathering food and expressing affection.',\n 'meta': {'input_tokens': 332, 'output_tokens': 85},\n 'role': 'assistant'}",
    "crumbs": [
      "Examples",
      "Distilled RAG"
    ]
  },
  {
    "objectID": "docs/examples/003_interactive_qa.html",
    "href": "docs/examples/003_interactive_qa.html",
    "title": "Filling out missing user data",
    "section": "",
    "text": "from pathlib import Path\nfrom pprint import pprint\nfrom pydantic import BaseModel,Field\nfrom typing import Union,Literal,Optional\nfrom sqlmodel import SQLModel, Session, select, Field\n\nfrom ladle.diagrams import (\n    Define,Scope,\n    V,E,\n    draw_diagram\n)\nfrom ladle.core import has_missing\nfrom ladle.chat import Chat\nfrom ladle.std import Condition as C\n\n\ndef fill_missing_data_agent(model:BaseModel,diagram_name:str=None):\n    \"\"\"\n    This is a diagram factory that takes a model as an argument and returns\n    a diagram that fills in the missing data.\n\n    If diagram_name is not provided, it will be generated from the model name.\n    Args:\n        model: A Pydantic BaseModel that defines the schema for the data to collect\n            to avoid halucinations, model fields should optionally be Missing\n        diagram_name: Optional name for the diagram. If not provided, will use the model name\n\n    Returns:\n        A Diagram that interactively collects data matching the provided model schema\n        by prompting the user for missing fields until all required data is gathered.\n\n    Example:\n        &gt;&gt;&gt; from pydantic import BaseModel\n        &gt;&gt;&gt; from typing import Union\n        &gt;&gt;&gt; from ladle.core import Missing\n        &gt;&gt;&gt; class UserInfo(BaseModel):\n        ...     name: Union[str,Missing]\n        ...     age: Union[int,Missing]\n        ...     email: Union[str,Missing]\n        &gt;&gt;&gt; diagram = fill_missing_data_agent(UserInfo)\n        &gt;&gt;&gt; # Will interactively prompt for name, age, and email\n    \"\"\"\n\n    if diagram_name is None:\n        diagram_name = f'fill_missing_data_{model.__name__}'\n\n    has_missing_data = C(has_missing,'(0=content)',name='has_missing_data')\n\n    ask_missing_data = Chat(\n        model='gpt-4o-mini',\n        messages=[\n            {'role':'system','content':'''\n            You are a helpful assistant asks the user for missing information.\n            The information we have so far is:\n            {{current_info}}\n            Ask the user for the missing information.\n            '''}])\n\n    format_new_info = Chat(\n        model='gpt-4o-mini',\n        messages=[\n            {'role':'system','content':'''\n            You are a helpful assistant that gets user data and makes sure it is complete.\n            If you are not sure that you were given the relevant information, put MISSING in the relevant field.\n            {% if current_info %}\n            The information we have so far is:\n            {{current_info}}\n            {% endif %}\n            Ask the user for the missing information.\n            '''},\n            {'role':'user','content':'{{input}}'},\n        ],\n        output_schema=model)\n\n    with Define(diagram_name,type='decision') as D:\n\n        V('Start',\n            outputs=[('ask_missing_data(_)',has_missing_data),\n            'End',\n            'state/current_info'\n        ])\n\n        V('ask_missing_data',ask_missing_data,\n            inputs=['state/current_info(current_info)'],\n            outputs=['break']\n        )\n\n        V('break',is_break=True,outputs=['format_new_info(input)'])\n\n        \n        V('format_new_info',format_new_info,\n            inputs=['state/current_info(current_info)'],\n            outputs=[\n                ('ask_missing_data(_)',has_missing_data),\n                'End',\n                'state/current_info'\n            ])\n    return D\n\n\nclass UserData(SQLModel):\n    name: Optional[str] = Field(None, description='The name of the user')\n    age: Optional[int] = Field(None, description='The age of the user')\n    email: Optional[str] = Field(None, description='The email of the user')\n\n\nFillMissingUserData = fill_missing_data_agent(UserData)\nFillMissingUserData\n\n\n\n\n\n\n\n\n\nd = FillMissingUserData()\nfor trace in d.run({'content':UserData()}):\n    trace.pprint()\n    pass\n\nd.output\n\nNode Start:\n{ 'input': {'content': UserData(name=None, age=None, email=None)},\n  'output': {'content': UserData(name=None, age=None, email=None)}}\n================================================================================\nNode ask_missing_data:\n{ 'input': { 'current_info': { 'content': UserData(name=None, age=None, email=None)}},\n  'output': { 'content': 'Could you please provide your name, age, and email '\n                         'address?',\n              'meta': {'input_tokens': 150, 'output_tokens': 21},\n              'role': 'assistant'}}\n================================================================================\n\n\n{'role': 'assistant',\n 'content': 'Could you please provide your name, age, and email address?',\n 'meta': {'input_tokens': 150, 'output_tokens': 21}}\n\n\n\nfor trace in d.run('my name is jony'):\n    pass\n\nd.output\n\n{'role': 'assistant',\n 'content': \"Hi Jony! I see that I have your name but I'm missing a few details. Could you please provide your age and email address?\",\n 'meta': {'input_tokens': 175, 'output_tokens': 36}}\n\n\n\nfor trace in d.run('i am 25 years old'):\n    pass\n\nd.output\n\n{'role': 'assistant',\n 'content': 'Could you please provide your email address?',\n 'meta': {'input_tokens': 176, 'output_tokens': 13}}\n\n\n\nfor trace in d.run('sure, my email is jony@example.com'):\n    pass\n\nd.output\n\n{'role': 'assistant',\n 'content': UserData(name='jony', age=25, email='jony@example.com'),\n 'meta': {'input_tokens': 367, 'output_tokens': 28}}",
    "crumbs": [
      "Examples",
      "Interactive QA"
    ]
  },
  {
    "objectID": "docs/examples/strategy.html",
    "href": "docs/examples/strategy.html",
    "title": "Strategy/Router Pattern",
    "section": "",
    "text": "from typing import Union,Literal,Optional\nfrom pydantic import BaseModel,Field\n\nfrom ladle.diagrams import (\n    Define,Scope,\n    V,E,\n    draw_diagram\n)\nfrom ladle.chat import Chat\nfrom ladle.std import Condition as C",
    "crumbs": [
      "Examples",
      "Strategy Agent"
    ]
  },
  {
    "objectID": "docs/examples/strategy.html#sub-agents",
    "href": "docs/examples/strategy.html#sub-agents",
    "title": "Strategy/Router Pattern",
    "section": "Sub Agents",
    "text": "Sub Agents\n\nrhyming_agent = Chat(model='gpt-4o-mini',\n    messages=[{'role':'system','content':\"\"\"\n    Answer the following questions using rhyming words.\n    \"\"\"},\n    {'role':'user','content':'{{question}}'},\n    ],\n    )\n\n\nawait rhyming_agent(question='what is the capital of france?')\n\n{'role': 'assistant',\n 'content': 'In Paris, the heart beats fast, a city of beauty, unsurpassed.',\n 'meta': {'input_tokens': 129, 'output_tokens': 24}}\n\n\n\njoke_agent = Chat(model='gpt-4o-mini',\n    messages=[{'role':'system','content':\"\"\"\n    Answer the following question with a joke.\n    \"\"\"},\n    {'role':'user','content':'{{question}}'},\n    ])\n\nawait joke_agent(question='what is the capital of france?')\n\n{'role': 'assistant',\n 'content': 'Why did the French chef get arrested? Because he was caught beating the eggs in Paris!',\n 'meta': {'input_tokens': 127, 'output_tokens': 26}}\n\n\n\nyo_mama_chat = Chat(model='gpt-4o-mini',\n    messages=[{'role':'system','content':\"\"\"\n    Answer the following question with a joke about the person's mother.\n    \"\"\"},\n    {'role':'user','content':'{{question}}'},\n    ])\n\nawait yo_mama_chat(question='what is the capital of france?')\n\n{'role': 'assistant',\n 'content': 'Why did your mother go to Paris? Because she heard it was the best place to find a good \"eiffel\"-ing!',\n 'meta': {'input_tokens': 131, 'output_tokens': 35}}\n\n\n\nwith Define('yo mama agent') as YoMamaAgent:\n    V('yo mama',yo_mama_chat,inputs=['Start(**)'],outputs=['End'])\n\n\n\n\n\n\n\n\n\nyo_mama_agent = YoMamaAgent()\nyo_mama_agent.run_all({\n    'question':'what is the capital of france?'\n    })\n\n{'role': 'assistant',\n 'content': 'Why did your mother go to Paris? Because she heard it was the best place to find a good \"eiffel\"-ing!',\n 'meta': {'input_tokens': 131, 'output_tokens': 35}}",
    "crumbs": [
      "Examples",
      "Strategy Agent"
    ]
  },
  {
    "objectID": "docs/examples/strategy.html#strategy-pattern",
    "href": "docs/examples/strategy.html#strategy-pattern",
    "title": "Strategy/Router Pattern",
    "section": "Strategy pattern",
    "text": "Strategy pattern\n\nsub_agent_dict = {\n    'rhyme':rhyming_agent,\n    'joke':joke_agent,\n    'yo_mama':yo_mama_agent\n}\n\n\nchooser = Chat(model='gpt-4o-mini',\n    messages=[{'role':'system','content':\"\"\"\n    Choose the best sub-agent to answer the following question.\n    \"\"\"},\n    {'role':'user','content':'{{question}}'},\n    ],\n    choices=list(sub_agent_dict.keys()),\n    )\n\n\nawait chooser(question='what is the capital of france?, I like rhymes')\n\n{'role': 'assistant',\n 'content': 'rhyme',\n 'meta': {'input_tokens': 158, 'output_tokens': 12}}\n\n\n\nwith Define('strategy agent',type='decision') as StrategyAgent:\n    with Scope('flow'):\n        V('chooser',chooser,inputs=['Start(**)'])\n        V('router',inputs=['Start(question=question)','chooser(choice=content)'])\n        V('PrepareEnd',outputs=['End']) # TODO make compression work without this extra node\n\n    for choice_code,sub_agent in sub_agent_dict.items():\n        sub_agent_node_name = f'{choice_code}_agent'\n        E(f'router-&gt;{sub_agent_node_name}(question=question)',cond=C(f'{choice_code}','(0=choice)'))\n        V(sub_agent_node_name,sub_agent,outputs=['PrepareEnd'])\n\n\n\n\n\n\n\n\n\nd = StrategyAgent()\nfor trace in d.run({'question':\"what is the capital of france?, I like yo mama jokes\"}):\n    trace.pprint(show_input=False,skip_passthrough=True)\n\nNode chooser:\n{ 'output': { 'content': 'yo_mama',\n              'meta': {'input_tokens': 159, 'output_tokens': 12},\n              'role': 'assistant'}}\n================================================================================\nNode yo_mama_agent.yo mama:\n{ 'output': { 'content': \"Yo mama's so lazy, she got a job at the Eiffel Tower \"\n                         'just so she could say she works from home!',\n              'meta': {'input_tokens': 136, 'output_tokens': 32},\n              'role': 'assistant'}}\n================================================================================\nNode yo_mama_agent:\n{ 'output': { 'content': \"Yo mama's so lazy, she got a job at the Eiffel Tower \"\n                         'just so she could say she works from home!',\n              'meta': {'input_tokens': 136, 'output_tokens': 32},\n              'role': 'assistant'}}\n================================================================================",
    "crumbs": [
      "Examples",
      "Strategy Agent"
    ]
  },
  {
    "objectID": "docs/examples/monitor.html",
    "href": "docs/examples/monitor.html",
    "title": "Monitor",
    "section": "",
    "text": "from pathlib import Path\nfrom pprint import pprint\nfrom typing import Union,Literal,Optional\nfrom pydantic import BaseModel,Field\n\nfrom ladle.diagrams import (\n    Define,Scope,\n    V,E,\n    draw_diagram\n)\nfrom ladle.chat import Chat\nfrom ladle.std import Condition as C",
    "crumbs": [
      "Examples",
      "Monitor Agent"
    ]
  },
  {
    "objectID": "docs/examples/monitor.html#monitor-and-return-reply",
    "href": "docs/examples/monitor.html#monitor-and-return-reply",
    "title": "Monitor",
    "section": "Monitor and return reply",
    "text": "Monitor and return reply\n\nacting_agent = Chat(model='gpt-4o-mini',\n    messages=[{'role':'system','content':\"\"\"\n    You are a helpful assistant that can answer questions and help with tasks.\n    \"\"\"},\n    {'role':'user','content':'{{question}}'},\n    ],\n    )\n\n\nsafe_or_not_agent = Chat(model='gpt-4o-mini',\n    messages=[{'role':'system','content':\"\"\"\n    You are an evaluator that can determine if an answer is safe or not.\n\n    A safe answer is one that does not talk about medical, legal, or financial advice.\n    Decide if the following answer is safe or not.\n    \"\"\"},\n    {'role':'user','content':'{{question}}'},\n    {'role':'assistant','content':'{{answer}}'},\n    ],\n    choices=['safe','not safe'],\n    )\n\n\nwith Define('monitor_add_answer',type='flow') as MonitorAddAnswer:\n    V('acting_agent',acting_agent,\n        inputs=['Start(question=question)'],\n        )\n    V('monitor',safe_or_not_agent,\n        inputs=['Start(question=question)','acting_agent(answer=content)'])\n    V('End',inputs=['acting_agent(answer=content)','monitor(safe_or_not=content)'])\n\n\n\n\n\n\n\n\n\nmonitor_aa = MonitorAddAnswer()\nfor trace in monitor_aa.run({'question':\"How do i prevent my heart attack?\"}):\n    pass\npprint(monitor_aa.output)\n\nfor trace in monitor_aa.run({'question':\"How do learn to whistle?\"}):\n    pass\npprint(monitor_aa.output)\n\n{'answer': 'To prevent a heart attack, you can adopt a heart-healthy lifestyle '\n           \"which includes the following steps: maintain a healthy diet that's \"\n           'rich in fruits, vegetables, whole grains, and lean proteins; '\n           'exercise regularly by aiming for at least 150 minutes of moderate '\n           'aerobic activity each week; avoid smoking and limit alcohol '\n           'consumption; maintain a healthy weight; manage stress effectively; '\n           'control blood pressure and cholesterol levels; and schedule '\n           'regular check-ups with your healthcare provider to monitor your '\n           'heart health.',\n 'safe_or_not': 'not safe'}\n{'answer': 'To learn to whistle, start by moistening your lips and keeping '\n           'them tight together while blowing air through them. Experiment '\n           'with different mouth shapes and positions; try placing your tongue '\n           'in various positions (either back in your mouth or against the '\n           'roof) to find the right angle. Practice regularly to develop '\n           'muscle control and find a comfortable technique. You can also try '\n           'using your fingers to create a louder whistle by placing them in '\n           'your mouth to block airflow. Remember, practice makes perfect!',\n 'safe_or_not': 'safe'}",
    "crumbs": [
      "Examples",
      "Monitor Agent"
    ]
  },
  {
    "objectID": "docs/examples/monitor.html#monitor-give-feedback",
    "href": "docs/examples/monitor.html#monitor-give-feedback",
    "title": "Monitor",
    "section": "Monitor give feedback",
    "text": "Monitor give feedback\n\nacting_agent_with_history = Chat(model='gpt-4o-mini',\n    messages=[\n        {\n            'role': 'system',\n            'content': \"You are a helpful assistant that can answer questions and help with tasks.\"\n        },\n        {\n            'role': 'user',\n            'content': \"{{question}}\"\n        }\n    ],\n    save_history=True,\n)\n\nres = await acting_agent_with_history(question=\"who is obama?\")\nres\n\n{'role': 'assistant',\n 'content': 'Barack Obama is an American politician, attorney, and author who served as the 44th president of the United States from 2009 to 2017. He was the first African American to hold the office. Before his presidency, he was a U.S. senator from Illinois and a member of the Democratic Party.',\n 'meta': {'input_tokens': 130, 'output_tokens': 73}}\n\n\n\nres = await acting_agent_with_history(messages=[{'role':'system','content':'say hi first'}])\nres\n\n{'role': 'assistant',\n 'content': 'Hi! Barack Obama is an American attorney and politician who served as the 44th president of the United States from 2009 to 2017. He was the first African American president and was previously a U.S. senator from Illinois.',\n 'meta': {'input_tokens': 137, 'output_tokens': 54}}\n\n\n\nacting_agent_with_history.history\n\n[{'role': 'system',\n  'content': 'You are a helpful assistant that can answer questions and help with tasks.'},\n {'role': 'user', 'content': 'who is obama?'},\n {'role': 'system', 'content': 'say hi first'}]\n\n\n\nacting_agent_with_history.reset()\n\n\nclass FeedbackContent(BaseModel):\n    type: Literal[\"needs_feedback\"]\n    feedback: str\n\nclass NoFeedback(BaseModel):\n    type: Literal[\"no_feedback\"]\n\nclass Decision(BaseModel):\n    content: Union[NoFeedback, FeedbackContent]=Field(discriminator='type',description='Either no_feedback or needs_feedback based on the answer')\n\nfeedback_agent = Chat(model='gpt-4o-mini',\n    messages=[{'role':'system','content':\"\"\"\n    you are a monitor that returns either no_feedback or needs_feedback.\n    If the assistant's answer talks about medical topics, ask it to add \"this is not medical advice\" to the end of the answer.\n    If it already has \"this is not medical advice\" in the answer, return no_feedback.\n    otherwise return no_feedback.\n\n    Exammple:\n    Trump is the current president of the united states\n    Decision:\n    no_feedback\n\n    Example:\n    Cancer is dangerous\n    Decision:\n    needs_feedback, please add \"this is not medical advice\" to the end of the answer.\n\n    Example:\n    Cancer is dangerous, this is not medical advice\n    Decision:\n    no_feedback\n    \"\"\"},\n    {'role':'assistant','content':'{{answer}}'},\n    ],\n    output_schema=Decision)\n\ndecision_not_feedback = C('no_feedback','(0=content.content.type)',name='no_feedback')\n\n\nres = await feedback_agent(answer='barak is my homeboy')\nassert decision_not_feedback(res) , res\nres\n\n{'role': 'assistant',\n 'content': Decision(content=NoFeedback(type='no_feedback')),\n 'meta': {'input_tokens': 512, 'output_tokens': 18}}\n\n\n\nres = await feedback_agent(answer='Syphilis is a sexually transmitted disease')\nassert not decision_not_feedback(res) , res\nres\n\n{'role': 'assistant',\n 'content': Decision(content=FeedbackContent(type='needs_feedback', feedback='please add \"this is not medical advice\" to the end of the answer.')),\n 'meta': {'input_tokens': 514, 'output_tokens': 39}}\n\n\n\nres = await feedback_agent(answer='Syphilis is a sexually transmitted disease, this is not medical advice')\nassert decision_not_feedback(res) , res\nres\n\n{'role': 'assistant',\n 'content': Decision(content=NoFeedback(type='no_feedback')),\n 'meta': {'input_tokens': 520, 'output_tokens': 18}}\n\n\n\ndef as_system_messages(message):\n    return [{'role':'system','content':str(message['content'])}]\n\n\nwith Define('monitor_feedback',type='decision') as MonitorFeedback:\n    V('acting_agent',acting_agent_with_history,\n        inputs=['Start(question=question)'],\n        outputs=[\n            'monitor(answer=content)',\n            'state/last_answer',\n            ],\n        )\n    V('monitor',feedback_agent,\n        outputs=[\n            ('End(_)',decision_not_feedback),\n            'as_system_messages(message=.)',\n        ],\n        )\n    V('as_system_messages',as_system_messages,outputs=['acting_agent(messages=.)'])\n    V('End',inputs=['state/last_answer'])\n\n\n\n\n\n\n\n\n\nd = MonitorFeedback()\nfor trace in d.run({'question':\"what is syphilis?\"}):\n    trace.pprint()\n\nNode Start:\n{ 'input': {'question': 'what is syphilis?'},\n  'output': {'question': 'what is syphilis?'}}\n================================================================================\nNode acting_agent:\n{ 'input': {'question': 'what is syphilis?'},\n  'output': { 'content': 'Syphilis is a sexually transmitted infection (STI) '\n                         'caused by the bacterium Treponema pallidum. It can '\n                         'cause a range of symptoms and can lead to serious '\n                         'health problems if left untreated. Syphilis '\n                         'typically progresses in stages: primary, secondary, '\n                         'latent, and tertiary. In the primary stage, painless '\n                         'sores appear; secondary syphilis may involve skin '\n                         'rashes and flu-like symptoms; latent syphilis has no '\n                         'symptoms but can remain in the body; tertiary '\n                         'syphilis can cause severe complications affecting '\n                         'the heart, brain, and other organs. Syphilis can be '\n                         'treated effectively with antibiotics, particularly '\n                         'penicillin.',\n              'meta': {'input_tokens': 132, 'output_tokens': 136},\n              'role': 'assistant'}}\n================================================================================\nNode monitor:\n{ 'input': { 'answer': 'Syphilis is a sexually transmitted infection (STI) '\n                       'caused by the bacterium Treponema pallidum. It can '\n                       'cause a range of symptoms and can lead to serious '\n                       'health problems if left untreated. Syphilis typically '\n                       'progresses in stages: primary, secondary, latent, and '\n                       'tertiary. In the primary stage, painless sores appear; '\n                       'secondary syphilis may involve skin rashes and '\n                       'flu-like symptoms; latent syphilis has no symptoms but '\n                       'can remain in the body; tertiary syphilis can cause '\n                       'severe complications affecting the heart, brain, and '\n                       'other organs. Syphilis can be treated effectively with '\n                       'antibiotics, particularly penicillin.'},\n  'output': { 'content': Decision(content=FeedbackContent(type='needs_feedback', feedback='please add \"this is not medical advice\" to the end of the answer.')),\n              'meta': {'input_tokens': 634, 'output_tokens': 39},\n              'role': 'assistant'}}\n================================================================================\nNode as_system_messages:\n{ 'input': { 'message': { 'content': Decision(content=FeedbackContent(type='needs_feedback', feedback='please add \"this is not medical advice\" to the end of the answer.')),\n                          'meta': {'input_tokens': 634, 'output_tokens': 39},\n                          'role': 'assistant'}},\n  'output': [ { 'content': \"content=FeedbackContent(type='needs_feedback', \"\n                           'feedback=\\'please add \"this is not medical advice\" '\n                           \"to the end of the answer.')\",\n                'role': 'system'}]}\n================================================================================\nNode acting_agent:\n{ 'input': { 'messages': [ { 'content': \"content=FeedbackContent(type='needs_feedback', \"\n                                        'feedback=\\'please add \"this is not '\n                                        'medical advice\" to the end of the '\n                                        \"answer.')\",\n                             'role': 'system'}]},\n  'output': { 'content': 'Syphilis is a sexually transmitted infection caused '\n                         'by the bacterium Treponema pallidum. It typically '\n                         'progresses through various stages: primary, '\n                         'secondary, latent, and tertiary. Symptoms can '\n                         'include sores, rashes, and fever, and if left '\n                         'untreated, it can lead to serious health '\n                         'complications. It is important to consult a '\n                         'healthcare provider for diagnosis and treatment. '\n                         'This is not medical advice.',\n              'meta': {'input_tokens': 163, 'output_tokens': 87},\n              'role': 'assistant'}}\n================================================================================\nNode monitor:\n{ 'input': { 'answer': 'Syphilis is a sexually transmitted infection caused by '\n                       'the bacterium Treponema pallidum. It typically '\n                       'progresses through various stages: primary, secondary, '\n                       'latent, and tertiary. Symptoms can include sores, '\n                       'rashes, and fever, and if left untreated, it can lead '\n                       'to serious health complications. It is important to '\n                       'consult a healthcare provider for diagnosis and '\n                       'treatment. This is not medical advice.'},\n  'output': { 'content': Decision(content=NoFeedback(type='no_feedback')),\n              'meta': {'input_tokens': 585, 'output_tokens': 18},\n              'role': 'assistant'}}\n================================================================================\nNode End:\n{ 'input': { 0: { 'content': 'Syphilis is a sexually transmitted infection '\n                             'caused by the bacterium Treponema pallidum. It '\n                             'typically progresses through various stages: '\n                             'primary, secondary, latent, and tertiary. '\n                             'Symptoms can include sores, rashes, and fever, '\n                             'and if left untreated, it can lead to serious '\n                             'health complications. It is important to consult '\n                             'a healthcare provider for diagnosis and '\n                             'treatment. This is not medical advice.',\n                  'meta': {'input_tokens': 163, 'output_tokens': 87},\n                  'role': 'assistant'}},\n  'output': { 'content': 'Syphilis is a sexually transmitted infection caused '\n                         'by the bacterium Treponema pallidum. It typically '\n                         'progresses through various stages: primary, '\n                         'secondary, latent, and tertiary. Symptoms can '\n                         'include sores, rashes, and fever, and if left '\n                         'untreated, it can lead to serious health '\n                         'complications. It is important to consult a '\n                         'healthcare provider for diagnosis and treatment. '\n                         'This is not medical advice.',\n              'meta': {'input_tokens': 163, 'output_tokens': 87},\n              'role': 'assistant'}}\n================================================================================",
    "crumbs": [
      "Examples",
      "Monitor Agent"
    ]
  },
  {
    "objectID": "docs/nodes/dbs.html",
    "href": "docs/nodes/dbs.html",
    "title": "DBs",
    "section": "",
    "text": "Here are examples of wrapping Vector and Relational DBs for use in agents.",
    "crumbs": [
      "LLM nodes",
      "Databases"
    ]
  },
  {
    "objectID": "docs/nodes/dbs.html#chroma-db",
    "href": "docs/nodes/dbs.html#chroma-db",
    "title": "DBs",
    "section": "Chroma DB",
    "text": "Chroma DB\n\nfrom ladle.db import ChromaClient\n\n## ChromaClient\n\nsource\n\n\nSignature: ChromaClient(persist_path=None, embed_model='text-embedding-3-small')\n\nNone\n\n\n\nParameter\nType\nDefault\nDescription\n\n\n\n\n\n\nadd_collection\nAdd a collection to the database\n\nSignature: ChromaClient.add_collection(self, name, distance: Literal['l2', 'ip', 'cosine'] = 'l2', metadata=None, exists_ok=False)\n\n\n\n\n\n\n\n\n\n\nParameter\nType\nDefault\nDescription\n\n\n\n\nname\nNone\nNone\nName of the collection to add\n\n\ndistance\ntyping.Literal[‘l2’, ‘ip’, ‘cosine’]\nl2\nDistance metric to use, one of ‘l2’,‘ip’,‘cosine’. Default is ‘l2’\n\n\nmetadata\nNone\nNone\nMetadata to add to the collection\n\n\nexists_ok\nNone\nFalse\nIf True, do not raise an error if the collection already exists\n\n\n\n\n\ndelete\nDelete a list of documents from a collection\n\nSignature: ChromaClient.delete(self, collection_name: str, ids: List[str])\n\n\n\n\n\n\n\n\n\n\nParameter\nType\nDefault\nDescription\n\n\n\n\ncollection_name\n&lt;class ‘str’&gt;\nNone\nName of the collection to delete from\n\n\nids\ntyping.List[str]\nNone\nList of ids to delete\n\n\n\n\n\ndelete_collection\nDelete a collection from the database\n\nSignature: ChromaClient.delete_collection(self, name)\n\n\n\n\nParameter\nType\nDefault\nDescription\n\n\n\n\nname\nNone\nNone\nName of the collection to delete\n\n\n\n\n\nembed_texts\nEmbed a list of texts\n\nSignature: ChromaClient.embed_texts(self, texts: List[str])\n\n\n\n\nParameter\nType\nDefault\nDescription\n\n\n\n\ntexts\ntyping.List[str]\nNone\nList of texts to embed\n\n\n\n\n\nget\nGet a list of documents from a collection\n\nSignature: ChromaClient.get(self, collection_name: str, ids: List[str])\n\n\n\n\n\n\n\n\n\n\nParameter\nType\nDefault\nDescription\n\n\n\n\ncollection_name\n&lt;class ‘str’&gt;\nNone\nName of the collection to get from\n\n\nids\ntyping.List[str]\nNone\nList of ids to get\n\n\n\n\n\nlist\nGet a list of documents from a collection\n\nSignature: ChromaClient.list(self, collection_name: str, k: int = None)\n\n\n\n\n\n\n\n\n\n\nParameter\nType\nDefault\nDescription\n\n\n\n\ncollection_name\n&lt;class ‘str’&gt;\nNone\nName of the collection to list\n\n\nk\n&lt;class ‘int’&gt;\nNone\nNumber of results to return\n\n\n\n\n\nlist_collections\nList all collections in the database\n\nSignature: ChromaClient.list_collections(self)\n\n\n\n\nParameter\nType\nDefault\nDescription\n\n\n\n\n\n\n\nquery\nQuery a collection for documents similar to a query\n\nSignature: ChromaClient.query(self, collection_name: str, query: str, k: int = 10, threshold: float = None, where: Dict[str, Any] = None, where_document: Dict[str, Any] = None)\n\n\n\n\n\n\n\n\n\n\nParameter\nType\nDefault\nDescription\n\n\n\n\ncollection_name\n&lt;class ‘str’&gt;\nNone\nName of the collection to query\n\n\nquery\n&lt;class ‘str’&gt;\nNone\nQuery to search for\n\n\nk\n&lt;class ‘int’&gt;\n10\nNumber of results to return\n\n\nthreshold\n&lt;class ‘float’&gt;\nNone\nThreshold for filtering results\n\n\nwhere\ntyping.Dict[str, typing.Any]\nNone\nFilter results by metadata\n\n\nwhere_document\ntyping.Dict[str, typing.Any]\nNone\nFilter results by document text\n\n\n\n\n\nreset\nReset the database &gt; Signature: ChromaClient.reset(self)\n\n\n\nParameter\nType\nDefault\nDescription\n\n\n\n\n\n\n\nupsert\nUpsert a list of documents into a collection\n\nSignature: ChromaClient.upsert(self, collection_name: str, docs)\n\n\n\n\n\n\n\n\n\n\nParameter\nType\nDefault\nDescription\n\n\n\n\ncollection_name\n&lt;class ‘str’&gt;\nNone\nName of the collection to upsert into\n\n\ndocs\nNone\nNone\nList of documents to upsertdocs should be a list of dictionaries with a ‘text’ key, with optional ‘id’ and ‘metadata’ keys\n\n\n\n\n\nExamples\n\nclient = ChromaClient()\nclient.reset()\nclient.add_collection('test_collection')\ntest_docs = [\n    {\n        'id': 'doc1',\n        'text': 'The quick brown fox jumps over the lazy dog',\n        'metadata': {'type': 'pangram'}\n    },\n    {\n        'id': 'doc2',\n        'text': 'A quick brown fox jumped over the lazy dogs',\n        'metadata': {'type': 'variant'}\n    },\n    {\n        'id': 'doc3',\n        'text': 'The weather is sunny today',\n        'metadata': {'type': 'weather'}\n    }\n]\n\nclient.upsert(\"test_collection\", test_docs)\n\n[{'id': 'doc1',\n  'text': 'The quick brown fox jumps over the lazy dog',\n  'metadata': {'type': 'pangram'}},\n {'id': 'doc2',\n  'text': 'A quick brown fox jumped over the lazy dogs',\n  'metadata': {'type': 'variant'}},\n {'id': 'doc3',\n  'text': 'The weather is sunny today',\n  'metadata': {'type': 'weather'}}]\n\n\n\nclient.query(\"test_collection\", \"fox jumping\", k=2)\n\n[{'id': 'doc1',\n  'text': 'The quick brown fox jumps over the lazy dog',\n  'metadata': {'type': 'pangram'},\n  'distance': 0.9130460619926453},\n {'id': 'doc2',\n  'text': 'A quick brown fox jumped over the lazy dogs',\n  'metadata': {'type': 'variant'},\n  'distance': 0.9181089997291565}]",
    "crumbs": [
      "LLM nodes",
      "Databases"
    ]
  },
  {
    "objectID": "docs/nodes/dbs.html#sqlite",
    "href": "docs/nodes/dbs.html#sqlite",
    "title": "DBs",
    "section": "SQLite",
    "text": "SQLite\n\nfrom ladle.db import temp_sql_db\n\n## temp_sql_db\n\nsource\n\n\nSignature: temp_sql_db(**kwargs)\n\ncreates and sqlalchemy engine to a shared memory sqlite DB. Kwargs are passed to to sqlalchemy’s create_engine function.\n\n\n\nParameter\nType\nDefault\nDescription\n\n\n\n\n\n\nfrom sqlmodel import SQLModel, Session, select, Field\nfrom typing import Optional,List\n\n\nengine = temp_sql_db(echo=False)\n\nSQLModel.metadata.clear()\n\nclass Hero(SQLModel,table=True,extend_existing=True):\n    id: Optional[int] = Field(default=None,primary_key=True)\n    name: str\n    secret_name: str\n    age: Optional[int] = None\n\nSQLModel.metadata.create_all(engine)\n\n\ndef merge_heros(heros:List[Hero]):\n    with Session(engine) as session:\n        for hero in heros:\n            session.merge(hero)\n        session.commit()\n\nmerge_heros(\n    [Hero(id=1,name=\"Deadpond\", secret_name=\"Dive\"),\n    Hero(id=2,name=\"Spider-Boy\", secret_name=\"Pedro\"),\n    Hero(id=3,name=\"Rusty-Man\", secret_name=\"Tommy\")])\n\ndef get_hero(name:str):\n    with Session(engine) as session:\n        stmt = select(Hero).where(Hero.name == name)\n        result = session.exec(stmt).one()\n        return result\n\nget_hero(\"Deadpond\")\n\nHero(secret_name='Dive', name='Deadpond', id=1, age=None)",
    "crumbs": [
      "LLM nodes",
      "Databases"
    ]
  },
  {
    "objectID": "docs/nodes/stdlib.html",
    "href": "docs/nodes/stdlib.html",
    "title": "Ladle standard library",
    "section": "",
    "text": "Given our diagram’s ability to use generic functions, we can create a standard library of functions that are useful for LLMs.",
    "crumbs": [
      "LLM nodes",
      "Standard Library Nodes"
    ]
  },
  {
    "objectID": "docs/nodes/stdlib.html#condition",
    "href": "docs/nodes/stdlib.html#condition",
    "title": "Ladle standard library",
    "section": "Condition",
    "text": "Condition\n\nfrom ladle.std import Condition\n\n## Condition\n\nsource\n\n\nSignature: Condition(func: Union[Callable, str], mapping: Optional[str] = None, name: Optional[str] = None)\n\nA utility function for creating condition functions using ladle’s port mapping logic.\n\n\n\n\n\n\n\n\n\nParameter\nType\nDefault\nDescription\n\n\n\n\nfunc\ntyping.Union[typing.Callable, str]\nNone\nA function or string to match against the input. If string, it will be interpreted as a regex pattern to match the input against.\n\n\nmapping\ntyping.Optional[str]\nNone\nA mapping of the input to the function. by default, the input is the first argument of the function.\n\n\nname\ntyping.Optional[str]\nNone\nA name for the condition. by default, is func_name-&gt;mapping_string\n\n\n\n\nExample\n\ndef is_module_2(x):\n    return x%2==0\n\nis_input_even = Condition(is_module_2,'(x=input)',name='input is even')\n\nassert is_input_even({\"input\": 2})\nassert not is_input_even({\"input\": 3})\n\n\ndef is_sum_42(x,y):\n    return x+y==42\n\nis_io_42 = Condition(is_sum_42,'(x=input,y=output)',name='i+o=42?')\n\nassert is_io_42({\"input\": 2,'output':40})\n# missing inputs results in False\nassert not is_io_42({\"input\": 2,})\nassert not is_io_42({\"input\": 2,'output':39})\n\n\nC = Condition\n\ncomplex_cond = (\n    C(\"^3\",'(0=input)',name='starts with 3') & \n    C(\"^5\",'(0=output)',name='starts with 5') | \n    C(\"^2\",'(0=input)',name='starts with 2'))\ncomplex_cond\n\n((starts with 3 & starts with 5) | starts with 2)\n\n\n\nassert complex_cond({\"input\": \"345\", \"output\": \"567\"})\nassert complex_cond({\"input\": \"244\", \"output\": \"567\"})\nassert not complex_cond({\"input\": \"145\", \"soutput\": \"567\"})\nassert not complex_cond({\"input\": \"345\", \"output\": \"67\"})\nassert not complex_cond({\"not_input\": \"145\"})\nassert complex_cond({ \"input\": \"244\"})",
    "crumbs": [
      "LLM nodes",
      "Standard Library Nodes"
    ]
  },
  {
    "objectID": "docs/nodes/stdlib.html#structurejson",
    "href": "docs/nodes/stdlib.html#structurejson",
    "title": "Ladle standard library",
    "section": "StructureJson",
    "text": "StructureJson\n\nfrom ladle.std import StructureJson\n\n## StructureJson\n\nsource\n\n\nSignature: StructureJson(*assignments)\n\nA class for restructuring JSON objects by nested paths This class allows restructuring JSON objects by specifying path assignments in the form ‘target_path=source_path’. It parses these assignments and creates a new JSON object with the specified structure.\n\n\n\n\n\n\n\n\n\nParameter\nType\nDefault\nDescription\n\n\n\n\nassignments\nNone\nNone\nVariable number of strings specifying path assignments in the format’target_path=source_path’\n\n\n:Returns:\nNone\n-\nA new JSON object with the specified structure.\n\n\n\n\nExample\n\nsource_obj = {'d':{'e':{'f':'foo'},'x':'bar'}}\n\nStructureJson('a.b.c=father.d.e.f','a.b.d=father.d.x')(father=source_obj)\n\n{'a': {'b': {'c': 'foo', 'd': 'bar'}}}",
    "crumbs": [
      "LLM nodes",
      "Standard Library Nodes"
    ]
  },
  {
    "objectID": "docs/nodes/stdlib.html#jsonrenderer",
    "href": "docs/nodes/stdlib.html#jsonrenderer",
    "title": "Ladle standard library",
    "section": "JsonRenderer",
    "text": "JsonRenderer\n\nfrom ladle.std import JsonRenderer\n\n## JsonRenderer\n\nsource\n\n\nSignature: JsonRenderer(json_obj, **kwargs)\n\nA class for rendering JSON objects with nested jinja2 templates.\nAllows setting template variables both during init and when calling the object.\n\n\n\nParameter\nType\nDefault\nDescription\n\n\n\n\njson_obj\nNone\nNone\nA JSON object to render.\n\n\n**kwargs\nNone\nNone\nContext variables to use in the rendering.\n\n\n:Returns:\nNone\n-\nA rendered JSON object.\n\n\n\n\nExample\n\ntemplate_json = {\n    'name': '{{name}}',\n    'age': '{{age}}',\n    'city_path': '{%for city in cities%} {{city}} - {%endfor%}'\n}\n\nrend = JsonRenderer(template_json,age=30,cities=['SF','LA','NY'])\nrend\n\nJsonRenderer(missing_keys={'name'})\n\n\n\nrend(name='Bob')\n\n{'name': 'Bob', 'age': '30', 'city_path': 'SF -  LA -  NY -'}",
    "crumbs": [
      "LLM nodes",
      "Standard Library Nodes"
    ]
  },
  {
    "objectID": "tools.html",
    "href": "tools.html",
    "title": "Example Tools",
    "section": "",
    "text": "source\n\n\n\n wikipedia_search (q:str)\n\n*A tool to query wikipedia, useful when you need to find information about a specific topic or person that is well known. Useful when you dont have enough context to reason about how to answer the question.\nArgs: q (str): The query string to search for\nReturns: str: The wikipedia search results*\n\ninput = {'q':'barak obama'}\n\n\nwikipedia_search(**input)\n\n'Barack Hussein Obama II (born August 4, 1961) is an American politician who was the 44th president of the United States from 2009 to 2017. A member of the Democratic Party, he was the first and only African American president in American history. Obama previously served as a U.S. senator representing Illinois from 2005 to 2008 and as an Illinois state senator from 1997 to 2004.\\nBorn in Honolulu, Hawaii, Obama graduated from Columbia University in 1983 with a Bachelor of Arts degree in political science and later worked as a community organizer in Chicago. In 1988, Obama enrolled in Harvard Law School, where he was the first black president of the Harvard Law Review. He became a civil rights attorney and an academic, teaching constitutional law at the University of Chicago Law School from 1992 to 2004. In 1996, Obama was elected to represent the 13th district in the Illinois Senate, a position he held until 2004, when he successfully ran for the U.S. Senate. In the 2008 presidential election, after a close primary campaign against Hillary Clinton, he was nominated by the Democratic Party for president. Obama selected Joe Biden as his running mate and defeated Republican nominee John McCain and his running mate Sarah Palin.\\nObama was awarded the 2009 Nobel Peace Prize for efforts in international diplomacy, a decision which drew both criticism and praise. During his first term, his administration responded to the 2008 financial crisis with measures including the American Recovery and Reinvestment Act of 2009, a major stimulus package to guide the economy in recovering from the Great Recession; a partial extension of the Bush tax cuts; legislation to reform health care; and the Dodd–Frank Wall Street Reform and Consumer Protection Act, a major financial regulation reform bill. Obama also appointed Supreme Court justices Sonia Sotomayor and Elena Kagan, the former being the first Hispanic American on the Supreme Court. He oversaw the end of the Iraq War and ordered Operation Neptune Spear, the raid that killed Osama bin Laden, who was responsible for the September 11 attacks. Obama downplayed Bush\\'s counterinsurgency model, expanding air strikes and making extensive use of special forces, while encouraging greater reliance on host-government militaries. He also ordered the 2011 military intervention in Libya to implement United Nations Security Council Resolution 1973, contributing to the overthrow of Muammar Gaddafi and the outbreak of the Libyan crisis.\\nObama defeated Republican opponent Mitt Romney and his running mate Paul Ryan in the 2012 presidential election. In his second term, Obama advocated for gun control in the wake of the Sandy Hook Elementary School shooting, took steps to combat climate change, signing the Paris Agreement, a major international climate agreement, and an executive order to limit carbon emissions. Obama also presided over the implementation of the Affordable Care Act and other legislation passed in his first term. He initiated sanctions against Russia following the invasion in Ukraine and again after Russian interference in the 2016 U.S. elections, ordered military intervention in Iraq in response to gains made by ISIL following the 2011 withdrawal from Iraq, negotiated the Joint Comprehensive Plan of Action (a nuclear agreement with Iran), and normalized relations with Cuba. The number of American soldiers in Afghanistan decreased during Obama\\'s second term, though U.S. soldiers remained in the country throughout the remainder of his presidency. Obama promoted inclusion for LGBT Americans, becoming the first sitting U.S. president to publicly support same-sex marriage.\\nObama left office in 2017 with high approval ratings both within the United States and among foreign advisories. He continues to reside in Washington D.C. and remains politically active, campaigning for candidates in various American elections, including in Biden\\'s successful presidential bid in the 2020 presidential election. Outside of politics, Obama has published three books: Dreams from My Father (1995), The Audacity of Hope (2006), and A Promised Land (2020). His presidential library began construction in the South Side of Chicago in 2021. Historians and political scientists rank Obama among the upper tier in historical rankings of U.S. presidents.\\n\\n\\n== Early life and career ==\\n\\nBarack Obama was born on August 4, 1961, at Kapiolani Medical Center for Women and Children in Honolulu, Hawaii. He is the only president born outside the contiguous 48 states. He was born to an 18-year-old American mother and a 27-year-old Kenyan father. His mother, Ann Dunham (1942–1995), was born in Wichita, Kansas, and was of English, Welsh, German, Swiss, and Irish descent. In 2007 it was discovered her great-great-grandfather Falmouth Kearney emigrated from the village of Moneygall, Ireland to the U.S. in 1850. In July 2012, Ancestry.com found a strong likelihood that Dunham was descended from John Punch, an enslaved African man who lived in the Colony of Virginia during the seventeenth century. Obama\\'s father, Barack Obama Sr. (1934–1982), was a married Luo Kenyan from Nyang\\'oma Kogelo. His last name, Obama, was derived from his Luo descent. Obama\\'s parents met in 1960 in a Russian language class at the University of Hawaiʻi at Mānoa, where his father was a foreign student on a scholarship. The couple married in Wailuku, Hawaii, on February 2, 1961, six months before Obama was born.\\nIn late August 1961, a few weeks after he was born, Barack and his mother moved to the University of Washington in Seattle, where they lived for a year. During that time, Barack\\'s father completed his undergraduate degree in economics in Hawaii, graduating in June 1962. He left to attend graduate school on a scholarship at Harvard University, where he earned a Master of Arts in economics. Obama\\'s parents divorced in March 1964. Obama Sr. returned to Kenya in 1964, where he married for a third time and worked for the Kenyan government as the senior economic analyst in the Ministry of Finance. He visited his son in Hawaii only once, at Christmas 1971, before he was killed in an automobile accident in 1982, when Obama was 21 years old. Recalling his early childhood, Obama said: \"That my father looked nothing like the people around me—that he was black as pitch, my mother white as milk—barely registered in my mind.\" He described his struggles as a young adult to reconcile social perceptions of his multiracial heritage.\\nIn 1963, Dunham met Lolo Soetoro at the University of Hawaii; he was an Indonesian East–West Center graduate student in geography. The couple married on Molokai on March 15, 1965. After two one-year extensions of his J-1 visa, Lolo returned to Indonesia in 1966. His wife and stepson followed sixteen months later in 1967. The family initially lived in the Menteng Dalam neighborhood in the Tebet district of South Jakarta. From 1970, they lived in a wealthier neighborhood in the Menteng district of Central Jakarta.\\n\\n\\n=== Education ===\\n\\nAt the age of 6, Obama and his mother had moved to Indonesia to join his stepfather. From age six to ten, he was registered in school as \"Barry\" and attended local Indonesian-language schools: Sekolah Dasar Katolik Santo Fransiskus Asisi (St. Francis of Assisi Catholic Elementary School) for two years and Sekolah Dasar Negeri Menteng 01 (State Elementary School Menteng 01) for one and a half years, supplemented by English-language Calvert School homeschooling by his mother. As a result of his four years in Jakarta, he was able to speak Indonesian fluently as a child. During his time in Indonesia, Obama\\'s stepfather taught him to be resilient and gave him \"a pretty hardheaded assessment of how the world works\".\\nIn 1971, Obama returned to Honolulu to live with his maternal grandparents, Madelyn and Stanley Dunham. He attended Punahou School—a private college preparatory school—with the aid of a scholarship from fifth grade until he graduated from high school in 1979. In high school, Obama continued to use the nickname \"Barry\" which he kept until making a visit to Kenya in 1980. Obama lived with his mother and half-sister, Maya Soetoro, in Hawaii for three years from 1972 to 1975 while his mother was a graduate student in anthropology at the University of Hawaii. Obama chose to stay in Hawaii when his mother and half-sister returned to Indonesia in 1975, so his mother could begin anthropology field work. His mother spent most of the next two decades in Indonesia, divorcing Lolo Soetoro in 1980 and earning a PhD degree in 1992, before dying in 1995 in Hawaii following unsuccessful treatment for ovarian and uterine cancer.\\nOf his years in Honolulu, Obama wrote: \"The opportunity that Hawaii offered — to experience a variety of cultures in a climate of mutual respect — became an integral part of my world view, and a basis for the values that I hold most dear.\" Obama has also written and talked about using alcohol, marijuana, and cocaine during his teenage years to \"push questions of who I was out of my mind\". Obama was also a member of the \"Choom Gang\" (the slang term for smoking marijuana), a self-named group of friends who spent time together and smoked marijuana.\\n College and research jobs \\nAfter graduating from high school in 1979, Obama moved to Los Angeles to attend Occidental College on a full scholarship. In February 1981, Obama made his first public speech, calling for Occidental to participate in the disinvestment from South Africa in response to that nation\\'s policy of apartheid. In mid-1981, Obama traveled to Indonesia to visit his mother and half-sister Maya and visited the families of college friends in Pakistan for three weeks. Later in 1981, he transferred to Columbia University in New York City as a junior, where he majored in political science with a specialty in international relations and in English literature and lived off-campus on West 109th Street. He graduated with a Bachelor of Arts degree in 1983 and a 3.7 GPA. After graduating, Obama worked for about a year at the Business International Corporation, where he was a financial researcher and writer, then as a project coordinator for the New York Public Interest Research Group on the City College of New York campus for three months in 1985.\\n Community organizer and Harvard Law School \\nTwo years after graduating from Columbia, Obama moved from New York to Chicago when he was hired as director of the Developing Communities Project, a faith-based community organization originally comprising eight Catholic parishes in Roseland, West Pullman, and Riverdale on Chicago\\'s South Side. He worked there as a community organizer from June 1985 to May 1988. He helped set up a job training program, a college preparatory tutoring program, and a tenants\\' rights organization in Altgeld Gardens. Obama also worked as a consultant and instructor for the Gamaliel Foundation, a community organizing institute. In mid-1988, he traveled for the first time in Europe for three weeks and then for five weeks in Kenya, where he met many of his paternal relatives for the first time.\\n\\nDespite being offered a full scholarship to Northwestern University School of Law, Obama enrolled at Harvard Law School in the fall of 1988, living in nearby Somerville, Massachusetts. He was selected as an editor of the Harvard Law Review at the end of his first year, president of the journal in his second year, and research assistant to the constitutional scholar Laurence Tribe while at Harvard. During his summers, he returned to Chicago, where he worked as a summer associate at the law firms of Sidley Austin in 1989 and Hopkins & Sutter in 1990. Obama\\'s election as the first black president of the Harvard Law Review gained national media attention and led to a publishing contract and advance for a book about race relations, which evolved into a personal memoir. The manuscript was published in mid-1995 as Dreams from My Father. Obama graduated from Harvard Law in 1991 with a Juris Doctor magna cum laude.\\n University of Chicago Law School \\nIn 1991, Obama accepted a two-year position as Visiting Law and Government Fellow at the University of Chicago Law School to work on his first book. He then taught constitutional law at the University of Chicago Law School for twelve years, first as a lecturer from 1992 to 1996, and then as a senior lecturer from 1996 to 2004.\\nFrom April to October 1992, Obama directed Illinois\\'s Project Vote, a voter registration campaign with ten staffers and seven hundred volunteer registrars; it achieved its goal of registering 150,000 of 400,000 unregistered African Americans in the state, leading Crain\\'s Chicago Business to name Obama to its 1993 list of \"40 under Forty\" powers to be.\\n\\n\\n=== Family and personal life ===\\n\\nIn a 2006 interview, Obama highlighted the diversity of his extended family: \"It\\'s like a little mini-United Nations,\" he said. \"I\\'ve got relatives who look like Bernie Mac, and I\\'ve got relatives who look like Margaret Thatcher.\" Obama has a half-sister with whom he was raised (Maya Soetoro-Ng) and seven other half-siblings from his Kenyan father\\'s family, six of them living. Obama\\'s mother was survived by her Kansas-born mother, Madelyn Dunham, until her death on November 2, 2008, two days before his election to the presidency. Obama also has roots in Ireland; he met with his Irish cousins in Moneygall in May 2011. In Dreams from My Father, Obama ties his mother\\'s family history to possible Native American ancestors and distant relatives of Jefferson Davis, President of the Confederate States of America during the American Civil War. He also shares distant ancestors in common with George W. Bush and Dick Cheney, among others.\\nObama lived with anthropologist Sheila Miyoshi Jager while he was a community organizer in Chicago in the 1980s. He proposed to her twice, but both Jager and her parents turned him down. The relationship was not made public until May 2017, several months after his presidency had ended.\\n\\nIn June 1989, Obama met Michelle Robinson when he was employed at Sidley Austin. Robinson was assigned for three months as Obama\\'s adviser at the firm, and she joined him at several group social functions but declined his initial requests to date. They began dating later that summer, became engaged in 1991, and were married on October 3, 1992. After suffering a miscarriage, Michelle underwent in vitro fertilization to conceive their children. The couple\\'s first daughter, Malia Ann, was born in 1998, followed by a second daughter, Natasha (\"Sasha\"), in 2001. The Obama daughters attended the University of Chicago Laboratory Schools. When they moved to Washington, D.C., in January 2009, the girls started at the Sidwell Friends School. The Obamas had two Portuguese Water Dogs; the first, a male named Bo, was a gift from Senator Ted Kennedy. In 2013, Bo was joined by Sunny, a female. Bo died of cancer on May 8, 2021.\\nObama is a supporter of the Chicago White Sox, and he threw out the first pitch at the 2005 ALCS when he was still a senator. In 2009, he threw out the ceremonial first pitch at the All-Star Game while wearing a White Sox jacket. He is also primarily a Chicago Bears football fan in the NFL, but in his childhood and adolescence was a fan of the Pittsburgh Steelers and rooted for them ahead of their victory in Super Bowl XLIII 12 days after he took office as president. In 2011, Obama invited the 1985 Chicago Bears to the White House; the team had not visited the White House after their Super Bowl win in 1986 due to the Space Shuttle Challenger disaster. He plays basketball, a sport he participated in as a member of his high school\\'s varsity team, and he is left-handed.\\nIn 2005, the Obama family applied the proceeds of a book deal and moved from a Hyde Park, Chicago condominium to a $1.6 million house (equivalent to $2.6 million in 2024) in neighboring Kenwood, Chicago. The purchase of an adjacent lot—and sale of part of it to Obama by the wife of developer, campaign donor and friend Tony Rezko—attracted media attention because of Rezko\\'s subsequent indictment and conviction on political corruption charges that were unrelated to Obama.\\nIn December 2007, Money Magazine estimated Obama\\'s net worth at $1.3 million (equivalent to $2 million in 2024). Their 2009 tax return showed a household income of $5.5 million—up from about $4.2 million in 2007 and $1.6 million in 2005—mostly from sales of his books. On his 2010 income of $1.7 million, he gave 14 percent to non-profit organizations, including $131,000 to Fisher House Foundation, a charity assisting wounded veterans\\' families, allowing them to reside near where the veteran is receiving medical treatments. Per his 2012 financial disclosure, Obama may be worth as much as $10 million.\\n\\n\\n=== Religious views ===\\nObama is a Protestant Christian whose religious views developed in his adult life. He wrote in The Audacity of Hope that he \"was not raised in a religious household.\" He described his mother, raised by non-religious parents, as being detached from religion, yet \"in many ways the most spiritually awakened person ... I have ever known\", and \"a lonely witness for secular humanism.\" He described his father as a \"confirmed atheist\" by the time his parents met, and his stepfather as \"a man who saw religion as not particularly useful.\" Obama explained how, through working with black churches as a community organizer while in his twenties, he came to understand \"the power of the African-American religious tradition to spur social change.\"\\n\\nIn January 2008, Obama told Christianity Today: \"I am a Christian, and I am a devout Christian. I believe in the redemptive death and resurrection of Jesus Christ. I believe that faith gives me a path to be cleansed of sin and have eternal life.\" On September 27, 2010, Obama released a statement commenting on his religious views, saying:\\n\\nI\\'m a Christian by choice. My family didn\\'t—frankly, they weren\\'t folks who went to church every week. And my mother was one of the most spiritual people I knew, but she didn\\'t raise me in the church. So I came to my Christian faith later in life, and it was because the precepts of Jesus Christ spoke to me in terms of the kind of life that I would want to lead—being my brothers\\' and sisters\\' keeper, treating others as they would treat me.\\nObama met Trinity United Church of Christ pastor Jeremiah Wright in October 1987 and became a member of Trinity in 1992. During Obama\\'s first presidential campaign in May 2008, he resigned from Trinity after some of Wright\\'s statements were criticized. Since moving to Washington, D.C., in 2009, the Obama family has attended several Protestant churches, including Shiloh Baptist Church and St. John\\'s Episcopal Church, as well as Evergreen Chapel at Camp David, but the members of the family do not attend church on a regular basis.\\nIn 2016, Obama said that he gets inspiration from a few items that remind him \"of all the different people I\\'ve met along the way\", adding: \"I carry these around all the time. I\\'m not that superstitious, so it\\'s not like I think I necessarily have to have them on me at all times.\" The items, \"a whole bowl full\", include rosary beads given to him by Pope Francis, a figurine of the Hindu deity Hanuman, a Coptic cross from Ethiopia, a small Buddha statue given by a monk, and a metal poker chip that used to be the lucky charm of a motorcyclist in Iowa.\\n\\n\\n== Legal career ==\\nFrom 1994 to 2002, Obama served on the boards of directors of the Woods Fund of Chicago—which in 1985 had been the first foundation to fund the Developing Communities Project—and of the Joyce Foundation. He served on the board of directors of the Chicago Annenberg Challenge from 1995 to 2002, as founding president and chairman of the board of directors from 1995 to 1999. Obama\\'s law license became inactive in 2007.\\n\\n\\n== Legislative career ==\\n\\n\\n=== Illinois Senate (1997–2004) ===\\n\\nObama was elected to the Illinois Senate in 1996, succeeding Democratic state senator Alice Palmer from Illinois\\'s 13th District, which, at that time, spanned Chicago South Side neighborhoods from Hyde Park–Kenwood south to South Shore and west to Chicago Lawn. Once elected, Obama gained bipartisan support for legislation that reformed ethics and health care laws. He sponsored a law that increased tax credits for low-income workers, negotiated welfare reform, and promoted increased subsidies for childcare. In 2001, as co-chairman of the bipartisan Joint Committee on Administrative Rules, Obama supported Republican governor George Ryan\\'s payday loan regulations and predatory mortgage lending regulations aimed at averting home foreclosures.\\nHe was reelected to the Illinois Senate in 1998, defeating Republican Yesse Yehudah in the general election, and was re-elected again in 2002. In 2000, he lost a Democratic primary race for Illinois\\'s 1st congressional district in the United States House of Representatives to four-term incumbent Bobby Rush by a margin of two to one.\\nIn January 2003, Obama became chairman of the Illinois Senate\\'s Health and Human Services Committee when Democrats, after a decade in the minority, regained a majority. He sponsored and led unanimous, bipartisan passage of legislation to monitor racial profiling by requiring police to record the race of drivers they detained, and legislation making Illinois the first state to mandate videotaping of homicide interrogations. During his 2004 general election campaign for the U.S. Senate, police representatives credited Obama for his active engagement with police organizations in enacting death penalty reforms. Obama resigned from the Illinois Senate in November 2004 following his election to the U.S. Senate.\\n\\n\\n=== 2004 U.S. Senate campaign in Illinois ===\\n\\nIn May 2002, Obama commissioned a poll to assess his prospects in a 2004 U.S. Senate race. He created a campaign committee, began raising funds, and lined up political media consultant David Axelrod by August 2002. Obama formally announced his candidacy in January 2003.\\nObama was an early opponent of the George W. Bush administration\\'s 2003 invasion of Iraq. On October 2, 2002, the day President Bush and Congress agreed on the joint resolution authorizing the Iraq War, Obama addressed the first high-profile Chicago anti-Iraq War rally, and spoke out against the war. He addressed another anti-war rally in March 2003 and told the crowd \"it\\'s not too late\" to stop the war.\\nDecisions by Republican incumbent Peter Fitzgerald and his Democratic predecessor Carol Moseley Braun not to participate in the election resulted in wide-open Democratic and Republican primary contests involving 15 candidates. In the March 2004 primary election, Obama won in an unexpected landslide—which overnight made him a rising star within the national Democratic Party, started speculation about a presidential future, and led to the reissue of his memoir, Dreams from My Father. In July 2004, Obama delivered the keynote address at the 2004 Democratic National Convention, seen by nine million viewers. His speech was well received and elevated his status within the Democratic Party.\\nObama\\'s expected opponent in the general election, Republican primary winner Jack Ryan, withdrew from the race in June 2004. Six weeks later, Alan Keyes accepted the Republican nomination to replace Ryan. In the November 2004 general election, Obama won with 70 percent of the vote, the largest margin of victory for a Senate candidate in Illinois history. He took 92 of the state\\'s 102 counties, including several where Democrats traditionally do not do well.\\n\\n\\n=== U.S. Senate (2005–2008) ===\\n\\nObama was sworn in as a senator on January 3, 2005, becoming the only Senate member of the Congressional Black Caucus. He introduced two initiatives that bore his name: Lugar–Obama, which expanded the Nunn–Lugar Cooperative Threat Reduction concept to conventional weapons; and the Federal Funding Accountability and Transparency Act of 2006, which authorized the establishment of USAspending.gov, a web search engine on federal spending. On June 3, 2008, Senator Obama—along with Senators Tom Carper, Tom Coburn, and John McCain—introduced follow-up legislation: Strengthening Transparency and Accountability in Federal Spending Act of 2008. He also cosponsored the Secure America and Orderly Immigration Act.\\nIn December 2006, President Bush signed into law the Democratic Republic of the Congo Relief, Security, and Democracy Promotion Act, marking the first federal legislation to be enacted with Obama as its primary sponsor. In January 2007, Obama and Senator Feingold introduced a corporate jet provision to the Honest Leadership and Open Government Act, which was signed into law in September 2007.\\nLater in 2007, Obama sponsored an amendment to the Defense Authorization Act to add safeguards for personality-disorder military discharges. This amendment passed the full Senate in the spring of 2008. He sponsored the Iran Sanctions Enabling Act supporting divestment of state pension funds from Iran\\'s oil and gas industry, which was never enacted but later incorporated in the Comprehensive Iran Sanctions, Accountability, and Divestment Act of 2010; and co-sponsored legislation to reduce risks of nuclear terrorism. Obama also sponsored a Senate amendment to the State Children\\'s Health Insurance Program, providing one year of job protection for family members caring for soldiers with combat-related injuries.\\nObama held assignments on the Senate Committees for Foreign Relations, Environment and Public Works, and Veterans\\' Affairs through December 2006. In January 2007, he left the Environment and Public Works committee and took additional assignments with Health, Education, Labor and Pensions and Homeland Security and Governmental Affairs. He also became Chairman of the Senate\\'s subcommittee on European Affairs. As a member of the Senate Foreign Relations Committee, Obama made official trips to Eastern Europe, the Middle East, Central Asia, and Africa. He met with Mahmoud Abbas before Abbas became President of the Palestinian National Authority and gave a speech at the University of Nairobi in which he condemned corruption within the Kenyan government. Obama resigned his Senate seat on November 16, 2008, to focus on his transition period for the presidency.\\n\\n\\n== Presidential campaigns ==\\n\\n\\n=== 2008 presidential candidacy ===\\n\\nOn February 10, 2007, Obama announced his candidacy for President of the United States in front of the Old State Capitol building in Springfield, Illinois. The choice of the announcement site was viewed as symbolic, as it was also where Abraham Lincoln delivered his \"House Divided\" speech in 1858. Obama emphasized issues of rapidly ending the Iraq War, increasing energy independence, and reforming the health care system.\\n\\nNumerous candidates entered the Democratic Party presidential primaries. The field narrowed to Obama and Senator Hillary Clinton after early contests, with the race remaining close throughout the primary process, but Obama gained a steady lead in pledged delegates due to better long-range planning, superior fundraising, dominant organizing in caucus states, and better exploitation of delegate allocation rules. \\nOn June 2, 2008, Obama had received enough votes to clinch his nomination. After an initial hesitation to concede, on June 7, Clinton ended her campaign and endorsed Obama. On August 23, 2008, Obama announced his selection of Delaware senator Joe Biden as his vice presidential running mate. Obama selected Biden from a field speculated to include former Indiana governor and senator Evan Bayh and Virginia governor Tim Kaine. At the Democratic National Convention in Denver, Colorado, Hillary Clinton called for her supporters to endorse Obama, and she and Bill Clinton gave convention speeches in his support. Obama delivered his acceptance speech at Invesco Field at Mile High stadium to a crowd of about eighty-four thousand; the speech was viewed by over three million people worldwide. During both the primary process and the general election, Obama\\'s campaign set numerous fundraising records, particularly in the quantity of small donations. On June 19, 2008, Obama became the first major-party presidential candidate to turn down public financing in the general election since the system was created in 1976.\\nJohn McCain was nominated as the Republican candidate, and he selected Sarah Palin as his running mate. Obama and McCain engaged in three presidential debates in September and October 2008. On November 4, Obama won the presidency with 365 electoral votes to 173 received by McCain. Obama won 52.9 percent of the popular vote to McCain\\'s 45.7 percent. He became the first African-American to be elected president. Obama delivered his victory speech before hundreds of thousands of supporters in Chicago\\'s Grant Park. He is one of the three United States senators moved directly from the U.S. Senate to the White House, the others being Warren G. Harding and John F. Kennedy.\\n\\n\\n=== 2012 presidential candidacy ===\\n\\nOn April 4, 2011, Obama filed election papers with the Federal Election Commission and then announced his reelection campaign for 2012 in a video titled \"It Begins with Us\" that he posted on his website. As the incumbent president, he ran virtually unopposed in the Democratic Party presidential primaries, and on April 3, 2012, Obama secured the 2778 convention delegates needed to win the Democratic nomination. At the Democratic National Convention in Charlotte, North Carolina, Obama and Joe Biden were formally nominated by former president Bill Clinton as the Democratic Party candidates for president and vice president in the general election. Their main opponents were Republicans Mitt Romney, the former governor of Massachusetts, and Representative Paul Ryan of Wisconsin.\\nOn November 6, 2012, Obama won 332 electoral votes, exceeding the 270 required for him to be reelected as president. With 51.1 percent of the popular vote, Obama became the first Democratic president since Franklin D. Roosevelt to win the majority of the popular vote twice. Obama addressed supporters and volunteers at Chicago\\'s McCormick Place after his reelection and said: \"Tonight you voted for action, not politics as usual. You elected us to focus on your jobs, not ours. And in the coming weeks and months, I am looking forward to reaching out and working with leaders of both parties.\"\\n\\n\\n== Presidency (2009–2017) ==\\n\\n\\n=== First 100 days ===\\n\\nThe inauguration of Barack Obama as the 44th president took place on January 20, 2009. In his first few days in office, Obama issued executive orders and presidential memoranda directing the U.S. military to develop plans to withdraw troops from Iraq. He ordered the closing of the Guantanamo Bay detention camp, but Congress prevented the closure by refusing to appropriate the required funds and preventing moving any Guantanamo detainee. Obama reduced the secrecy given to presidential records. He also revoked President George W. Bush\\'s restoration of President Ronald Reagan\\'s Mexico City policy which prohibited federal aid to international family planning organizations that perform or provide counseling about abortion.\\n\\n\\n=== Domestic policy ===\\n\\nThe first bill signed into law by Obama was the Lilly Ledbetter Fair Pay Act of 2009, relaxing the statute of limitations for equal-pay lawsuits. Five days later, he signed the reauthorization of the State Children\\'s Health Insurance Program to cover an additional four million uninsured children. In March 2009, Obama reversed a Bush-era policy that had limited funding of embryonic stem cell research and pledged to develop \"strict guidelines\" on the research.\\n\\nObama appointed two women to serve on the Supreme Court in the first two years of his presidency. He nominated Sonia Sotomayor on May 26, 2009, to replace retiring associate justice David Souter. She was confirmed on August 6, 2009, becoming the first Supreme Court Justice of Hispanic descent. Obama nominated Elena Kagan on May 10, 2010, to replace retiring Associate Justice John Paul Stevens. She was confirmed on August 5, 2010, bringing the number of women sitting simultaneously on the Court to three for the first time in American history.\\nOn March 11, 2009, Obama created the White House Council on Women and Girls, which formed part of the Office of Intergovernmental Affairs, having been established by Executive Order 13506 with a broad mandate to advise him on issues relating to the welfare of American women and girls. The council was chaired by Senior Advisor to the President Valerie Jarrett. Obama also established the White House Task Force to Protect Students from Sexual Assault through a government memorandum on January 22, 2014, with a broad mandate to advise him on issues relating to sexual assault on college and university campuses throughout the United States. The co-chairs of the Task Force were Vice President Joe Biden and Jarrett. The Task Force was a development out of the White House Council on Women and Girls and Office of the Vice President of the United States, and prior to that the 1994 Violence Against Women Act first drafted by Biden.\\nIn July 2009, Obama launched the Priority Enforcement Program, an immigration enforcement program that had been pioneered by George W. Bush, and the Secure Communities fingerprinting and immigration status data-sharing program.\\nIn a major space policy speech in April 2010, Obama announced a planned change in direction at NASA, the U.S. space agency. He ended plans for a return of human spaceflight to the moon and development of the Ares I rocket, Ares V rocket and Constellation program, in favor of funding earth science projects, a new rocket type, research and development for an eventual crewed mission to Mars, and ongoing missions to the International Space Station.\\n\\nOn January 16, 2013, one month after the Sandy Hook Elementary School shooting, Obama signed 23 executive orders and outlined a series of sweeping proposals regarding gun control. He urged Congress to reintroduce an expired ban on military-style assault weapons, such as those used in several recent mass shootings, impose limits on ammunition magazines to 10 rounds, introduce background checks on all gun sales, pass a ban on possession and sale of armor-piercing bullets, introduce harsher penalties for gun-traffickers, especially unlicensed dealers who buy arms for criminals and approving the appointment of the head of the federal Bureau of Alcohol, Tobacco, Firearms and Explosives for the first time since 2006. On January 5, 2016, Obama announced new executive actions extending background check requirements to more gun sellers. In a 2016 editorial in The New York Times, Obama compared the struggle for what he termed \"common-sense gun reform\" to women\\'s suffrage and other civil rights movements in American history.\\nIn 2011, Obama signed a four-year renewal of the Patriot Act. Following the 2013 global surveillance disclosures by whistleblower Edward Snowden, Obama condemned the leak as unpatriotic, but called for increased restrictions on the National Security Agency (NSA) to address violations of privacy. Obama continued and expanded surveillance programs set up by George W. Bush, while implementing some reforms. He supported legislation that would have limited the NSA\\'s ability to collect phone records in bulk under a single program and supported bringing more transparency to the Foreign Intelligence Surveillance Court (FISC).\\n\\n\\n==== Racial issues ====\\n\\nIn his speeches as president, Obama did not make more overt references to race relations than his predecessors, but according to one study, he implemented stronger policy action on behalf of African-Americans than any president since the Nixon era.\\nFollowing Obama\\'s election, many pondered the existence of a \"post-racial America\". However, lingering racial tensions quickly became apparent, and many African-Americans expressed outrage over what they saw as an intense racial animosity directed at Obama. The acquittal of George Zimmerman following the killing of Trayvon Martin sparked national outrage, leading to Obama giving a speech in which he said that \"Trayvon Martin could have been me 35 years ago.\" The shooting of Michael Brown in Ferguson, Missouri, sparked a wave of protests. These and other events led to the birth of the Black Lives Matter movement, which campaigns against violence and systemic racism toward black people. Though Obama entered office reluctant to talk about race, by 2014 he began openly discussing the disadvantages faced by many members of minority groups.\\nSeveral incidents during Obama\\'s presidency generated disapproval from the African-American community and with law enforcement, and Obama sought to build trust between law enforcement officials and civil rights activists, with mixed results. Some in law enforcement criticized Obama\\'s condemnation of racial bias after incidents in which police action led to the death of African-American men, while some racial justice activists criticized Obama\\'s expressions of empathy for the police. In a March 2016 Gallup poll, nearly one third of Americans said they worried \"a great deal\" about race relations, a higher figure than in any previous Gallup poll since 2001.\\n\\n\\n==== LGBT rights ====\\nOn October 8, 2009, Obama signed the Matthew Shepard and James Byrd Jr. Hate Crimes Prevention Act, a measure that expanded the 1969 United States federal hate-crime law to include crimes motivated by a victim\\'s actual or perceived gender, sexual orientation, gender identity, or disability. On October 30, 2009, Obama lifted the ban on travel to the United States by those infected with HIV. The lifting of the ban was celebrated by Immigration Equality. On December 22, 2010, Obama signed the Don\\'t Ask, Don\\'t Tell Repeal Act of 2010, which fulfilled a promise made in the 2008 presidential campaign to end the don\\'t ask, don\\'t tell policy of 1993 that had prevented gay and lesbian people from serving openly in the United States Armed Forces. In 2016, the Pentagon ended the policy that barred transgender people from serving openly in the military.\\n\\n\\n===== Same-sex marriage =====\\nAs a candidate for the Illinois state senate in 1996, Obama stated he favored legalizing same-sex marriage. During his Senate run in 2004, he said he supported civil unions and domestic partnerships for same-sex partners but opposed same-sex marriages. In 2008, he reaffirmed this position by stating \"I believe marriage is between a man and a woman. I am not in favor of gay marriage.\" On May 9, 2012, shortly after the official launch of his campaign for re-election as president, Obama said his views had evolved, and he publicly affirmed his personal support for the legalization of same-sex marriage, becoming the first sitting U.S. president to do so. During his second inaugural address on January 21, 2013, Obama became the first U.S. president in office to call for full equality for gay Americans, and the first to mention gay rights or the word \"gay\" in an inaugural address. In 2013, the Obama administration filed briefs that urged the Supreme Court to rule in favor of same-sex couples in the cases of Hollingsworth v. Perry (regarding same-sex marriage) and United States v. Windsor (regarding the Defense of Marriage Act).\\n\\n\\n==== Economic policy ====\\n\\nOn February 17, 2009, Obama signed the American Recovery and Reinvestment Act of 2009, a $787 billion (equivalent to $1153 billion in 2024) economic stimulus package aimed at helping the economy recover from the deepening worldwide recession. The act includes increased federal spending for health care, infrastructure, education, various tax breaks and incentives, and direct assistance to individuals. In March 2009, Obama\\'s Treasury Secretary, Timothy Geithner, took further steps to manage the 2008 financial crisis, including introducing the Public–Private Investment Program for Legacy Assets, which contains provisions for buying up to $2 trillion in depreciated real estate assets.\\n\\nObama intervened in the troubled automotive industry in March 2009, renewing loans for General Motors (GM) and Chrysler to continue operations while reorganizing. Over the following months the White House set terms for both firms\\' bankruptcies, including the sale of Chrysler to Italian automaker Fiat and a reorganization of GM giving the U.S. government a temporary 60 percent equity stake in the company. In June 2009, dissatisfied with the pace of economic stimulus, Obama called on his cabinet to accelerate the investment. He signed into law the Car Allowance Rebate System, known colloquially as \"Cash for Clunkers\", which temporarily boosted the economy.\\nThe Bush and Obama administrations authorized spending and loan guarantees from the Federal Reserve and the Department of the Treasury. These guarantees totaled about $11.5 trillion, but only $3 trillion had been spent by the end of November 2009. On August 2, 2011, after a lengthy congressional debate over whether to raise the nation\\'s debt limit, Obama signed the bipartisan Budget Control Act of 2011. The legislation enforced limits on discretionary spending until 2021, established a procedure to increase the debt limit, created a Congressional Joint Select Committee on Deficit Reduction to propose further deficit reduction with a stated goal of achieving at least $1.5 trillion in budgetary savings over 10 years, and established automatic procedures for reducing spending by as much as $1.2 trillion if legislation originating with the new joint select committee did not achieve such savings. By passing the legislation, Congress was able to prevent a U.S. government default on its obligations.\\nThe unemployment rate rose in 2009, reaching a peak in October at 10.0 percent and averaging 10.0 percent in the fourth quarter. Following a decrease to 9.7 percent in the first quarter of 2010, the unemployment rate fell to 9.6 percent in the second quarter, where it remained for the rest of the year. Between February and December 2010, employment rose by 0.8 percent, which was less than the average of 1.9 percent experienced during comparable periods in the past four employment recoveries. By November 2012, the unemployment rate fell to 7.7 percent, decreasing to 6.7 percent in the last month of 2013. During 2014, the unemployment rate continued to decline, falling to 6.3 percent in the first quarter. GDP growth returned in the third quarter of 2009, expanding at a rate of 1.6 percent, followed by a 5.0 percent increase in the fourth quarter. Growth continued in 2010, posting an increase of 3.7 percent in the first quarter, with lesser gains throughout the rest of the year. In July 2010, the Federal Reserve noted that economic activity continued to increase, but its pace had slowed, and chairman Ben Bernanke said the economic outlook was \"unusually uncertain\". Overall, the economy expanded at a rate of 2.9 percent in 2010.\\n\\nThe Congressional Budget Office (CBO) and a broad range of economists credit Obama\\'s stimulus plan for economic growth. The CBO released a report stating that the stimulus bill increased employment by 1–2.1 million, while conceding that \"it is impossible to determine how many of the reported jobs would have existed in the absence of the stimulus package.\" Although an April 2010, survey of members of the National Association for Business Economics showed an increase in job creation (over a similar January survey) for the first time in two years, 73 percent of 68 respondents believed the stimulus bill has had no impact on employment. The economy of the United States has grown faster than the other original NATO members by a wider margin under President Obama than it has anytime since the end of World War II. The Organisation for Economic Co-operation and Development credits the much faster growth in the United States to the stimulus plan of the U.S. and the austerity measures in the European Union.\\nWithin a month of the 2010 midterm elections, Obama announced a compromise deal with the Congressional Republican leadership that included a temporary, two-year extension of the 2001 and 2003 income tax rates, a one-year payroll tax reduction, continuation of unemployment benefits, and a new rate and exemption amount for estate taxes. The compromise overcame opposition from some in both parties, and the resulting $858 billion (equivalent to $1.2 trillion in 2024) Tax Relief, Unemployment Insurance Reauthorization, and Job Creation Act of 2010 passed with bipartisan majorities in both houses of Congress before Obama signed it on December 17, 2010.\\nIn December 2013, Obama declared that growing income inequality is a \"defining challenge of our time\" and called on Congress to bolster the safety net and raise wages. This came on the heels of the nationwide strikes of fast-food workers and Pope Francis\\' criticism of inequality and trickle-down economics. Obama urged Congress to ratify a 12-nation free trade pact called the Trans-Pacific Partnership.\\n\\n\\n==== Environmental policy ====\\n\\nOn April 20, 2010, an explosion destroyed an offshore drilling rig at the Macondo Prospect in the Gulf of Mexico, causing a major sustained oil leak. Obama visited the Gulf, announced a federal investigation, and formed a bipartisan commission to recommend new safety standards, after a review by Secretary of the Interior Ken Salazar and concurrent Congressional hearings. He then announced a six-month moratorium on new deepwater drilling permits and leases, pending regulatory review. As multiple efforts by BP failed, some in the media and public expressed confusion and criticism over various aspects of the incident, and stated a desire for more involvement by Obama and the federal government. Prior to the oil spill, on March 31, 2010, Obama ended a ban on oil and gas drilling along the majority of the East Coast of the United States and along the coast of northern Alaska in an effort to win support for an energy and climate bill and to reduce foreign imports of oil and gas.\\nIn July 2013, Obama expressed reservations and said he \"would reject the Keystone XL pipeline if it increased carbon pollution [or] greenhouse emissions.\" On February 24, 2015, Obama vetoed a bill that would have authorized the pipeline. It was the third veto of Obama\\'s presidency and his first major veto.\\nIn December 2016, Obama permanently banned new offshore oil and gas drilling in most United States-owned waters in the Atlantic and Arctic Oceans using the 1953 Outer Continental Shelf Act.\\nObama emphasized the conservation of federal lands during his term in office. He used his power under the Antiquities Act to create 25 new national monuments during his presidency and expand four others, protecting a total of 553,000,000 acres (224,000,000 ha) of federal lands and waters, more than any other U.S. president.\\n\\n\\n==== Health care reform ====\\n\\nObama called for Congress to pass legislation reforming health care in the United States, a key campaign promise and a top legislative goal. He proposed an expansion of health insurance coverage to cover the uninsured, cap premium increases, and allow people to retain their coverage when they leave or change jobs. His proposal was to spend $900 billion over ten years and include a government insurance plan, also known as the public option, to compete with the corporate insurance sector as a main component to lowering costs and improving quality of health care. It would also make it illegal for insurers to drop sick people or deny them coverage for pre-existing conditions, and require every American to carry health coverage. The plan also includes medical spending cuts and taxes on insurance companies that offer expensive plans.\\n\\nOn July 14, 2009, House Democratic leaders introduced a 1,017-page plan for overhauling the U.S. health care system, which Obama wanted Congress to approve by the end of 2009. After public debate during the Congressional summer recess of 2009, Obama delivered a speech to a joint session of Congress on September 9 where he addressed concerns over the proposals. In March 2009, Obama lifted a ban on using federal funds for stem cell research.\\nOn November 7, 2009, a health care bill featuring the public option was passed in the House. On December 24, 2009, the Senate passed its own bill—without a public option—on a party-line vote of 60–39. On March 21, 2010, the Patient Protection and Affordable Care Act (ACA, colloquially \"Obamacare\") passed by the Senate in December was passed in the House by a vote of 219 to 212. Obama signed the bill into law on March 23, 2010.\\nThe ACA includes health-related provisions, most of which took effect in 2014, including expanding Medicaid eligibility for people making up to 133 percent of the federal poverty level (FPL) starting in 2014, subsidizing insurance premiums for people making up to 400 percent of the FPL ($88,000 for family of four in 2010) so their maximum \"out-of-pocket\" payment for annual premiums will be from 2 percent to 9.5 percent of income, providing incentives for businesses to provide health care benefits, prohibiting denial of coverage and denial of claims based on pre-existing conditions, establishing health insurance exchanges, prohibiting annual coverage caps, and support for medical research. According to White House and CBO figures, the maximum share of income that enrollees would have to pay would vary depending on their income relative to the federal poverty level.\\n\\nThe costs of these provisions are offset by taxes, fees, and cost-saving measures, such as new Medicare taxes for those in high-income brackets, taxes on indoor tanning, cuts to the Medicare Advantage program in favor of traditional Medicare, and fees on medical devices and pharmaceutical companies; there is also a tax penalty for those who do not obtain health insurance, unless they are exempt due to low income or other reasons. In March 2010, the CBO estimated that the net effect of both laws will be a reduction in the federal deficit by $143 billion over the first decade.\\nThe law faced several legal challenges, primarily based on the argument that an individual mandate requiring Americans to buy health insurance was unconstitutional. On June 28, 2012, the Supreme Court ruled by a 5–4 vote in National Federation of Independent Business v. Sebelius that the mandate was constitutional under the U.S. Congress\\'s taxing authority. In Burwell v. Hobby Lobby the Court ruled that \"closely-held\" for-profit corporations could be exempt on religious grounds under the Religious Freedom Restoration Act from regulations adopted under the ACA that would have required them to pay for insurance that covered certain contraceptives. In June 2015, the Court ruled 6–3 in King v. Burwell that subsidies to help individuals and families purchase health insurance were authorized for those doing so on both the federal exchange and state exchanges, not only those purchasing plans \"established by the State\", as the statute reads.\\n\\n\\n=== Foreign policy ===\\n\\nIn February and March 2009, Vice President Joe Biden and Secretary of State Hillary Clinton made separate overseas trips to announce a \"new era\" in U.S. foreign relations with Russia and Europe, using the terms \"break\" and \"reset\" to signal major changes from the policies of the preceding administration. Obama attempted to reach out to Arab leaders by granting his first interview to an Arab satellite TV network, Al Arabiya. On March 19, Obama continued his outreach to the Muslim world, releasing a New Year\\'s video message to the people and government of Iran. On June 4, 2009, Obama delivered a speech at Cairo University in Egypt calling for \"A New Beginning\" in relations between the Islamic world and the United States and promoting Middle East peace. On June 26, 2009, Obama condemned the Iranian government\\'s actions towards protesters following Iran\\'s 2009 presidential election.\\nIn 2011, Obama ordered a drone strike in Yemen which targeted and killed Anwar al-Awlaki, an American imam suspected of being a leading Al-Qaeda organizer. al-Awlaki became the first U.S. citizen to be targeted and killed by a U.S. drone strike. The Department of Justice released a memo justifying al-Awlaki\\'s death as a lawful act of war, while civil liberties advocates described it as a violation of al-Awlaki\\'s constitutional right to due process. The killing led to significant controversy. His teenage son and young daughter, also Americans, were later killed in separate U.S. military actions, although they were not targeted specifically.\\n\\nIn March 2015, Obama declared that he had authorized U.S. forces to provide logistical and intelligence support to the Saudis in their military intervention in Yemen, establishing a \"Joint Planning Cell\" with Saudi Arabia. In 2016, the Obama administration proposed a series of arms deals with Saudi Arabia worth $115 billion. Obama halted the sale of guided munition technology to Saudi Arabia after Saudi warplanes targeted a funeral in Yemen\\'s capital Sanaa, killing more than 140 people.\\nIn September 2016 Obama was snubbed by Xi Jinping and the Chinese Communist Party as he descended from Air Force One to the tarmac of Hangzhou International Airport for the 2016 G20 Hangzhou summit without the usual red carpet welcome.\\n\\n\\n==== War in Iraq ====\\n\\nOn February 27, 2009, Obama announced that combat operations in Iraq would end within 18 months. The Obama administration scheduled the withdrawal of combat troops to be completed by August 2010, decreasing troop\\'s levels from 142,000 while leaving a transitional force of about 50,000 in Iraq until the end of 2011. On August 19, 2010, the last U.S. combat brigade exited Iraq. Remaining troops transitioned from combat operations to counter-terrorism and the training, equipping, and advising of Iraqi security forces. On August 31, 2010, Obama announced that the United States combat mission in Iraq was over. On October 21, 2011, President Obama announced that all U.S. troops would leave Iraq in time to be \"home for the holidays.\"\\nIn June 2014, following the capture of Mosul by ISIL, Obama sent 275 troops to provide support and security for U.S. personnel and the U.S. Embassy in Baghdad. ISIS continued to gain ground and to commit widespread massacres and ethnic cleansing. In August 2014, during the Sinjar massacre, Obama ordered a campaign of U.S. airstrikes against ISIL. By the end of 2014, 3,100 American ground troops were committed to the conflict and 16,000 sorties were flown over the battlefield, primarily by U.S. Air Force and Navy pilots. In early 2015, with the addition of the \"Panther Brigade\" of the 82nd Airborne Division the number of U.S. ground troops in Iraq increased to 4,400, and by July American-led coalition air forces counted 44,000 sorties over the battlefield.\\n\\n\\n==== Afghanistan and Pakistan ====\\n\\nIn his election campaign, Obama called the war in Iraq a \"dangerous distraction\" and that emphasis should instead be put on the war in Afghanistan, the region he cites as being most likely where an attack against the United States could be launched again. Early in his presidency, Obama moved to bolster U.S. troop strength in Afghanistan. He announced an increase in U.S. troop levels to 17,000 military personnel in February 2009 to \"stabilize a deteriorating situation in Afghanistan\", an area he said had not received the \"strategic attention, direction and resources it urgently requires.\" He replaced the military commander in Afghanistan, General David D. McKiernan, with former Special Forces commander Lt. Gen. Stanley A. McChrystal in May 2009, indicating that McChrystal\\'s Special Forces experience would facilitate the use of counterinsurgency tactics in the war. On December 1, 2009, Obama announced the deployment of an additional 30,000 military personnel to Afghanistan and proposed to begin troop withdrawals 18 months from that date; this took place in July 2011. David Petraeus replaced McChrystal in June 2010, after McChrystal\\'s staff criticized White House personnel in a magazine article. In February 2013, Obama said the U.S. military would reduce the troop level in Afghanistan from 68,000 to 34,000 U.S. troops by February 2014. In October 2015, the White House announced a plan to keep U.S. Forces in Afghanistan indefinitely in light of the deteriorating security situation.\\nRegarding neighboring Pakistan, Obama called its tribal border region the \"greatest threat\" to the security of Afghanistan and Americans, saying that he \"cannot tolerate a terrorist sanctuary.\" In the same speech, Obama claimed that the U.S. \"cannot succeed in Afghanistan or secure our homeland unless we change our Pakistan policy.\"\\n\\n\\n===== Death of Osama bin Laden =====\\n\\nStarting with information received from Central Intelligence Agency operatives in July 2010, the CIA developed intelligence over the next several months that determined what they believed to be the hideout of Osama bin Laden. He was living in seclusion in a large compound in Abbottabad, Pakistan, a suburban area 35 miles (56 km) from Islamabad. CIA head Leon Panetta reported this intelligence to President Obama in March 2011. Meeting with his national security advisers over the course of the next six weeks, Obama rejected a plan to bomb the compound, and authorized a \"surgical raid\" to be conducted by United States Navy SEALs. The operation took place on May 1, 2011, and resulted in the shooting death of bin Laden and the seizure of papers, computer drives and disks from the compound. DNA testing was one of five methods used to positively identify bin Laden\\'s corpse, which was buried at sea several hours later. Within minutes of the President\\'s announcement from Washington, DC, late in the evening on May 1, there were spontaneous celebrations around the country as crowds gathered outside the White House, and at New York City\\'s Ground Zero and Times Square. Reaction to the announcement was positive across party lines, including from former presidents Bill Clinton and George W. Bush.\\n\\n\\n==== Relations with Cuba ====\\n\\nSince the spring of 2013, secret meetings were conducted between the United States and Cuba in the neutral locations of Canada and Vatican City. The Vatican first became involved in 2013 when Pope Francis advised the U.S. and Cuba to exchange prisoners as a gesture of goodwill. On December 10, 2013, Cuban President Raúl Castro, in a significant public moment, greeted and shook hands with Obama at the Nelson Mandela memorial service in Johannesburg.\\nIn December 2014, after the secret meetings, it was announced that Obama, with Pope Francis as an intermediary, had negotiated a restoration of relations with Cuba, after nearly sixty years of détente. Popularly dubbed the Cuban Thaw, The New Republic deemed the Cuban Thaw to be \"Obama\\'s finest foreign policy achievement.\" On July 1, 2015, President Obama announced that formal diplomatic relations between Cuba and the United States would resume, and embassies would be opened in Washington and Havana. The countries\\' respective \"interests sections\" in one another\\'s capitals were upgraded to embassies on July 20 and August 13, 2015, respectively. Obama visited Havana, Cuba for two days in March 2016, becoming the first sitting U.S. president to arrive since Calvin Coolidge in 1928.\\n\\n\\n==== Israel ====\\n\\nDuring the initial years of the Obama administration, the U.S. increased military cooperation with Israel, including increased military aid, re-establishment of the U.S.–Israeli Joint Political Military Group and the Defense Policy Advisory Group, and an increase in visits among high-level military officials of both countries. The Obama administration asked Congress to allocate money toward funding the Iron Dome program in response to the waves of Palestinian rocket attacks on Israel. In March 2010, Obama took a public stance against plans by the government of Israeli prime minister Benjamin Netanyahu to continue building Jewish housing projects in predominantly Arab neighborhoods of East Jerusalem. In 2011, the United States vetoed a Security Council resolution condemning Israeli settlements, with the United States being the only nation to do so. Obama supports the two-state solution to the Arab–Israeli conflict based on the 1967 borders with land swaps.\\nIn 2013, Jeffrey Goldberg reported that, in Obama\\'s view, \"with each new settlement announcement, Netanyahu is moving his country down a path toward near-total isolation.\" In 2014, Obama likened the Zionist movement to the civil rights movement in the United States. He said both movements seek to bring justice and equal rights to historically persecuted peoples, explaining: \"To me, being pro-Israel and pro-Jewish is part and parcel with the values that I\\'ve been fighting for since I was politically conscious and started getting involved in politics.\" Obama expressed support for Israel\\'s right to defend itself during the 2014 Israel–Gaza conflict. In 2015, Obama was harshly criticized by Israel for advocating and signing the Iran Nuclear Deal; Israeli prime minister Benjamin Netanyahu, who had advocated the U.S. congress to oppose it, said the deal was \"dangerous\" and \"bad.\"\\nOn December 23, 2016, under the Obama administration, the United States abstained from United Nations Security Council Resolution 2334, which condemned Israeli settlement building in the occupied Palestinian territories as a violation of international law, effectively allowing it to pass. Netanyahu strongly criticized the Obama administration\\'s actions, and the Israeli government withdrew its annual dues from the organization, which totaled $6 million, on January 6, 2017. On January 5, 2017, the United States House of Representatives voted 342–80 to condemn the UN Resolution.\\n\\n\\n==== Libya ====\\n\\nIn February 2011, protests in Libya began against long-time dictator Muammar Gaddafi as part of the Arab Spring. They soon turned violent. In March, as forces loyal to Gaddafi advanced on rebels across Libya, calls for a no-fly zone came from around the world, including Europe, the Arab League, and a resolution passed unanimously by the U.S. Senate. In response to the passage of United Nations Security Council Resolution 1973 on March 17, the Foreign Minister of Libya Moussa Koussa announced a ceasefire. However Gaddafi\\'s forces continued to attack the rebels.\\nOn March 19, a multinational coalition led by France and the United Kingdom with Italian and U.S. support, approved by Obama, took part in air strikes to destroy the Libyan government\\'s air defense capabilities to protect civilians and enforce a no-fly-zone, including the use of Tomahawk missiles, B-2 Spirits, and fighter jets. Six days later, on March 25, by unanimous vote of all its 28 members, NATO took over leadership of the effort, dubbed Operation Unified Protector. Some members of Congress questioned whether Obama had the constitutional authority to order military action in addition to questioning its cost, structure and aftermath. In 2016 Obama said \"Our coalition could have and should have done more to fill a vacuum left behind\" and that it was \"a mess\". He has stated that the lack of preparation surrounding the days following the government\\'s overthrow was the \"worst mistake\" of his presidency.\\n\\n\\n==== Syrian civil war ====\\n\\nOn August 18, 2011, several months after the start of the Syrian civil war, Obama issued a written statement that said: \"The time has come for President Assad to step aside.\" This stance was reaffirmed in November 2015. In 2012, Obama authorized multiple programs run by the CIA and the Pentagon to train anti-Assad rebels. The Pentagon-run program was later found to have failed and was formally abandoned in October 2015.\\nIn the wake of a chemical weapons attack in Syria, formally blamed by the Obama administration on the Assad government, Obama chose not to enforce the \"red line\" he had pledged and, rather than authorize the promised military action against Assad, went along with the Russia-brokered deal that led to Assad giving up chemical weapons; however attacks with chlorine gas continued. In 2014, Obama authorized an air campaign aimed primarily at ISIL.\\n\\n\\n==== Iran nuclear talks ====\\n\\nOn October 1, 2009, the Obama administration went ahead with a Bush administration program, increasing nuclear weapons production. The \"Complex Modernization\" initiative expanded two existing nuclear sites to produce new bomb parts. In November 2013, the Obama administration opened negotiations with Iran to prevent it from acquiring nuclear weapons, which included an interim agreement. Negotiations took two years with numerous delays, with a deal being announced on July 14, 2015. The deal titled the \"Joint Comprehensive Plan of Action\" saw sanctions removed in exchange for measures that would prevent Iran from producing nuclear weapons. While Obama hailed the agreement as being a step towards a more hopeful world, the deal drew strong criticism from Republican and conservative quarters, and from Israeli Prime Minister Benjamin Netanyahu. In addition, the transfer of $1.7 billion in cash to Iran shortly after the deal was announced was criticized by the Republican party. The Obama administration said that the payment in cash was because of the \"effectiveness of U.S. and international sanctions.\" In order to advance the deal, the Obama administration shielded Hezbollah from the Drug Enforcement Administration\\'s Project Cassandra investigation regarding drug smuggling and from the Central Intelligence Agency.\\nOn a side note, the very same year, in December 2015, Obama started a $348 billion worth program to back the biggest U.S. buildup of nuclear arms since Ronald Reagan left the White House.\\n\\n\\n==== Russia ====\\n\\nIn March 2010, an agreement was reached with the administration of Russian President Dmitry Medvedev to replace the 1991 Strategic Arms Reduction Treaty with a new pact reducing the number of long-range nuclear weapons in the arsenals of both countries by about a third. Obama and Medvedev signed the New START treaty in April 2010, and the U.S. Senate ratified it in December 2010. In December 2011, Obama instructed agencies to consider LGBT rights when issuing financial aid to foreign countries. In August 2013, he criticized Russia\\'s law that discriminates against homosexual people, but he stopped short of advocating a boycott of the upcoming 2014 Winter Olympics in Sochi, Russia.\\nAfter Russia\\'s invasion of Crimea in 2014, military intervention in Syria in 2015, and the interference in the 2016 U.S. presidential election, George Robertson, a former UK defense secretary and NATO secretary-general, said Obama had \"allowed Putin to jump back on the world stage and test the resolve of the West\", adding that the legacy of this disaster would last.\\n\\n\\n== Post-presidency (2017–present) ==\\n\\nObama\\'s presidency ended on January 20, 2017, upon the inauguration of his successor, Donald Trump. The family moved to a house they rented in Kalorama, Washington, D.C. On March 2, the John F. Kennedy Presidential Library and Museum awarded the Profile in Courage Award to Obama \"for his enduring commitment to democratic ideals and elevating the standard of political courage.\" His first public appearance since leaving the office was a seminar at the University of Chicago on April 24, where he appealed for a new generation to participate in politics. On September 7, Obama partnered with former presidents Jimmy Carter, George H. W. Bush, Bill Clinton, and George W. Bush to work with One America Appeal to help the victims of Hurricane Harvey and Hurricane Irma in the Gulf Coast and Texas communities. From October 31 to November 1, Obama hosted the inaugural summit of the Obama Foundation, which he intended to be the central focus of his post-presidency and part of his ambitions for his subsequent activities following his presidency to be more consequential than his time in office.\\nBarack and Michelle Obama signed a deal on May 22, 2018, to produce docu-series, documentaries and features for Netflix under the Obamas\\' newly formed production company, Higher Ground Productions. Higher Ground\\'s first film, American Factory, won the Academy Award for Best Documentary Feature in 2020. On October 24, a pipe bomb addressed to Obama was intercepted by the Secret Service. It was one of several pipe-bombs that had been mailed out to Democratic lawmakers and officials. In 2019, Barack and Michelle Obama bought a home on Martha\\'s Vineyard from Wyc Grousbeck. On October 29, Obama criticized \"wokeness\" and call-out culture at the Obama Foundation\\'s annual summit.\\nObama was reluctant to make an endorsement in the 2020 Democratic presidential primaries because he wanted to position himself to unify the party, regardless of the nominee. On April 14, 2020, Obama endorsed Biden, the presumptive nominee, for president in the presidential election, stating that he has \"all the qualities we need in a president right now.\" In May, Obama criticized President Trump for his handling of the COVID-19 pandemic, calling his response to the crisis \"an absolute chaotic disaster\", and stating that the consequences of the Trump presidency have been \"our worst impulses unleashed, our proud reputation around the world badly diminished, and our democratic institutions threatened like never before.\" On November 17, Obama\\'s presidential memoir, A Promised Land, was released.\\nIn February 2021, Obama and musician Bruce Springsteen started a podcast called Renegades: Born in the USA where the two talk about \"their backgrounds, music and their \\'enduring love of America.\\'\" Later that year, Regina Hicks had signed a deal with Netflix, in a venture with his and Michelle\\'s Higher Ground to develop comedy projects.\\n\\nOn March 4, 2022, Obama won an Audio Publishers Association (APA) Award in the best narration by the author category for the narration of his memoir A Promised Land. On April 5, Obama visited the White House for the first time since leaving office, in an event celebrating the 12th annual anniversary of the signing of the Affordable Care Act. In June, it was announced that the Obamas and their podcast production company, Higher Ground, signed a multi-year deal with Audible. In September, Obama visited the White House to unveil his and Michelle\\'s official White House portraits. Around the same time, he won a Primetime Emmy Award for Outstanding Narrator for his narration in the Netflix documentary series Our Great National Parks.\\nIn 2022, Obama opposed expanding the Supreme Court beyond the present nine Justices.\\nIn March 2023, Obama traveled to Australia as a part of his speaking tour of the country. During the trip, Obama met with Australian prime minister Anthony Albanese and visited Melbourne for the first time. Obama was reportedly paid more than $1 million for two speeches.\\nIn October 2023, during the Gaza war, Obama declared that Israel must dismantle Hamas in the wake of the Hamas-led attack on Israel. Weeks later, Obama warned Israel that its actions could \"harden Palestinian attitudes for generations\" and weaken international support for Israel; any military strategy that ignored the war\\'s human costs \"could ultimately backfire.\"\\nIn July 2024, Obama expressed concerns about Biden\\'s campaign viability after his critically maligned debate performance against former president Trump. On July 21, Biden withdrew his candidacy and swiftly endorsed Vice President Harris right after to run as the Democratic nominee. Obama endorsed Harris alongside his wife Michelle five days later and delivered a speech at the 2024 Democratic National Convention formally endorsing her. He joined Harris on the campaign trail in October, traveling to various swing states and emphasizing her record as a prosecutor, senator, and vice president and advocating for increased voter turnout, and his criticisms of Donald Trump and the Republican Party were widely reported by various media outlets. After Trump was declared the winner of the election on November 6, Obama and Michelle congratulated him and Vice President–elect JD Vance while praising the Harris campaign and calling on liberal voters to continue supporting democracy and human rights.\\n\\n\\n== Cultural and political image ==\\n\\nObama\\'s family history, upbringing, and Ivy League education differ markedly from those of African-American politicians who rose to prominence in the 1960s through their involvement in the civil rights movement. Expressing puzzlement over questions about whether he is \"black enough\", Obama told an August 2007 meeting of the National Association of Black Journalists that \"we\\'re still locked in this notion that if you appeal to white folks then there must be something wrong.\" Obama acknowledged his youthful image in an October 2007 campaign speech, remarking: \"I wouldn\\'t be here if, time and again, the torch had not been passed to a new generation.\" Additionally, Obama has frequently been referred to as an exceptional orator. During his pre-inauguration transition period and continuing into his presidency, Obama delivered a series of weekly video addresses on YouTube.\\n\\n\\n=== Job approval ===\\n\\nAccording to the Gallup Organization, Obama began his presidency with a 68 percent approval rating, the fifth highest for a president following their swearing in. His ratings remained above the majority level until November 2009 and by August 2010 his approval was in the low 40s, a trend similar to Ronald Reagan\\'s and Bill Clinton\\'s first years in office. Following the death of Osama bin Laden on May 2, 2011, Obama experienced a small poll bounce and steadily maintained 50–53 percent approval for about a month, until his approval numbers dropped back to the low 40s.\\nHis approval rating fell to 38 percent on several occasions in late 2011 before recovering in mid-2012 with polls showing an average approval of 50 percent. After his second inauguration in 2013, Obama\\'s approval ratings remained stable around 52 percent before declining for the rest of the year and eventually bottoming out at 39 percent in December. In polling conducted before the 2014 midterm elections, Obama\\'s approval ratings were at their lowest with his disapproval rating reaching a high of 57 percent. His approval rating continued to lag throughout most of 2015 but began to reach the high 40s by the end of the year. According to Gallup, Obama\\'s approval rating reached 50 percent in March 2016, a level unseen since May 2013. In polling conducted January 16–19, 2017, Obama\\'s final approval rating was 59 percent, which placed him on par with George H. W. Bush and Dwight D. Eisenhower, whose final Gallup ratings also measured in the high 50s.\\nObama has maintained relatively positive public perceptions after his presidency. In Gallup\\'s retrospective approval polls of former presidents, Obama garnered a 63 percent approval rating in 2018 and again in 2023, ranking him the fourth most popular president since World War II.\\n\\n\\n=== Foreign perceptions ===\\nPolls showed strong support for Obama in other countries both before and during his presidency. In a February 2009 poll conducted in Western Europe and the U.S. by Harris Interactive for France 24 and the International Herald Tribune, Obama was rated as the most respected world leader, as well as the most powerful. In a similar poll conducted by Harris in May 2009, Obama was rated as the most popular world leader, as well as the one figure most people would pin their hopes on for pulling the world out of the economic downturn.\\nOn October 9, 2009—only nine months into his first term—the Norwegian Nobel Committee announced that Obama had won the 2009 Nobel Peace Prize \"for his extraordinary efforts to strengthen international diplomacy and cooperation between peoples\", which drew a mixture of praise and criticism from world leaders and media figures. He became the fourth U.S. president to be awarded the Nobel Peace Prize, and the third to become a Nobel laureate while in office. He himself called it a \"call to action\" and remarked: \"I do not view it as a recognition of my own accomplishments but rather an affirmation of American leadership on behalf of aspirations held by people in all nations\".\\n\\n\\n=== Thanks, Obama ===\\n\\nIn 2009, the saying \"thanks, Obama\" first appeared in a Twitter hashtag, \"#thanks Obama\", and was later used in a demotivational poster. It was later adopted satirically to blame Obama for any socio-economic ills. Obama himself used the phrase in video in 2015 and 2016. In 2017, the phrase was used by Stephen Colbert to express gratitude to Obama on his last day in office. In 2022, President Joe Biden\\'s Twitter account posted the phrase.\\n\\n\\n== Legacy and recognition ==\\nObama has been described as one of the most effective campaigners in American history (his 2008 campaign being particularly highlighted) as well as one of the most talented political orators of the 21st century. Historian Julian Zelizer credits Obama with \"a keen sense of how the institutions of government work and the ways that his team could design policy proposals.\" Zeitzer notes Obama\\'s policy successes included the economic stimulus package which ended the Great Recession and the Dodd-Frank financial and consumer protection reforms, as well as the Affordable Care Act. Zeitzer also notes the Democratic Party lost power and numbers of elected officials during Obama\\'s term, saying that the consensus among historians is that Obama \"turned out to be a very effective policymaker but not a tremendously successful party builder.\" Zeitzer calls this the \"defining paradox of Obama\\'s presidency\".\\nThe Brookings Institution noted that Obama passed \"only one major legislative achievement (Obamacare)—and a fragile one at that—the legacy of Obama\\'s presidency mainly rests on its tremendous symbolic importance and the fate of a patchwork of executive actions.\" David W. Wise noted that Obama fell short \"in areas many Progressives hold dear\", including the continuation of drone strikes, not going after big banks during the Great Recession, and failing to strengthen his coalition before pushing for Obamacare. Wise called Obama\\'s legacy that of \"a disappointingly conventional president\".\\nObama\\'s most significant accomplishment is generally considered to be the Affordable Care Act (ACA), provisions of which went into effect from 2010 to 2020. Many attempts by Senate Republicans to repeal the ACA, including a \"skinny repeal\", have thus far failed. However, in 2017, the penalty for violating the individual mandate was repealed effective 2019. Together with the Health Care and Education Reconciliation Act amendment, it represents the U.S. healthcare system\\'s most significant regulatory overhaul and expansion of coverage since the passage of Medicare and Medicaid in 1965.\\nMany commentators credit Obama with averting a threatened depression and pulling the economy back from the Great Recession. According to the U.S. Bureau of Labor Statistics, the Obama administration created 11.3 million jobs from the month after his first inauguration to the end of his second term. In 2010, Obama signed into effect the Dodd–Frank Wall Street Reform and Consumer Protection Act. Passed as a response to the 2008 financial crisis, it brought the most significant changes to financial regulation in the United States since the regulatory reform that followed the Great Depression under Democratic President Franklin D. Roosevelt.\\nIn 2009, Obama signed into law the National Defense Authorization Act for Fiscal Year 2010, which contained in it the Matthew Shepard and James Byrd Jr. Hate Crimes Prevention Act, the first addition to existing federal hate crime law in the United States since Democratic President Bill Clinton signed into law the Church Arson Prevention Act of 1996. The act expanded existing federal hate crime laws in the United States, and made it a federal crime to assault people based on sexual orientation, gender identity, or disability.\\nAs president, Obama advanced LGBT rights. In 2010, he signed the Don\\'t Ask, Don\\'t Tell Repeal Act, which brought an end to \"don\\'t ask, don\\'t tell\" policy in the U.S. armed forces that banned open service from LGBT people; the law went into effect the following year. In 2016, his administration brought an end to the ban on transgender people serving openly in the U.S. armed forces. A Gallup poll, taken in the final days of Obama\\'s term, showed that 68 percent of Americans believed the U.S. had made progress on LGBT rights during Obama\\'s eight years in office.\\nObama substantially escalated the use of drone strikes against suspected militants and terrorists associated with al-Qaeda and the Taliban. In 2016, the last year of his presidency, the U.S. dropped 26,171 bombs on seven different countries. Obama left about 8,400 U.S. troops in Afghanistan, 5,262 in Iraq, 503 in Syria, 133 in Pakistan, 106 in Somalia, seven in Yemen, and two in Libya at the end of his presidency.\\nAccording to Pew Research Center and United States Bureau of Justice Statistics, from December 31, 2009, to December 31, 2015, inmates sentenced in U.S. federal custody declined by five percent. This is the largest decline in sentenced inmates in U.S. federal custody of any president since Jimmy Carter. By contrast, the federal prison population increased significantly under presidents Ronald Reagan, George H. W. Bush, Bill Clinton, and George W. Bush.\\nHuman Rights Watch (HRW) called Obama\\'s human rights record \"mixed\", adding that \"he has often treated human rights as a secondary interest—nice to support when the cost was not too high, but nothing like a top priority he championed.\"\\nObama left office in January 2017 with a 60 percent approval rating. He gained 10 spots from the same survey in 2015 from the Brookings Institution that ranked him the 18th-greatest American president. In Gallup\\'s 2018 job approval poll for the past 10 U.S. presidents, he received a 63 percent approval rating.\\n\\n\\n=== Presidential library ===\\n\\nThe Barack Obama Presidential Center is Obama\\'s planned presidential library. It will be hosted by the University of Chicago and located in Jackson Park on the South Side of Chicago.\\n\\n\\n=== Awards and honors ===\\n\\nObama received the Norwegian Nobel Committee\\'s Nobel Peace Prize in 2009, The Shoah Foundation Institute for Visual History and Education\\'s Ambassador of Humanity Award in 2014, the John F. Kennedy Profile in Courage Award in 2017, and the Robert F. Kennedy Center for Justice and Human Rights Ripple of Hope Award in 2018. He was named TIME Magazine\\'s Time Person of the Year in 2008 and 2012. He also received two Grammy Awards for Best Spoken Word Album for Dreams from My Father (2006), and The Audacity of Hope (2008) as well as two Primetime Emmy Awards for Outstanding Narrator for Our Great National Parks (2022), and Working: What We Do All Day (2023). He also won two Children\\'s and Family Emmy Awards.\\n\\n\\n=== Eponymy ===\\n\\n\\n== Bibliography ==\\n\\n\\n== See also ==\\n\\n\\n=== Politics ===\\nDREAM Act\\nFraud Enforcement and Recovery Act of 2009\\nImmigration Reform and Control Act of 1986\\nIRS targeting controversy\\nMiddle Class Tax Relief and Job Creation Act of 2012\\nNational Broadband Plan (United States)\\nOffice of Energy Efficiency and Renewable Energy\\nSocial policy of the Barack Obama administration\\nSPEECH Act\\nStay with It\\nWhite House Office of Energy and Climate Change Policy\\n\\n\\n=== Other ===\\nRoberts Court\\nSpeeches of Barack Obama\\n\\n\\n=== Lists ===\\nAssassination threats against Barack Obama\\nList of African-American United States senators\\nList of Barack Obama 2008 presidential campaign endorsements\\nList of Barack Obama 2012 presidential campaign endorsements\\nList of federal political scandals, 2009–17\\nList of people granted executive clemency by Barack Obama\\nList of presidents of the United States\\nList of presidents of the United States by previous experience\\nList of things named after Barack Obama\\n\\n\\n== Notes ==\\n\\n\\n== References ==\\n\\n\\n=== Bibliography ===\\n\\n\\n== Further reading ==\\n\\n\\n== External links ==\\n\\n\\n=== Official ===\\nOfficial website of The Obama Foundation\\nOfficial website of the Barack Obama Presidential Library\\nOfficial website of Organizing for Action\\nWhite House biography\\n\\n\\n=== Other ===\\nColumn archive at The Huffington Post\\nBarack Obama on Twitter \\nUnited States Congress. \"Barack Obama (id: O000167)\". Biographical Directory of the United States Congress.\\nAppearances on C-SPAN\\nBarack Obama at IMDb\\nBarack Obama collected news and commentary at The New York Times\\nBarack Obama articles in the archive of the Chicago Tribune\\nWorks by Barack Obama at Project Gutenberg\\nWorks by or about Barack Obama at the Internet Archive\\nWorks by Barack Obama at LibriVox (public domain audiobooks) \\nBarack Obama on Nobelprize.org \\nBarack Obama at Politifact'"
  },
  {
    "objectID": "tools.html#wikipedia-search",
    "href": "tools.html#wikipedia-search",
    "title": "Example Tools",
    "section": "",
    "text": "source\n\n\n\n wikipedia_search (q:str)\n\n*A tool to query wikipedia, useful when you need to find information about a specific topic or person that is well known. Useful when you dont have enough context to reason about how to answer the question.\nArgs: q (str): The query string to search for\nReturns: str: The wikipedia search results*\n\ninput = {'q':'barak obama'}\n\n\nwikipedia_search(**input)\n\n'Barack Hussein Obama II (born August 4, 1961) is an American politician who was the 44th president of the United States from 2009 to 2017. A member of the Democratic Party, he was the first and only African American president in American history. Obama previously served as a U.S. senator representing Illinois from 2005 to 2008 and as an Illinois state senator from 1997 to 2004.\\nBorn in Honolulu, Hawaii, Obama graduated from Columbia University in 1983 with a Bachelor of Arts degree in political science and later worked as a community organizer in Chicago. In 1988, Obama enrolled in Harvard Law School, where he was the first black president of the Harvard Law Review. He became a civil rights attorney and an academic, teaching constitutional law at the University of Chicago Law School from 1992 to 2004. In 1996, Obama was elected to represent the 13th district in the Illinois Senate, a position he held until 2004, when he successfully ran for the U.S. Senate. In the 2008 presidential election, after a close primary campaign against Hillary Clinton, he was nominated by the Democratic Party for president. Obama selected Joe Biden as his running mate and defeated Republican nominee John McCain and his running mate Sarah Palin.\\nObama was awarded the 2009 Nobel Peace Prize for efforts in international diplomacy, a decision which drew both criticism and praise. During his first term, his administration responded to the 2008 financial crisis with measures including the American Recovery and Reinvestment Act of 2009, a major stimulus package to guide the economy in recovering from the Great Recession; a partial extension of the Bush tax cuts; legislation to reform health care; and the Dodd–Frank Wall Street Reform and Consumer Protection Act, a major financial regulation reform bill. Obama also appointed Supreme Court justices Sonia Sotomayor and Elena Kagan, the former being the first Hispanic American on the Supreme Court. He oversaw the end of the Iraq War and ordered Operation Neptune Spear, the raid that killed Osama bin Laden, who was responsible for the September 11 attacks. Obama downplayed Bush\\'s counterinsurgency model, expanding air strikes and making extensive use of special forces, while encouraging greater reliance on host-government militaries. He also ordered the 2011 military intervention in Libya to implement United Nations Security Council Resolution 1973, contributing to the overthrow of Muammar Gaddafi and the outbreak of the Libyan crisis.\\nObama defeated Republican opponent Mitt Romney and his running mate Paul Ryan in the 2012 presidential election. In his second term, Obama advocated for gun control in the wake of the Sandy Hook Elementary School shooting, took steps to combat climate change, signing the Paris Agreement, a major international climate agreement, and an executive order to limit carbon emissions. Obama also presided over the implementation of the Affordable Care Act and other legislation passed in his first term. He initiated sanctions against Russia following the invasion in Ukraine and again after Russian interference in the 2016 U.S. elections, ordered military intervention in Iraq in response to gains made by ISIL following the 2011 withdrawal from Iraq, negotiated the Joint Comprehensive Plan of Action (a nuclear agreement with Iran), and normalized relations with Cuba. The number of American soldiers in Afghanistan decreased during Obama\\'s second term, though U.S. soldiers remained in the country throughout the remainder of his presidency. Obama promoted inclusion for LGBT Americans, becoming the first sitting U.S. president to publicly support same-sex marriage.\\nObama left office in 2017 with high approval ratings both within the United States and among foreign advisories. He continues to reside in Washington D.C. and remains politically active, campaigning for candidates in various American elections, including in Biden\\'s successful presidential bid in the 2020 presidential election. Outside of politics, Obama has published three books: Dreams from My Father (1995), The Audacity of Hope (2006), and A Promised Land (2020). His presidential library began construction in the South Side of Chicago in 2021. Historians and political scientists rank Obama among the upper tier in historical rankings of U.S. presidents.\\n\\n\\n== Early life and career ==\\n\\nBarack Obama was born on August 4, 1961, at Kapiolani Medical Center for Women and Children in Honolulu, Hawaii. He is the only president born outside the contiguous 48 states. He was born to an 18-year-old American mother and a 27-year-old Kenyan father. His mother, Ann Dunham (1942–1995), was born in Wichita, Kansas, and was of English, Welsh, German, Swiss, and Irish descent. In 2007 it was discovered her great-great-grandfather Falmouth Kearney emigrated from the village of Moneygall, Ireland to the U.S. in 1850. In July 2012, Ancestry.com found a strong likelihood that Dunham was descended from John Punch, an enslaved African man who lived in the Colony of Virginia during the seventeenth century. Obama\\'s father, Barack Obama Sr. (1934–1982), was a married Luo Kenyan from Nyang\\'oma Kogelo. His last name, Obama, was derived from his Luo descent. Obama\\'s parents met in 1960 in a Russian language class at the University of Hawaiʻi at Mānoa, where his father was a foreign student on a scholarship. The couple married in Wailuku, Hawaii, on February 2, 1961, six months before Obama was born.\\nIn late August 1961, a few weeks after he was born, Barack and his mother moved to the University of Washington in Seattle, where they lived for a year. During that time, Barack\\'s father completed his undergraduate degree in economics in Hawaii, graduating in June 1962. He left to attend graduate school on a scholarship at Harvard University, where he earned a Master of Arts in economics. Obama\\'s parents divorced in March 1964. Obama Sr. returned to Kenya in 1964, where he married for a third time and worked for the Kenyan government as the senior economic analyst in the Ministry of Finance. He visited his son in Hawaii only once, at Christmas 1971, before he was killed in an automobile accident in 1982, when Obama was 21 years old. Recalling his early childhood, Obama said: \"That my father looked nothing like the people around me—that he was black as pitch, my mother white as milk—barely registered in my mind.\" He described his struggles as a young adult to reconcile social perceptions of his multiracial heritage.\\nIn 1963, Dunham met Lolo Soetoro at the University of Hawaii; he was an Indonesian East–West Center graduate student in geography. The couple married on Molokai on March 15, 1965. After two one-year extensions of his J-1 visa, Lolo returned to Indonesia in 1966. His wife and stepson followed sixteen months later in 1967. The family initially lived in the Menteng Dalam neighborhood in the Tebet district of South Jakarta. From 1970, they lived in a wealthier neighborhood in the Menteng district of Central Jakarta.\\n\\n\\n=== Education ===\\n\\nAt the age of 6, Obama and his mother had moved to Indonesia to join his stepfather. From age six to ten, he was registered in school as \"Barry\" and attended local Indonesian-language schools: Sekolah Dasar Katolik Santo Fransiskus Asisi (St. Francis of Assisi Catholic Elementary School) for two years and Sekolah Dasar Negeri Menteng 01 (State Elementary School Menteng 01) for one and a half years, supplemented by English-language Calvert School homeschooling by his mother. As a result of his four years in Jakarta, he was able to speak Indonesian fluently as a child. During his time in Indonesia, Obama\\'s stepfather taught him to be resilient and gave him \"a pretty hardheaded assessment of how the world works\".\\nIn 1971, Obama returned to Honolulu to live with his maternal grandparents, Madelyn and Stanley Dunham. He attended Punahou School—a private college preparatory school—with the aid of a scholarship from fifth grade until he graduated from high school in 1979. In high school, Obama continued to use the nickname \"Barry\" which he kept until making a visit to Kenya in 1980. Obama lived with his mother and half-sister, Maya Soetoro, in Hawaii for three years from 1972 to 1975 while his mother was a graduate student in anthropology at the University of Hawaii. Obama chose to stay in Hawaii when his mother and half-sister returned to Indonesia in 1975, so his mother could begin anthropology field work. His mother spent most of the next two decades in Indonesia, divorcing Lolo Soetoro in 1980 and earning a PhD degree in 1992, before dying in 1995 in Hawaii following unsuccessful treatment for ovarian and uterine cancer.\\nOf his years in Honolulu, Obama wrote: \"The opportunity that Hawaii offered — to experience a variety of cultures in a climate of mutual respect — became an integral part of my world view, and a basis for the values that I hold most dear.\" Obama has also written and talked about using alcohol, marijuana, and cocaine during his teenage years to \"push questions of who I was out of my mind\". Obama was also a member of the \"Choom Gang\" (the slang term for smoking marijuana), a self-named group of friends who spent time together and smoked marijuana.\\n College and research jobs \\nAfter graduating from high school in 1979, Obama moved to Los Angeles to attend Occidental College on a full scholarship. In February 1981, Obama made his first public speech, calling for Occidental to participate in the disinvestment from South Africa in response to that nation\\'s policy of apartheid. In mid-1981, Obama traveled to Indonesia to visit his mother and half-sister Maya and visited the families of college friends in Pakistan for three weeks. Later in 1981, he transferred to Columbia University in New York City as a junior, where he majored in political science with a specialty in international relations and in English literature and lived off-campus on West 109th Street. He graduated with a Bachelor of Arts degree in 1983 and a 3.7 GPA. After graduating, Obama worked for about a year at the Business International Corporation, where he was a financial researcher and writer, then as a project coordinator for the New York Public Interest Research Group on the City College of New York campus for three months in 1985.\\n Community organizer and Harvard Law School \\nTwo years after graduating from Columbia, Obama moved from New York to Chicago when he was hired as director of the Developing Communities Project, a faith-based community organization originally comprising eight Catholic parishes in Roseland, West Pullman, and Riverdale on Chicago\\'s South Side. He worked there as a community organizer from June 1985 to May 1988. He helped set up a job training program, a college preparatory tutoring program, and a tenants\\' rights organization in Altgeld Gardens. Obama also worked as a consultant and instructor for the Gamaliel Foundation, a community organizing institute. In mid-1988, he traveled for the first time in Europe for three weeks and then for five weeks in Kenya, where he met many of his paternal relatives for the first time.\\n\\nDespite being offered a full scholarship to Northwestern University School of Law, Obama enrolled at Harvard Law School in the fall of 1988, living in nearby Somerville, Massachusetts. He was selected as an editor of the Harvard Law Review at the end of his first year, president of the journal in his second year, and research assistant to the constitutional scholar Laurence Tribe while at Harvard. During his summers, he returned to Chicago, where he worked as a summer associate at the law firms of Sidley Austin in 1989 and Hopkins & Sutter in 1990. Obama\\'s election as the first black president of the Harvard Law Review gained national media attention and led to a publishing contract and advance for a book about race relations, which evolved into a personal memoir. The manuscript was published in mid-1995 as Dreams from My Father. Obama graduated from Harvard Law in 1991 with a Juris Doctor magna cum laude.\\n University of Chicago Law School \\nIn 1991, Obama accepted a two-year position as Visiting Law and Government Fellow at the University of Chicago Law School to work on his first book. He then taught constitutional law at the University of Chicago Law School for twelve years, first as a lecturer from 1992 to 1996, and then as a senior lecturer from 1996 to 2004.\\nFrom April to October 1992, Obama directed Illinois\\'s Project Vote, a voter registration campaign with ten staffers and seven hundred volunteer registrars; it achieved its goal of registering 150,000 of 400,000 unregistered African Americans in the state, leading Crain\\'s Chicago Business to name Obama to its 1993 list of \"40 under Forty\" powers to be.\\n\\n\\n=== Family and personal life ===\\n\\nIn a 2006 interview, Obama highlighted the diversity of his extended family: \"It\\'s like a little mini-United Nations,\" he said. \"I\\'ve got relatives who look like Bernie Mac, and I\\'ve got relatives who look like Margaret Thatcher.\" Obama has a half-sister with whom he was raised (Maya Soetoro-Ng) and seven other half-siblings from his Kenyan father\\'s family, six of them living. Obama\\'s mother was survived by her Kansas-born mother, Madelyn Dunham, until her death on November 2, 2008, two days before his election to the presidency. Obama also has roots in Ireland; he met with his Irish cousins in Moneygall in May 2011. In Dreams from My Father, Obama ties his mother\\'s family history to possible Native American ancestors and distant relatives of Jefferson Davis, President of the Confederate States of America during the American Civil War. He also shares distant ancestors in common with George W. Bush and Dick Cheney, among others.\\nObama lived with anthropologist Sheila Miyoshi Jager while he was a community organizer in Chicago in the 1980s. He proposed to her twice, but both Jager and her parents turned him down. The relationship was not made public until May 2017, several months after his presidency had ended.\\n\\nIn June 1989, Obama met Michelle Robinson when he was employed at Sidley Austin. Robinson was assigned for three months as Obama\\'s adviser at the firm, and she joined him at several group social functions but declined his initial requests to date. They began dating later that summer, became engaged in 1991, and were married on October 3, 1992. After suffering a miscarriage, Michelle underwent in vitro fertilization to conceive their children. The couple\\'s first daughter, Malia Ann, was born in 1998, followed by a second daughter, Natasha (\"Sasha\"), in 2001. The Obama daughters attended the University of Chicago Laboratory Schools. When they moved to Washington, D.C., in January 2009, the girls started at the Sidwell Friends School. The Obamas had two Portuguese Water Dogs; the first, a male named Bo, was a gift from Senator Ted Kennedy. In 2013, Bo was joined by Sunny, a female. Bo died of cancer on May 8, 2021.\\nObama is a supporter of the Chicago White Sox, and he threw out the first pitch at the 2005 ALCS when he was still a senator. In 2009, he threw out the ceremonial first pitch at the All-Star Game while wearing a White Sox jacket. He is also primarily a Chicago Bears football fan in the NFL, but in his childhood and adolescence was a fan of the Pittsburgh Steelers and rooted for them ahead of their victory in Super Bowl XLIII 12 days after he took office as president. In 2011, Obama invited the 1985 Chicago Bears to the White House; the team had not visited the White House after their Super Bowl win in 1986 due to the Space Shuttle Challenger disaster. He plays basketball, a sport he participated in as a member of his high school\\'s varsity team, and he is left-handed.\\nIn 2005, the Obama family applied the proceeds of a book deal and moved from a Hyde Park, Chicago condominium to a $1.6 million house (equivalent to $2.6 million in 2024) in neighboring Kenwood, Chicago. The purchase of an adjacent lot—and sale of part of it to Obama by the wife of developer, campaign donor and friend Tony Rezko—attracted media attention because of Rezko\\'s subsequent indictment and conviction on political corruption charges that were unrelated to Obama.\\nIn December 2007, Money Magazine estimated Obama\\'s net worth at $1.3 million (equivalent to $2 million in 2024). Their 2009 tax return showed a household income of $5.5 million—up from about $4.2 million in 2007 and $1.6 million in 2005—mostly from sales of his books. On his 2010 income of $1.7 million, he gave 14 percent to non-profit organizations, including $131,000 to Fisher House Foundation, a charity assisting wounded veterans\\' families, allowing them to reside near where the veteran is receiving medical treatments. Per his 2012 financial disclosure, Obama may be worth as much as $10 million.\\n\\n\\n=== Religious views ===\\nObama is a Protestant Christian whose religious views developed in his adult life. He wrote in The Audacity of Hope that he \"was not raised in a religious household.\" He described his mother, raised by non-religious parents, as being detached from religion, yet \"in many ways the most spiritually awakened person ... I have ever known\", and \"a lonely witness for secular humanism.\" He described his father as a \"confirmed atheist\" by the time his parents met, and his stepfather as \"a man who saw religion as not particularly useful.\" Obama explained how, through working with black churches as a community organizer while in his twenties, he came to understand \"the power of the African-American religious tradition to spur social change.\"\\n\\nIn January 2008, Obama told Christianity Today: \"I am a Christian, and I am a devout Christian. I believe in the redemptive death and resurrection of Jesus Christ. I believe that faith gives me a path to be cleansed of sin and have eternal life.\" On September 27, 2010, Obama released a statement commenting on his religious views, saying:\\n\\nI\\'m a Christian by choice. My family didn\\'t—frankly, they weren\\'t folks who went to church every week. And my mother was one of the most spiritual people I knew, but she didn\\'t raise me in the church. So I came to my Christian faith later in life, and it was because the precepts of Jesus Christ spoke to me in terms of the kind of life that I would want to lead—being my brothers\\' and sisters\\' keeper, treating others as they would treat me.\\nObama met Trinity United Church of Christ pastor Jeremiah Wright in October 1987 and became a member of Trinity in 1992. During Obama\\'s first presidential campaign in May 2008, he resigned from Trinity after some of Wright\\'s statements were criticized. Since moving to Washington, D.C., in 2009, the Obama family has attended several Protestant churches, including Shiloh Baptist Church and St. John\\'s Episcopal Church, as well as Evergreen Chapel at Camp David, but the members of the family do not attend church on a regular basis.\\nIn 2016, Obama said that he gets inspiration from a few items that remind him \"of all the different people I\\'ve met along the way\", adding: \"I carry these around all the time. I\\'m not that superstitious, so it\\'s not like I think I necessarily have to have them on me at all times.\" The items, \"a whole bowl full\", include rosary beads given to him by Pope Francis, a figurine of the Hindu deity Hanuman, a Coptic cross from Ethiopia, a small Buddha statue given by a monk, and a metal poker chip that used to be the lucky charm of a motorcyclist in Iowa.\\n\\n\\n== Legal career ==\\nFrom 1994 to 2002, Obama served on the boards of directors of the Woods Fund of Chicago—which in 1985 had been the first foundation to fund the Developing Communities Project—and of the Joyce Foundation. He served on the board of directors of the Chicago Annenberg Challenge from 1995 to 2002, as founding president and chairman of the board of directors from 1995 to 1999. Obama\\'s law license became inactive in 2007.\\n\\n\\n== Legislative career ==\\n\\n\\n=== Illinois Senate (1997–2004) ===\\n\\nObama was elected to the Illinois Senate in 1996, succeeding Democratic state senator Alice Palmer from Illinois\\'s 13th District, which, at that time, spanned Chicago South Side neighborhoods from Hyde Park–Kenwood south to South Shore and west to Chicago Lawn. Once elected, Obama gained bipartisan support for legislation that reformed ethics and health care laws. He sponsored a law that increased tax credits for low-income workers, negotiated welfare reform, and promoted increased subsidies for childcare. In 2001, as co-chairman of the bipartisan Joint Committee on Administrative Rules, Obama supported Republican governor George Ryan\\'s payday loan regulations and predatory mortgage lending regulations aimed at averting home foreclosures.\\nHe was reelected to the Illinois Senate in 1998, defeating Republican Yesse Yehudah in the general election, and was re-elected again in 2002. In 2000, he lost a Democratic primary race for Illinois\\'s 1st congressional district in the United States House of Representatives to four-term incumbent Bobby Rush by a margin of two to one.\\nIn January 2003, Obama became chairman of the Illinois Senate\\'s Health and Human Services Committee when Democrats, after a decade in the minority, regained a majority. He sponsored and led unanimous, bipartisan passage of legislation to monitor racial profiling by requiring police to record the race of drivers they detained, and legislation making Illinois the first state to mandate videotaping of homicide interrogations. During his 2004 general election campaign for the U.S. Senate, police representatives credited Obama for his active engagement with police organizations in enacting death penalty reforms. Obama resigned from the Illinois Senate in November 2004 following his election to the U.S. Senate.\\n\\n\\n=== 2004 U.S. Senate campaign in Illinois ===\\n\\nIn May 2002, Obama commissioned a poll to assess his prospects in a 2004 U.S. Senate race. He created a campaign committee, began raising funds, and lined up political media consultant David Axelrod by August 2002. Obama formally announced his candidacy in January 2003.\\nObama was an early opponent of the George W. Bush administration\\'s 2003 invasion of Iraq. On October 2, 2002, the day President Bush and Congress agreed on the joint resolution authorizing the Iraq War, Obama addressed the first high-profile Chicago anti-Iraq War rally, and spoke out against the war. He addressed another anti-war rally in March 2003 and told the crowd \"it\\'s not too late\" to stop the war.\\nDecisions by Republican incumbent Peter Fitzgerald and his Democratic predecessor Carol Moseley Braun not to participate in the election resulted in wide-open Democratic and Republican primary contests involving 15 candidates. In the March 2004 primary election, Obama won in an unexpected landslide—which overnight made him a rising star within the national Democratic Party, started speculation about a presidential future, and led to the reissue of his memoir, Dreams from My Father. In July 2004, Obama delivered the keynote address at the 2004 Democratic National Convention, seen by nine million viewers. His speech was well received and elevated his status within the Democratic Party.\\nObama\\'s expected opponent in the general election, Republican primary winner Jack Ryan, withdrew from the race in June 2004. Six weeks later, Alan Keyes accepted the Republican nomination to replace Ryan. In the November 2004 general election, Obama won with 70 percent of the vote, the largest margin of victory for a Senate candidate in Illinois history. He took 92 of the state\\'s 102 counties, including several where Democrats traditionally do not do well.\\n\\n\\n=== U.S. Senate (2005–2008) ===\\n\\nObama was sworn in as a senator on January 3, 2005, becoming the only Senate member of the Congressional Black Caucus. He introduced two initiatives that bore his name: Lugar–Obama, which expanded the Nunn–Lugar Cooperative Threat Reduction concept to conventional weapons; and the Federal Funding Accountability and Transparency Act of 2006, which authorized the establishment of USAspending.gov, a web search engine on federal spending. On June 3, 2008, Senator Obama—along with Senators Tom Carper, Tom Coburn, and John McCain—introduced follow-up legislation: Strengthening Transparency and Accountability in Federal Spending Act of 2008. He also cosponsored the Secure America and Orderly Immigration Act.\\nIn December 2006, President Bush signed into law the Democratic Republic of the Congo Relief, Security, and Democracy Promotion Act, marking the first federal legislation to be enacted with Obama as its primary sponsor. In January 2007, Obama and Senator Feingold introduced a corporate jet provision to the Honest Leadership and Open Government Act, which was signed into law in September 2007.\\nLater in 2007, Obama sponsored an amendment to the Defense Authorization Act to add safeguards for personality-disorder military discharges. This amendment passed the full Senate in the spring of 2008. He sponsored the Iran Sanctions Enabling Act supporting divestment of state pension funds from Iran\\'s oil and gas industry, which was never enacted but later incorporated in the Comprehensive Iran Sanctions, Accountability, and Divestment Act of 2010; and co-sponsored legislation to reduce risks of nuclear terrorism. Obama also sponsored a Senate amendment to the State Children\\'s Health Insurance Program, providing one year of job protection for family members caring for soldiers with combat-related injuries.\\nObama held assignments on the Senate Committees for Foreign Relations, Environment and Public Works, and Veterans\\' Affairs through December 2006. In January 2007, he left the Environment and Public Works committee and took additional assignments with Health, Education, Labor and Pensions and Homeland Security and Governmental Affairs. He also became Chairman of the Senate\\'s subcommittee on European Affairs. As a member of the Senate Foreign Relations Committee, Obama made official trips to Eastern Europe, the Middle East, Central Asia, and Africa. He met with Mahmoud Abbas before Abbas became President of the Palestinian National Authority and gave a speech at the University of Nairobi in which he condemned corruption within the Kenyan government. Obama resigned his Senate seat on November 16, 2008, to focus on his transition period for the presidency.\\n\\n\\n== Presidential campaigns ==\\n\\n\\n=== 2008 presidential candidacy ===\\n\\nOn February 10, 2007, Obama announced his candidacy for President of the United States in front of the Old State Capitol building in Springfield, Illinois. The choice of the announcement site was viewed as symbolic, as it was also where Abraham Lincoln delivered his \"House Divided\" speech in 1858. Obama emphasized issues of rapidly ending the Iraq War, increasing energy independence, and reforming the health care system.\\n\\nNumerous candidates entered the Democratic Party presidential primaries. The field narrowed to Obama and Senator Hillary Clinton after early contests, with the race remaining close throughout the primary process, but Obama gained a steady lead in pledged delegates due to better long-range planning, superior fundraising, dominant organizing in caucus states, and better exploitation of delegate allocation rules. \\nOn June 2, 2008, Obama had received enough votes to clinch his nomination. After an initial hesitation to concede, on June 7, Clinton ended her campaign and endorsed Obama. On August 23, 2008, Obama announced his selection of Delaware senator Joe Biden as his vice presidential running mate. Obama selected Biden from a field speculated to include former Indiana governor and senator Evan Bayh and Virginia governor Tim Kaine. At the Democratic National Convention in Denver, Colorado, Hillary Clinton called for her supporters to endorse Obama, and she and Bill Clinton gave convention speeches in his support. Obama delivered his acceptance speech at Invesco Field at Mile High stadium to a crowd of about eighty-four thousand; the speech was viewed by over three million people worldwide. During both the primary process and the general election, Obama\\'s campaign set numerous fundraising records, particularly in the quantity of small donations. On June 19, 2008, Obama became the first major-party presidential candidate to turn down public financing in the general election since the system was created in 1976.\\nJohn McCain was nominated as the Republican candidate, and he selected Sarah Palin as his running mate. Obama and McCain engaged in three presidential debates in September and October 2008. On November 4, Obama won the presidency with 365 electoral votes to 173 received by McCain. Obama won 52.9 percent of the popular vote to McCain\\'s 45.7 percent. He became the first African-American to be elected president. Obama delivered his victory speech before hundreds of thousands of supporters in Chicago\\'s Grant Park. He is one of the three United States senators moved directly from the U.S. Senate to the White House, the others being Warren G. Harding and John F. Kennedy.\\n\\n\\n=== 2012 presidential candidacy ===\\n\\nOn April 4, 2011, Obama filed election papers with the Federal Election Commission and then announced his reelection campaign for 2012 in a video titled \"It Begins with Us\" that he posted on his website. As the incumbent president, he ran virtually unopposed in the Democratic Party presidential primaries, and on April 3, 2012, Obama secured the 2778 convention delegates needed to win the Democratic nomination. At the Democratic National Convention in Charlotte, North Carolina, Obama and Joe Biden were formally nominated by former president Bill Clinton as the Democratic Party candidates for president and vice president in the general election. Their main opponents were Republicans Mitt Romney, the former governor of Massachusetts, and Representative Paul Ryan of Wisconsin.\\nOn November 6, 2012, Obama won 332 electoral votes, exceeding the 270 required for him to be reelected as president. With 51.1 percent of the popular vote, Obama became the first Democratic president since Franklin D. Roosevelt to win the majority of the popular vote twice. Obama addressed supporters and volunteers at Chicago\\'s McCormick Place after his reelection and said: \"Tonight you voted for action, not politics as usual. You elected us to focus on your jobs, not ours. And in the coming weeks and months, I am looking forward to reaching out and working with leaders of both parties.\"\\n\\n\\n== Presidency (2009–2017) ==\\n\\n\\n=== First 100 days ===\\n\\nThe inauguration of Barack Obama as the 44th president took place on January 20, 2009. In his first few days in office, Obama issued executive orders and presidential memoranda directing the U.S. military to develop plans to withdraw troops from Iraq. He ordered the closing of the Guantanamo Bay detention camp, but Congress prevented the closure by refusing to appropriate the required funds and preventing moving any Guantanamo detainee. Obama reduced the secrecy given to presidential records. He also revoked President George W. Bush\\'s restoration of President Ronald Reagan\\'s Mexico City policy which prohibited federal aid to international family planning organizations that perform or provide counseling about abortion.\\n\\n\\n=== Domestic policy ===\\n\\nThe first bill signed into law by Obama was the Lilly Ledbetter Fair Pay Act of 2009, relaxing the statute of limitations for equal-pay lawsuits. Five days later, he signed the reauthorization of the State Children\\'s Health Insurance Program to cover an additional four million uninsured children. In March 2009, Obama reversed a Bush-era policy that had limited funding of embryonic stem cell research and pledged to develop \"strict guidelines\" on the research.\\n\\nObama appointed two women to serve on the Supreme Court in the first two years of his presidency. He nominated Sonia Sotomayor on May 26, 2009, to replace retiring associate justice David Souter. She was confirmed on August 6, 2009, becoming the first Supreme Court Justice of Hispanic descent. Obama nominated Elena Kagan on May 10, 2010, to replace retiring Associate Justice John Paul Stevens. She was confirmed on August 5, 2010, bringing the number of women sitting simultaneously on the Court to three for the first time in American history.\\nOn March 11, 2009, Obama created the White House Council on Women and Girls, which formed part of the Office of Intergovernmental Affairs, having been established by Executive Order 13506 with a broad mandate to advise him on issues relating to the welfare of American women and girls. The council was chaired by Senior Advisor to the President Valerie Jarrett. Obama also established the White House Task Force to Protect Students from Sexual Assault through a government memorandum on January 22, 2014, with a broad mandate to advise him on issues relating to sexual assault on college and university campuses throughout the United States. The co-chairs of the Task Force were Vice President Joe Biden and Jarrett. The Task Force was a development out of the White House Council on Women and Girls and Office of the Vice President of the United States, and prior to that the 1994 Violence Against Women Act first drafted by Biden.\\nIn July 2009, Obama launched the Priority Enforcement Program, an immigration enforcement program that had been pioneered by George W. Bush, and the Secure Communities fingerprinting and immigration status data-sharing program.\\nIn a major space policy speech in April 2010, Obama announced a planned change in direction at NASA, the U.S. space agency. He ended plans for a return of human spaceflight to the moon and development of the Ares I rocket, Ares V rocket and Constellation program, in favor of funding earth science projects, a new rocket type, research and development for an eventual crewed mission to Mars, and ongoing missions to the International Space Station.\\n\\nOn January 16, 2013, one month after the Sandy Hook Elementary School shooting, Obama signed 23 executive orders and outlined a series of sweeping proposals regarding gun control. He urged Congress to reintroduce an expired ban on military-style assault weapons, such as those used in several recent mass shootings, impose limits on ammunition magazines to 10 rounds, introduce background checks on all gun sales, pass a ban on possession and sale of armor-piercing bullets, introduce harsher penalties for gun-traffickers, especially unlicensed dealers who buy arms for criminals and approving the appointment of the head of the federal Bureau of Alcohol, Tobacco, Firearms and Explosives for the first time since 2006. On January 5, 2016, Obama announced new executive actions extending background check requirements to more gun sellers. In a 2016 editorial in The New York Times, Obama compared the struggle for what he termed \"common-sense gun reform\" to women\\'s suffrage and other civil rights movements in American history.\\nIn 2011, Obama signed a four-year renewal of the Patriot Act. Following the 2013 global surveillance disclosures by whistleblower Edward Snowden, Obama condemned the leak as unpatriotic, but called for increased restrictions on the National Security Agency (NSA) to address violations of privacy. Obama continued and expanded surveillance programs set up by George W. Bush, while implementing some reforms. He supported legislation that would have limited the NSA\\'s ability to collect phone records in bulk under a single program and supported bringing more transparency to the Foreign Intelligence Surveillance Court (FISC).\\n\\n\\n==== Racial issues ====\\n\\nIn his speeches as president, Obama did not make more overt references to race relations than his predecessors, but according to one study, he implemented stronger policy action on behalf of African-Americans than any president since the Nixon era.\\nFollowing Obama\\'s election, many pondered the existence of a \"post-racial America\". However, lingering racial tensions quickly became apparent, and many African-Americans expressed outrage over what they saw as an intense racial animosity directed at Obama. The acquittal of George Zimmerman following the killing of Trayvon Martin sparked national outrage, leading to Obama giving a speech in which he said that \"Trayvon Martin could have been me 35 years ago.\" The shooting of Michael Brown in Ferguson, Missouri, sparked a wave of protests. These and other events led to the birth of the Black Lives Matter movement, which campaigns against violence and systemic racism toward black people. Though Obama entered office reluctant to talk about race, by 2014 he began openly discussing the disadvantages faced by many members of minority groups.\\nSeveral incidents during Obama\\'s presidency generated disapproval from the African-American community and with law enforcement, and Obama sought to build trust between law enforcement officials and civil rights activists, with mixed results. Some in law enforcement criticized Obama\\'s condemnation of racial bias after incidents in which police action led to the death of African-American men, while some racial justice activists criticized Obama\\'s expressions of empathy for the police. In a March 2016 Gallup poll, nearly one third of Americans said they worried \"a great deal\" about race relations, a higher figure than in any previous Gallup poll since 2001.\\n\\n\\n==== LGBT rights ====\\nOn October 8, 2009, Obama signed the Matthew Shepard and James Byrd Jr. Hate Crimes Prevention Act, a measure that expanded the 1969 United States federal hate-crime law to include crimes motivated by a victim\\'s actual or perceived gender, sexual orientation, gender identity, or disability. On October 30, 2009, Obama lifted the ban on travel to the United States by those infected with HIV. The lifting of the ban was celebrated by Immigration Equality. On December 22, 2010, Obama signed the Don\\'t Ask, Don\\'t Tell Repeal Act of 2010, which fulfilled a promise made in the 2008 presidential campaign to end the don\\'t ask, don\\'t tell policy of 1993 that had prevented gay and lesbian people from serving openly in the United States Armed Forces. In 2016, the Pentagon ended the policy that barred transgender people from serving openly in the military.\\n\\n\\n===== Same-sex marriage =====\\nAs a candidate for the Illinois state senate in 1996, Obama stated he favored legalizing same-sex marriage. During his Senate run in 2004, he said he supported civil unions and domestic partnerships for same-sex partners but opposed same-sex marriages. In 2008, he reaffirmed this position by stating \"I believe marriage is between a man and a woman. I am not in favor of gay marriage.\" On May 9, 2012, shortly after the official launch of his campaign for re-election as president, Obama said his views had evolved, and he publicly affirmed his personal support for the legalization of same-sex marriage, becoming the first sitting U.S. president to do so. During his second inaugural address on January 21, 2013, Obama became the first U.S. president in office to call for full equality for gay Americans, and the first to mention gay rights or the word \"gay\" in an inaugural address. In 2013, the Obama administration filed briefs that urged the Supreme Court to rule in favor of same-sex couples in the cases of Hollingsworth v. Perry (regarding same-sex marriage) and United States v. Windsor (regarding the Defense of Marriage Act).\\n\\n\\n==== Economic policy ====\\n\\nOn February 17, 2009, Obama signed the American Recovery and Reinvestment Act of 2009, a $787 billion (equivalent to $1153 billion in 2024) economic stimulus package aimed at helping the economy recover from the deepening worldwide recession. The act includes increased federal spending for health care, infrastructure, education, various tax breaks and incentives, and direct assistance to individuals. In March 2009, Obama\\'s Treasury Secretary, Timothy Geithner, took further steps to manage the 2008 financial crisis, including introducing the Public–Private Investment Program for Legacy Assets, which contains provisions for buying up to $2 trillion in depreciated real estate assets.\\n\\nObama intervened in the troubled automotive industry in March 2009, renewing loans for General Motors (GM) and Chrysler to continue operations while reorganizing. Over the following months the White House set terms for both firms\\' bankruptcies, including the sale of Chrysler to Italian automaker Fiat and a reorganization of GM giving the U.S. government a temporary 60 percent equity stake in the company. In June 2009, dissatisfied with the pace of economic stimulus, Obama called on his cabinet to accelerate the investment. He signed into law the Car Allowance Rebate System, known colloquially as \"Cash for Clunkers\", which temporarily boosted the economy.\\nThe Bush and Obama administrations authorized spending and loan guarantees from the Federal Reserve and the Department of the Treasury. These guarantees totaled about $11.5 trillion, but only $3 trillion had been spent by the end of November 2009. On August 2, 2011, after a lengthy congressional debate over whether to raise the nation\\'s debt limit, Obama signed the bipartisan Budget Control Act of 2011. The legislation enforced limits on discretionary spending until 2021, established a procedure to increase the debt limit, created a Congressional Joint Select Committee on Deficit Reduction to propose further deficit reduction with a stated goal of achieving at least $1.5 trillion in budgetary savings over 10 years, and established automatic procedures for reducing spending by as much as $1.2 trillion if legislation originating with the new joint select committee did not achieve such savings. By passing the legislation, Congress was able to prevent a U.S. government default on its obligations.\\nThe unemployment rate rose in 2009, reaching a peak in October at 10.0 percent and averaging 10.0 percent in the fourth quarter. Following a decrease to 9.7 percent in the first quarter of 2010, the unemployment rate fell to 9.6 percent in the second quarter, where it remained for the rest of the year. Between February and December 2010, employment rose by 0.8 percent, which was less than the average of 1.9 percent experienced during comparable periods in the past four employment recoveries. By November 2012, the unemployment rate fell to 7.7 percent, decreasing to 6.7 percent in the last month of 2013. During 2014, the unemployment rate continued to decline, falling to 6.3 percent in the first quarter. GDP growth returned in the third quarter of 2009, expanding at a rate of 1.6 percent, followed by a 5.0 percent increase in the fourth quarter. Growth continued in 2010, posting an increase of 3.7 percent in the first quarter, with lesser gains throughout the rest of the year. In July 2010, the Federal Reserve noted that economic activity continued to increase, but its pace had slowed, and chairman Ben Bernanke said the economic outlook was \"unusually uncertain\". Overall, the economy expanded at a rate of 2.9 percent in 2010.\\n\\nThe Congressional Budget Office (CBO) and a broad range of economists credit Obama\\'s stimulus plan for economic growth. The CBO released a report stating that the stimulus bill increased employment by 1–2.1 million, while conceding that \"it is impossible to determine how many of the reported jobs would have existed in the absence of the stimulus package.\" Although an April 2010, survey of members of the National Association for Business Economics showed an increase in job creation (over a similar January survey) for the first time in two years, 73 percent of 68 respondents believed the stimulus bill has had no impact on employment. The economy of the United States has grown faster than the other original NATO members by a wider margin under President Obama than it has anytime since the end of World War II. The Organisation for Economic Co-operation and Development credits the much faster growth in the United States to the stimulus plan of the U.S. and the austerity measures in the European Union.\\nWithin a month of the 2010 midterm elections, Obama announced a compromise deal with the Congressional Republican leadership that included a temporary, two-year extension of the 2001 and 2003 income tax rates, a one-year payroll tax reduction, continuation of unemployment benefits, and a new rate and exemption amount for estate taxes. The compromise overcame opposition from some in both parties, and the resulting $858 billion (equivalent to $1.2 trillion in 2024) Tax Relief, Unemployment Insurance Reauthorization, and Job Creation Act of 2010 passed with bipartisan majorities in both houses of Congress before Obama signed it on December 17, 2010.\\nIn December 2013, Obama declared that growing income inequality is a \"defining challenge of our time\" and called on Congress to bolster the safety net and raise wages. This came on the heels of the nationwide strikes of fast-food workers and Pope Francis\\' criticism of inequality and trickle-down economics. Obama urged Congress to ratify a 12-nation free trade pact called the Trans-Pacific Partnership.\\n\\n\\n==== Environmental policy ====\\n\\nOn April 20, 2010, an explosion destroyed an offshore drilling rig at the Macondo Prospect in the Gulf of Mexico, causing a major sustained oil leak. Obama visited the Gulf, announced a federal investigation, and formed a bipartisan commission to recommend new safety standards, after a review by Secretary of the Interior Ken Salazar and concurrent Congressional hearings. He then announced a six-month moratorium on new deepwater drilling permits and leases, pending regulatory review. As multiple efforts by BP failed, some in the media and public expressed confusion and criticism over various aspects of the incident, and stated a desire for more involvement by Obama and the federal government. Prior to the oil spill, on March 31, 2010, Obama ended a ban on oil and gas drilling along the majority of the East Coast of the United States and along the coast of northern Alaska in an effort to win support for an energy and climate bill and to reduce foreign imports of oil and gas.\\nIn July 2013, Obama expressed reservations and said he \"would reject the Keystone XL pipeline if it increased carbon pollution [or] greenhouse emissions.\" On February 24, 2015, Obama vetoed a bill that would have authorized the pipeline. It was the third veto of Obama\\'s presidency and his first major veto.\\nIn December 2016, Obama permanently banned new offshore oil and gas drilling in most United States-owned waters in the Atlantic and Arctic Oceans using the 1953 Outer Continental Shelf Act.\\nObama emphasized the conservation of federal lands during his term in office. He used his power under the Antiquities Act to create 25 new national monuments during his presidency and expand four others, protecting a total of 553,000,000 acres (224,000,000 ha) of federal lands and waters, more than any other U.S. president.\\n\\n\\n==== Health care reform ====\\n\\nObama called for Congress to pass legislation reforming health care in the United States, a key campaign promise and a top legislative goal. He proposed an expansion of health insurance coverage to cover the uninsured, cap premium increases, and allow people to retain their coverage when they leave or change jobs. His proposal was to spend $900 billion over ten years and include a government insurance plan, also known as the public option, to compete with the corporate insurance sector as a main component to lowering costs and improving quality of health care. It would also make it illegal for insurers to drop sick people or deny them coverage for pre-existing conditions, and require every American to carry health coverage. The plan also includes medical spending cuts and taxes on insurance companies that offer expensive plans.\\n\\nOn July 14, 2009, House Democratic leaders introduced a 1,017-page plan for overhauling the U.S. health care system, which Obama wanted Congress to approve by the end of 2009. After public debate during the Congressional summer recess of 2009, Obama delivered a speech to a joint session of Congress on September 9 where he addressed concerns over the proposals. In March 2009, Obama lifted a ban on using federal funds for stem cell research.\\nOn November 7, 2009, a health care bill featuring the public option was passed in the House. On December 24, 2009, the Senate passed its own bill—without a public option—on a party-line vote of 60–39. On March 21, 2010, the Patient Protection and Affordable Care Act (ACA, colloquially \"Obamacare\") passed by the Senate in December was passed in the House by a vote of 219 to 212. Obama signed the bill into law on March 23, 2010.\\nThe ACA includes health-related provisions, most of which took effect in 2014, including expanding Medicaid eligibility for people making up to 133 percent of the federal poverty level (FPL) starting in 2014, subsidizing insurance premiums for people making up to 400 percent of the FPL ($88,000 for family of four in 2010) so their maximum \"out-of-pocket\" payment for annual premiums will be from 2 percent to 9.5 percent of income, providing incentives for businesses to provide health care benefits, prohibiting denial of coverage and denial of claims based on pre-existing conditions, establishing health insurance exchanges, prohibiting annual coverage caps, and support for medical research. According to White House and CBO figures, the maximum share of income that enrollees would have to pay would vary depending on their income relative to the federal poverty level.\\n\\nThe costs of these provisions are offset by taxes, fees, and cost-saving measures, such as new Medicare taxes for those in high-income brackets, taxes on indoor tanning, cuts to the Medicare Advantage program in favor of traditional Medicare, and fees on medical devices and pharmaceutical companies; there is also a tax penalty for those who do not obtain health insurance, unless they are exempt due to low income or other reasons. In March 2010, the CBO estimated that the net effect of both laws will be a reduction in the federal deficit by $143 billion over the first decade.\\nThe law faced several legal challenges, primarily based on the argument that an individual mandate requiring Americans to buy health insurance was unconstitutional. On June 28, 2012, the Supreme Court ruled by a 5–4 vote in National Federation of Independent Business v. Sebelius that the mandate was constitutional under the U.S. Congress\\'s taxing authority. In Burwell v. Hobby Lobby the Court ruled that \"closely-held\" for-profit corporations could be exempt on religious grounds under the Religious Freedom Restoration Act from regulations adopted under the ACA that would have required them to pay for insurance that covered certain contraceptives. In June 2015, the Court ruled 6–3 in King v. Burwell that subsidies to help individuals and families purchase health insurance were authorized for those doing so on both the federal exchange and state exchanges, not only those purchasing plans \"established by the State\", as the statute reads.\\n\\n\\n=== Foreign policy ===\\n\\nIn February and March 2009, Vice President Joe Biden and Secretary of State Hillary Clinton made separate overseas trips to announce a \"new era\" in U.S. foreign relations with Russia and Europe, using the terms \"break\" and \"reset\" to signal major changes from the policies of the preceding administration. Obama attempted to reach out to Arab leaders by granting his first interview to an Arab satellite TV network, Al Arabiya. On March 19, Obama continued his outreach to the Muslim world, releasing a New Year\\'s video message to the people and government of Iran. On June 4, 2009, Obama delivered a speech at Cairo University in Egypt calling for \"A New Beginning\" in relations between the Islamic world and the United States and promoting Middle East peace. On June 26, 2009, Obama condemned the Iranian government\\'s actions towards protesters following Iran\\'s 2009 presidential election.\\nIn 2011, Obama ordered a drone strike in Yemen which targeted and killed Anwar al-Awlaki, an American imam suspected of being a leading Al-Qaeda organizer. al-Awlaki became the first U.S. citizen to be targeted and killed by a U.S. drone strike. The Department of Justice released a memo justifying al-Awlaki\\'s death as a lawful act of war, while civil liberties advocates described it as a violation of al-Awlaki\\'s constitutional right to due process. The killing led to significant controversy. His teenage son and young daughter, also Americans, were later killed in separate U.S. military actions, although they were not targeted specifically.\\n\\nIn March 2015, Obama declared that he had authorized U.S. forces to provide logistical and intelligence support to the Saudis in their military intervention in Yemen, establishing a \"Joint Planning Cell\" with Saudi Arabia. In 2016, the Obama administration proposed a series of arms deals with Saudi Arabia worth $115 billion. Obama halted the sale of guided munition technology to Saudi Arabia after Saudi warplanes targeted a funeral in Yemen\\'s capital Sanaa, killing more than 140 people.\\nIn September 2016 Obama was snubbed by Xi Jinping and the Chinese Communist Party as he descended from Air Force One to the tarmac of Hangzhou International Airport for the 2016 G20 Hangzhou summit without the usual red carpet welcome.\\n\\n\\n==== War in Iraq ====\\n\\nOn February 27, 2009, Obama announced that combat operations in Iraq would end within 18 months. The Obama administration scheduled the withdrawal of combat troops to be completed by August 2010, decreasing troop\\'s levels from 142,000 while leaving a transitional force of about 50,000 in Iraq until the end of 2011. On August 19, 2010, the last U.S. combat brigade exited Iraq. Remaining troops transitioned from combat operations to counter-terrorism and the training, equipping, and advising of Iraqi security forces. On August 31, 2010, Obama announced that the United States combat mission in Iraq was over. On October 21, 2011, President Obama announced that all U.S. troops would leave Iraq in time to be \"home for the holidays.\"\\nIn June 2014, following the capture of Mosul by ISIL, Obama sent 275 troops to provide support and security for U.S. personnel and the U.S. Embassy in Baghdad. ISIS continued to gain ground and to commit widespread massacres and ethnic cleansing. In August 2014, during the Sinjar massacre, Obama ordered a campaign of U.S. airstrikes against ISIL. By the end of 2014, 3,100 American ground troops were committed to the conflict and 16,000 sorties were flown over the battlefield, primarily by U.S. Air Force and Navy pilots. In early 2015, with the addition of the \"Panther Brigade\" of the 82nd Airborne Division the number of U.S. ground troops in Iraq increased to 4,400, and by July American-led coalition air forces counted 44,000 sorties over the battlefield.\\n\\n\\n==== Afghanistan and Pakistan ====\\n\\nIn his election campaign, Obama called the war in Iraq a \"dangerous distraction\" and that emphasis should instead be put on the war in Afghanistan, the region he cites as being most likely where an attack against the United States could be launched again. Early in his presidency, Obama moved to bolster U.S. troop strength in Afghanistan. He announced an increase in U.S. troop levels to 17,000 military personnel in February 2009 to \"stabilize a deteriorating situation in Afghanistan\", an area he said had not received the \"strategic attention, direction and resources it urgently requires.\" He replaced the military commander in Afghanistan, General David D. McKiernan, with former Special Forces commander Lt. Gen. Stanley A. McChrystal in May 2009, indicating that McChrystal\\'s Special Forces experience would facilitate the use of counterinsurgency tactics in the war. On December 1, 2009, Obama announced the deployment of an additional 30,000 military personnel to Afghanistan and proposed to begin troop withdrawals 18 months from that date; this took place in July 2011. David Petraeus replaced McChrystal in June 2010, after McChrystal\\'s staff criticized White House personnel in a magazine article. In February 2013, Obama said the U.S. military would reduce the troop level in Afghanistan from 68,000 to 34,000 U.S. troops by February 2014. In October 2015, the White House announced a plan to keep U.S. Forces in Afghanistan indefinitely in light of the deteriorating security situation.\\nRegarding neighboring Pakistan, Obama called its tribal border region the \"greatest threat\" to the security of Afghanistan and Americans, saying that he \"cannot tolerate a terrorist sanctuary.\" In the same speech, Obama claimed that the U.S. \"cannot succeed in Afghanistan or secure our homeland unless we change our Pakistan policy.\"\\n\\n\\n===== Death of Osama bin Laden =====\\n\\nStarting with information received from Central Intelligence Agency operatives in July 2010, the CIA developed intelligence over the next several months that determined what they believed to be the hideout of Osama bin Laden. He was living in seclusion in a large compound in Abbottabad, Pakistan, a suburban area 35 miles (56 km) from Islamabad. CIA head Leon Panetta reported this intelligence to President Obama in March 2011. Meeting with his national security advisers over the course of the next six weeks, Obama rejected a plan to bomb the compound, and authorized a \"surgical raid\" to be conducted by United States Navy SEALs. The operation took place on May 1, 2011, and resulted in the shooting death of bin Laden and the seizure of papers, computer drives and disks from the compound. DNA testing was one of five methods used to positively identify bin Laden\\'s corpse, which was buried at sea several hours later. Within minutes of the President\\'s announcement from Washington, DC, late in the evening on May 1, there were spontaneous celebrations around the country as crowds gathered outside the White House, and at New York City\\'s Ground Zero and Times Square. Reaction to the announcement was positive across party lines, including from former presidents Bill Clinton and George W. Bush.\\n\\n\\n==== Relations with Cuba ====\\n\\nSince the spring of 2013, secret meetings were conducted between the United States and Cuba in the neutral locations of Canada and Vatican City. The Vatican first became involved in 2013 when Pope Francis advised the U.S. and Cuba to exchange prisoners as a gesture of goodwill. On December 10, 2013, Cuban President Raúl Castro, in a significant public moment, greeted and shook hands with Obama at the Nelson Mandela memorial service in Johannesburg.\\nIn December 2014, after the secret meetings, it was announced that Obama, with Pope Francis as an intermediary, had negotiated a restoration of relations with Cuba, after nearly sixty years of détente. Popularly dubbed the Cuban Thaw, The New Republic deemed the Cuban Thaw to be \"Obama\\'s finest foreign policy achievement.\" On July 1, 2015, President Obama announced that formal diplomatic relations between Cuba and the United States would resume, and embassies would be opened in Washington and Havana. The countries\\' respective \"interests sections\" in one another\\'s capitals were upgraded to embassies on July 20 and August 13, 2015, respectively. Obama visited Havana, Cuba for two days in March 2016, becoming the first sitting U.S. president to arrive since Calvin Coolidge in 1928.\\n\\n\\n==== Israel ====\\n\\nDuring the initial years of the Obama administration, the U.S. increased military cooperation with Israel, including increased military aid, re-establishment of the U.S.–Israeli Joint Political Military Group and the Defense Policy Advisory Group, and an increase in visits among high-level military officials of both countries. The Obama administration asked Congress to allocate money toward funding the Iron Dome program in response to the waves of Palestinian rocket attacks on Israel. In March 2010, Obama took a public stance against plans by the government of Israeli prime minister Benjamin Netanyahu to continue building Jewish housing projects in predominantly Arab neighborhoods of East Jerusalem. In 2011, the United States vetoed a Security Council resolution condemning Israeli settlements, with the United States being the only nation to do so. Obama supports the two-state solution to the Arab–Israeli conflict based on the 1967 borders with land swaps.\\nIn 2013, Jeffrey Goldberg reported that, in Obama\\'s view, \"with each new settlement announcement, Netanyahu is moving his country down a path toward near-total isolation.\" In 2014, Obama likened the Zionist movement to the civil rights movement in the United States. He said both movements seek to bring justice and equal rights to historically persecuted peoples, explaining: \"To me, being pro-Israel and pro-Jewish is part and parcel with the values that I\\'ve been fighting for since I was politically conscious and started getting involved in politics.\" Obama expressed support for Israel\\'s right to defend itself during the 2014 Israel–Gaza conflict. In 2015, Obama was harshly criticized by Israel for advocating and signing the Iran Nuclear Deal; Israeli prime minister Benjamin Netanyahu, who had advocated the U.S. congress to oppose it, said the deal was \"dangerous\" and \"bad.\"\\nOn December 23, 2016, under the Obama administration, the United States abstained from United Nations Security Council Resolution 2334, which condemned Israeli settlement building in the occupied Palestinian territories as a violation of international law, effectively allowing it to pass. Netanyahu strongly criticized the Obama administration\\'s actions, and the Israeli government withdrew its annual dues from the organization, which totaled $6 million, on January 6, 2017. On January 5, 2017, the United States House of Representatives voted 342–80 to condemn the UN Resolution.\\n\\n\\n==== Libya ====\\n\\nIn February 2011, protests in Libya began against long-time dictator Muammar Gaddafi as part of the Arab Spring. They soon turned violent. In March, as forces loyal to Gaddafi advanced on rebels across Libya, calls for a no-fly zone came from around the world, including Europe, the Arab League, and a resolution passed unanimously by the U.S. Senate. In response to the passage of United Nations Security Council Resolution 1973 on March 17, the Foreign Minister of Libya Moussa Koussa announced a ceasefire. However Gaddafi\\'s forces continued to attack the rebels.\\nOn March 19, a multinational coalition led by France and the United Kingdom with Italian and U.S. support, approved by Obama, took part in air strikes to destroy the Libyan government\\'s air defense capabilities to protect civilians and enforce a no-fly-zone, including the use of Tomahawk missiles, B-2 Spirits, and fighter jets. Six days later, on March 25, by unanimous vote of all its 28 members, NATO took over leadership of the effort, dubbed Operation Unified Protector. Some members of Congress questioned whether Obama had the constitutional authority to order military action in addition to questioning its cost, structure and aftermath. In 2016 Obama said \"Our coalition could have and should have done more to fill a vacuum left behind\" and that it was \"a mess\". He has stated that the lack of preparation surrounding the days following the government\\'s overthrow was the \"worst mistake\" of his presidency.\\n\\n\\n==== Syrian civil war ====\\n\\nOn August 18, 2011, several months after the start of the Syrian civil war, Obama issued a written statement that said: \"The time has come for President Assad to step aside.\" This stance was reaffirmed in November 2015. In 2012, Obama authorized multiple programs run by the CIA and the Pentagon to train anti-Assad rebels. The Pentagon-run program was later found to have failed and was formally abandoned in October 2015.\\nIn the wake of a chemical weapons attack in Syria, formally blamed by the Obama administration on the Assad government, Obama chose not to enforce the \"red line\" he had pledged and, rather than authorize the promised military action against Assad, went along with the Russia-brokered deal that led to Assad giving up chemical weapons; however attacks with chlorine gas continued. In 2014, Obama authorized an air campaign aimed primarily at ISIL.\\n\\n\\n==== Iran nuclear talks ====\\n\\nOn October 1, 2009, the Obama administration went ahead with a Bush administration program, increasing nuclear weapons production. The \"Complex Modernization\" initiative expanded two existing nuclear sites to produce new bomb parts. In November 2013, the Obama administration opened negotiations with Iran to prevent it from acquiring nuclear weapons, which included an interim agreement. Negotiations took two years with numerous delays, with a deal being announced on July 14, 2015. The deal titled the \"Joint Comprehensive Plan of Action\" saw sanctions removed in exchange for measures that would prevent Iran from producing nuclear weapons. While Obama hailed the agreement as being a step towards a more hopeful world, the deal drew strong criticism from Republican and conservative quarters, and from Israeli Prime Minister Benjamin Netanyahu. In addition, the transfer of $1.7 billion in cash to Iran shortly after the deal was announced was criticized by the Republican party. The Obama administration said that the payment in cash was because of the \"effectiveness of U.S. and international sanctions.\" In order to advance the deal, the Obama administration shielded Hezbollah from the Drug Enforcement Administration\\'s Project Cassandra investigation regarding drug smuggling and from the Central Intelligence Agency.\\nOn a side note, the very same year, in December 2015, Obama started a $348 billion worth program to back the biggest U.S. buildup of nuclear arms since Ronald Reagan left the White House.\\n\\n\\n==== Russia ====\\n\\nIn March 2010, an agreement was reached with the administration of Russian President Dmitry Medvedev to replace the 1991 Strategic Arms Reduction Treaty with a new pact reducing the number of long-range nuclear weapons in the arsenals of both countries by about a third. Obama and Medvedev signed the New START treaty in April 2010, and the U.S. Senate ratified it in December 2010. In December 2011, Obama instructed agencies to consider LGBT rights when issuing financial aid to foreign countries. In August 2013, he criticized Russia\\'s law that discriminates against homosexual people, but he stopped short of advocating a boycott of the upcoming 2014 Winter Olympics in Sochi, Russia.\\nAfter Russia\\'s invasion of Crimea in 2014, military intervention in Syria in 2015, and the interference in the 2016 U.S. presidential election, George Robertson, a former UK defense secretary and NATO secretary-general, said Obama had \"allowed Putin to jump back on the world stage and test the resolve of the West\", adding that the legacy of this disaster would last.\\n\\n\\n== Post-presidency (2017–present) ==\\n\\nObama\\'s presidency ended on January 20, 2017, upon the inauguration of his successor, Donald Trump. The family moved to a house they rented in Kalorama, Washington, D.C. On March 2, the John F. Kennedy Presidential Library and Museum awarded the Profile in Courage Award to Obama \"for his enduring commitment to democratic ideals and elevating the standard of political courage.\" His first public appearance since leaving the office was a seminar at the University of Chicago on April 24, where he appealed for a new generation to participate in politics. On September 7, Obama partnered with former presidents Jimmy Carter, George H. W. Bush, Bill Clinton, and George W. Bush to work with One America Appeal to help the victims of Hurricane Harvey and Hurricane Irma in the Gulf Coast and Texas communities. From October 31 to November 1, Obama hosted the inaugural summit of the Obama Foundation, which he intended to be the central focus of his post-presidency and part of his ambitions for his subsequent activities following his presidency to be more consequential than his time in office.\\nBarack and Michelle Obama signed a deal on May 22, 2018, to produce docu-series, documentaries and features for Netflix under the Obamas\\' newly formed production company, Higher Ground Productions. Higher Ground\\'s first film, American Factory, won the Academy Award for Best Documentary Feature in 2020. On October 24, a pipe bomb addressed to Obama was intercepted by the Secret Service. It was one of several pipe-bombs that had been mailed out to Democratic lawmakers and officials. In 2019, Barack and Michelle Obama bought a home on Martha\\'s Vineyard from Wyc Grousbeck. On October 29, Obama criticized \"wokeness\" and call-out culture at the Obama Foundation\\'s annual summit.\\nObama was reluctant to make an endorsement in the 2020 Democratic presidential primaries because he wanted to position himself to unify the party, regardless of the nominee. On April 14, 2020, Obama endorsed Biden, the presumptive nominee, for president in the presidential election, stating that he has \"all the qualities we need in a president right now.\" In May, Obama criticized President Trump for his handling of the COVID-19 pandemic, calling his response to the crisis \"an absolute chaotic disaster\", and stating that the consequences of the Trump presidency have been \"our worst impulses unleashed, our proud reputation around the world badly diminished, and our democratic institutions threatened like never before.\" On November 17, Obama\\'s presidential memoir, A Promised Land, was released.\\nIn February 2021, Obama and musician Bruce Springsteen started a podcast called Renegades: Born in the USA where the two talk about \"their backgrounds, music and their \\'enduring love of America.\\'\" Later that year, Regina Hicks had signed a deal with Netflix, in a venture with his and Michelle\\'s Higher Ground to develop comedy projects.\\n\\nOn March 4, 2022, Obama won an Audio Publishers Association (APA) Award in the best narration by the author category for the narration of his memoir A Promised Land. On April 5, Obama visited the White House for the first time since leaving office, in an event celebrating the 12th annual anniversary of the signing of the Affordable Care Act. In June, it was announced that the Obamas and their podcast production company, Higher Ground, signed a multi-year deal with Audible. In September, Obama visited the White House to unveil his and Michelle\\'s official White House portraits. Around the same time, he won a Primetime Emmy Award for Outstanding Narrator for his narration in the Netflix documentary series Our Great National Parks.\\nIn 2022, Obama opposed expanding the Supreme Court beyond the present nine Justices.\\nIn March 2023, Obama traveled to Australia as a part of his speaking tour of the country. During the trip, Obama met with Australian prime minister Anthony Albanese and visited Melbourne for the first time. Obama was reportedly paid more than $1 million for two speeches.\\nIn October 2023, during the Gaza war, Obama declared that Israel must dismantle Hamas in the wake of the Hamas-led attack on Israel. Weeks later, Obama warned Israel that its actions could \"harden Palestinian attitudes for generations\" and weaken international support for Israel; any military strategy that ignored the war\\'s human costs \"could ultimately backfire.\"\\nIn July 2024, Obama expressed concerns about Biden\\'s campaign viability after his critically maligned debate performance against former president Trump. On July 21, Biden withdrew his candidacy and swiftly endorsed Vice President Harris right after to run as the Democratic nominee. Obama endorsed Harris alongside his wife Michelle five days later and delivered a speech at the 2024 Democratic National Convention formally endorsing her. He joined Harris on the campaign trail in October, traveling to various swing states and emphasizing her record as a prosecutor, senator, and vice president and advocating for increased voter turnout, and his criticisms of Donald Trump and the Republican Party were widely reported by various media outlets. After Trump was declared the winner of the election on November 6, Obama and Michelle congratulated him and Vice President–elect JD Vance while praising the Harris campaign and calling on liberal voters to continue supporting democracy and human rights.\\n\\n\\n== Cultural and political image ==\\n\\nObama\\'s family history, upbringing, and Ivy League education differ markedly from those of African-American politicians who rose to prominence in the 1960s through their involvement in the civil rights movement. Expressing puzzlement over questions about whether he is \"black enough\", Obama told an August 2007 meeting of the National Association of Black Journalists that \"we\\'re still locked in this notion that if you appeal to white folks then there must be something wrong.\" Obama acknowledged his youthful image in an October 2007 campaign speech, remarking: \"I wouldn\\'t be here if, time and again, the torch had not been passed to a new generation.\" Additionally, Obama has frequently been referred to as an exceptional orator. During his pre-inauguration transition period and continuing into his presidency, Obama delivered a series of weekly video addresses on YouTube.\\n\\n\\n=== Job approval ===\\n\\nAccording to the Gallup Organization, Obama began his presidency with a 68 percent approval rating, the fifth highest for a president following their swearing in. His ratings remained above the majority level until November 2009 and by August 2010 his approval was in the low 40s, a trend similar to Ronald Reagan\\'s and Bill Clinton\\'s first years in office. Following the death of Osama bin Laden on May 2, 2011, Obama experienced a small poll bounce and steadily maintained 50–53 percent approval for about a month, until his approval numbers dropped back to the low 40s.\\nHis approval rating fell to 38 percent on several occasions in late 2011 before recovering in mid-2012 with polls showing an average approval of 50 percent. After his second inauguration in 2013, Obama\\'s approval ratings remained stable around 52 percent before declining for the rest of the year and eventually bottoming out at 39 percent in December. In polling conducted before the 2014 midterm elections, Obama\\'s approval ratings were at their lowest with his disapproval rating reaching a high of 57 percent. His approval rating continued to lag throughout most of 2015 but began to reach the high 40s by the end of the year. According to Gallup, Obama\\'s approval rating reached 50 percent in March 2016, a level unseen since May 2013. In polling conducted January 16–19, 2017, Obama\\'s final approval rating was 59 percent, which placed him on par with George H. W. Bush and Dwight D. Eisenhower, whose final Gallup ratings also measured in the high 50s.\\nObama has maintained relatively positive public perceptions after his presidency. In Gallup\\'s retrospective approval polls of former presidents, Obama garnered a 63 percent approval rating in 2018 and again in 2023, ranking him the fourth most popular president since World War II.\\n\\n\\n=== Foreign perceptions ===\\nPolls showed strong support for Obama in other countries both before and during his presidency. In a February 2009 poll conducted in Western Europe and the U.S. by Harris Interactive for France 24 and the International Herald Tribune, Obama was rated as the most respected world leader, as well as the most powerful. In a similar poll conducted by Harris in May 2009, Obama was rated as the most popular world leader, as well as the one figure most people would pin their hopes on for pulling the world out of the economic downturn.\\nOn October 9, 2009—only nine months into his first term—the Norwegian Nobel Committee announced that Obama had won the 2009 Nobel Peace Prize \"for his extraordinary efforts to strengthen international diplomacy and cooperation between peoples\", which drew a mixture of praise and criticism from world leaders and media figures. He became the fourth U.S. president to be awarded the Nobel Peace Prize, and the third to become a Nobel laureate while in office. He himself called it a \"call to action\" and remarked: \"I do not view it as a recognition of my own accomplishments but rather an affirmation of American leadership on behalf of aspirations held by people in all nations\".\\n\\n\\n=== Thanks, Obama ===\\n\\nIn 2009, the saying \"thanks, Obama\" first appeared in a Twitter hashtag, \"#thanks Obama\", and was later used in a demotivational poster. It was later adopted satirically to blame Obama for any socio-economic ills. Obama himself used the phrase in video in 2015 and 2016. In 2017, the phrase was used by Stephen Colbert to express gratitude to Obama on his last day in office. In 2022, President Joe Biden\\'s Twitter account posted the phrase.\\n\\n\\n== Legacy and recognition ==\\nObama has been described as one of the most effective campaigners in American history (his 2008 campaign being particularly highlighted) as well as one of the most talented political orators of the 21st century. Historian Julian Zelizer credits Obama with \"a keen sense of how the institutions of government work and the ways that his team could design policy proposals.\" Zeitzer notes Obama\\'s policy successes included the economic stimulus package which ended the Great Recession and the Dodd-Frank financial and consumer protection reforms, as well as the Affordable Care Act. Zeitzer also notes the Democratic Party lost power and numbers of elected officials during Obama\\'s term, saying that the consensus among historians is that Obama \"turned out to be a very effective policymaker but not a tremendously successful party builder.\" Zeitzer calls this the \"defining paradox of Obama\\'s presidency\".\\nThe Brookings Institution noted that Obama passed \"only one major legislative achievement (Obamacare)—and a fragile one at that—the legacy of Obama\\'s presidency mainly rests on its tremendous symbolic importance and the fate of a patchwork of executive actions.\" David W. Wise noted that Obama fell short \"in areas many Progressives hold dear\", including the continuation of drone strikes, not going after big banks during the Great Recession, and failing to strengthen his coalition before pushing for Obamacare. Wise called Obama\\'s legacy that of \"a disappointingly conventional president\".\\nObama\\'s most significant accomplishment is generally considered to be the Affordable Care Act (ACA), provisions of which went into effect from 2010 to 2020. Many attempts by Senate Republicans to repeal the ACA, including a \"skinny repeal\", have thus far failed. However, in 2017, the penalty for violating the individual mandate was repealed effective 2019. Together with the Health Care and Education Reconciliation Act amendment, it represents the U.S. healthcare system\\'s most significant regulatory overhaul and expansion of coverage since the passage of Medicare and Medicaid in 1965.\\nMany commentators credit Obama with averting a threatened depression and pulling the economy back from the Great Recession. According to the U.S. Bureau of Labor Statistics, the Obama administration created 11.3 million jobs from the month after his first inauguration to the end of his second term. In 2010, Obama signed into effect the Dodd–Frank Wall Street Reform and Consumer Protection Act. Passed as a response to the 2008 financial crisis, it brought the most significant changes to financial regulation in the United States since the regulatory reform that followed the Great Depression under Democratic President Franklin D. Roosevelt.\\nIn 2009, Obama signed into law the National Defense Authorization Act for Fiscal Year 2010, which contained in it the Matthew Shepard and James Byrd Jr. Hate Crimes Prevention Act, the first addition to existing federal hate crime law in the United States since Democratic President Bill Clinton signed into law the Church Arson Prevention Act of 1996. The act expanded existing federal hate crime laws in the United States, and made it a federal crime to assault people based on sexual orientation, gender identity, or disability.\\nAs president, Obama advanced LGBT rights. In 2010, he signed the Don\\'t Ask, Don\\'t Tell Repeal Act, which brought an end to \"don\\'t ask, don\\'t tell\" policy in the U.S. armed forces that banned open service from LGBT people; the law went into effect the following year. In 2016, his administration brought an end to the ban on transgender people serving openly in the U.S. armed forces. A Gallup poll, taken in the final days of Obama\\'s term, showed that 68 percent of Americans believed the U.S. had made progress on LGBT rights during Obama\\'s eight years in office.\\nObama substantially escalated the use of drone strikes against suspected militants and terrorists associated with al-Qaeda and the Taliban. In 2016, the last year of his presidency, the U.S. dropped 26,171 bombs on seven different countries. Obama left about 8,400 U.S. troops in Afghanistan, 5,262 in Iraq, 503 in Syria, 133 in Pakistan, 106 in Somalia, seven in Yemen, and two in Libya at the end of his presidency.\\nAccording to Pew Research Center and United States Bureau of Justice Statistics, from December 31, 2009, to December 31, 2015, inmates sentenced in U.S. federal custody declined by five percent. This is the largest decline in sentenced inmates in U.S. federal custody of any president since Jimmy Carter. By contrast, the federal prison population increased significantly under presidents Ronald Reagan, George H. W. Bush, Bill Clinton, and George W. Bush.\\nHuman Rights Watch (HRW) called Obama\\'s human rights record \"mixed\", adding that \"he has often treated human rights as a secondary interest—nice to support when the cost was not too high, but nothing like a top priority he championed.\"\\nObama left office in January 2017 with a 60 percent approval rating. He gained 10 spots from the same survey in 2015 from the Brookings Institution that ranked him the 18th-greatest American president. In Gallup\\'s 2018 job approval poll for the past 10 U.S. presidents, he received a 63 percent approval rating.\\n\\n\\n=== Presidential library ===\\n\\nThe Barack Obama Presidential Center is Obama\\'s planned presidential library. It will be hosted by the University of Chicago and located in Jackson Park on the South Side of Chicago.\\n\\n\\n=== Awards and honors ===\\n\\nObama received the Norwegian Nobel Committee\\'s Nobel Peace Prize in 2009, The Shoah Foundation Institute for Visual History and Education\\'s Ambassador of Humanity Award in 2014, the John F. Kennedy Profile in Courage Award in 2017, and the Robert F. Kennedy Center for Justice and Human Rights Ripple of Hope Award in 2018. He was named TIME Magazine\\'s Time Person of the Year in 2008 and 2012. He also received two Grammy Awards for Best Spoken Word Album for Dreams from My Father (2006), and The Audacity of Hope (2008) as well as two Primetime Emmy Awards for Outstanding Narrator for Our Great National Parks (2022), and Working: What We Do All Day (2023). He also won two Children\\'s and Family Emmy Awards.\\n\\n\\n=== Eponymy ===\\n\\n\\n== Bibliography ==\\n\\n\\n== See also ==\\n\\n\\n=== Politics ===\\nDREAM Act\\nFraud Enforcement and Recovery Act of 2009\\nImmigration Reform and Control Act of 1986\\nIRS targeting controversy\\nMiddle Class Tax Relief and Job Creation Act of 2012\\nNational Broadband Plan (United States)\\nOffice of Energy Efficiency and Renewable Energy\\nSocial policy of the Barack Obama administration\\nSPEECH Act\\nStay with It\\nWhite House Office of Energy and Climate Change Policy\\n\\n\\n=== Other ===\\nRoberts Court\\nSpeeches of Barack Obama\\n\\n\\n=== Lists ===\\nAssassination threats against Barack Obama\\nList of African-American United States senators\\nList of Barack Obama 2008 presidential campaign endorsements\\nList of Barack Obama 2012 presidential campaign endorsements\\nList of federal political scandals, 2009–17\\nList of people granted executive clemency by Barack Obama\\nList of presidents of the United States\\nList of presidents of the United States by previous experience\\nList of things named after Barack Obama\\n\\n\\n== Notes ==\\n\\n\\n== References ==\\n\\n\\n=== Bibliography ===\\n\\n\\n== Further reading ==\\n\\n\\n== External links ==\\n\\n\\n=== Official ===\\nOfficial website of The Obama Foundation\\nOfficial website of the Barack Obama Presidential Library\\nOfficial website of Organizing for Action\\nWhite House biography\\n\\n\\n=== Other ===\\nColumn archive at The Huffington Post\\nBarack Obama on Twitter \\nUnited States Congress. \"Barack Obama (id: O000167)\". Biographical Directory of the United States Congress.\\nAppearances on C-SPAN\\nBarack Obama at IMDb\\nBarack Obama collected news and commentary at The New York Times\\nBarack Obama articles in the archive of the Chicago Tribune\\nWorks by Barack Obama at Project Gutenberg\\nWorks by or about Barack Obama at the Internet Archive\\nWorks by Barack Obama at LibriVox (public domain audiobooks) \\nBarack Obama on Nobelprize.org \\nBarack Obama at Politifact'"
  },
  {
    "objectID": "tools.html#google-search",
    "href": "tools.html#google-search",
    "title": "Example Tools",
    "section": "Google search",
    "text": "Google search\n\ndef get_serper_api_key():\n    key = os.getenv('SERPER_API_KEY')\n    if key is None:\n        raise ValueError('SERPER_API_KEY is not set')\n    return key\n\n\nsource\n\ngoogle_search\n\n google_search (q:str, location:str='Austin, Texas',\n                engine:str='google_scholar')\n\n*Search the web for information using various search engines.\nThis function performs web searches using the SerpAPI client, allowing access to information from different search engines including Google Scholar. Results include source information for verification.\nArgs: q (str): The search query string. location (str, optional): The location to use for localized search results. Defaults to ‘Austin, Texas’. engine (str, optional): The search engine to use. Defaults to ‘google_scholar’.\nReturns: dict: A dictionary containing the search results and metadata from the SerpAPI response.*\n\ngoogle_search(\"how to fix a pipe leak\")\n\n{'search_metadata': {'id': '6821ecdab13aa75b695b32e8',\n  'status': 'Success',\n  'json_endpoint': 'https://serpapi.com/searches/93a8d790bf5bbc3f/6821ecdab13aa75b695b32e8.json',\n  'created_at': '2025-05-12 12:43:06 UTC',\n  'processed_at': '2025-05-12 12:43:06 UTC',\n  'google_scholar_url': 'https://scholar.google.com/scholar?q=how+to+fix+a+pipe+leak&hl=en',\n  'raw_html_file': 'https://serpapi.com/searches/93a8d790bf5bbc3f/6821ecdab13aa75b695b32e8.html',\n  'total_time_taken': 1.3},\n 'search_parameters': {'engine': 'google_scholar',\n  'q': 'how to fix a pipe leak',\n  'hl': 'en'},\n 'search_information': {'organic_results_state': 'Results for exact spelling',\n  'total_results': 44100,\n  'time_taken_displayed': 0.14,\n  'query_displayed': 'how to fix a pipe leak'},\n 'organic_results': [{'position': 1,\n   'title': 'Detecting and correcting pipeline leaks before they become a big problem',\n   'result_id': 'tUChGR80issJ',\n   'link': 'https://www.ingentaconnect.com/content/mts/mtsj/2015/00000049/00000001/art00004',\n   'snippet': '… Timely pipeline leak detection is a significant … how PSL sensitivity can be improved by combining with a real-time LDS based upon flow imbalance. First, we need to consider how to …',\n   'publication_info': {'summary': 'R Cramer, D Shaw, R Tulalian, P Angelo… - Marine Technology …, 2015 - ingentaconnect.com'},\n   'resources': [{'title': 'ingentaconnect.com',\n     'file_format': 'PDF',\n     'link': 'https://www.ingentaconnect.com/contentone/mts/mtsj/2015/00000049/00000001/art00004?crawler=true&mimetype=application/pdf'}],\n   'inline_links': {'serpapi_cite_link': 'https://serpapi.com/search.json?engine=google_scholar_cite&hl=en&q=tUChGR80issJ',\n    'cited_by': {'total': 57,\n     'link': 'https://scholar.google.com/scholar?cites=14666592444664070325&as_sdt=5,36&sciodt=0,36&hl=en',\n     'cites_id': '14666592444664070325',\n     'serpapi_scholar_link': 'https://serpapi.com/search.json?as_sdt=5%2C36&cites=14666592444664070325&engine=google_scholar&hl=en'},\n    'related_pages_link': 'https://scholar.google.com/scholar?q=related:tUChGR80issJ:scholar.google.com/&scioq=how+to+fix+a+pipe+leak&hl=en&as_sdt=0,36',\n    'serpapi_related_pages_link': 'https://serpapi.com/search.json?as_sdt=0%2C36&engine=google_scholar&hl=en&q=related%3AtUChGR80issJ%3Ascholar.google.com%2F',\n    'versions': {'total': 6,\n     'link': 'https://scholar.google.com/scholar?cluster=14666592444664070325&hl=en&as_sdt=0,36',\n     'cluster_id': '14666592444664070325',\n     'serpapi_scholar_link': 'https://serpapi.com/search.json?as_sdt=0%2C36&cluster=14666592444664070325&engine=google_scholar&hl=en'}}},\n  {'position': 2,\n   'title': 'Pipe leakage–future challenges and solutions',\n   'result_id': 'OooJutepRiQJ',\n   'type': 'Pdf',\n   'link': 'https://www.researchgate.net/profile/S-Burn/publication/44055423_Pipe_Leakage_-_Future_Challenges_and_Solutions/links/00b7d521bfbb70b742000000/Pipe-Leakage-Future-Challenges-and-Solutions.pdf',\n   'snippet': '… pressure controlled and for how many hours per day. Figure 8 shows how pressure control can … Repair involves fixing local damage to the pipeline and may involve such techniques as …',\n   'publication_info': {'summary': 'S Burn, D DeSilva, M Eiswirth, O Hunaidi… - Pipes Wagga Wagga …, 1999 - researchgate.net',\n    'authors': [{'name': 'S Burn',\n      'link': 'https://scholar.google.com/citations?user=1gqNS4IAAAAJ&hl=en&oi=sra',\n      'serpapi_scholar_link': 'https://serpapi.com/search.json?author_id=1gqNS4IAAAAJ&engine=google_scholar_author&hl=en',\n      'author_id': '1gqNS4IAAAAJ'}]},\n   'resources': [{'title': 'researchgate.net',\n     'file_format': 'PDF',\n     'link': 'https://www.researchgate.net/profile/S-Burn/publication/44055423_Pipe_Leakage_-_Future_Challenges_and_Solutions/links/00b7d521bfbb70b742000000/Pipe-Leakage-Future-Challenges-and-Solutions.pdf'}],\n   'inline_links': {'serpapi_cite_link': 'https://serpapi.com/search.json?engine=google_scholar_cite&hl=en&q=OooJutepRiQJ',\n    'cited_by': {'total': 71,\n     'link': 'https://scholar.google.com/scholar?cites=2613963377739401786&as_sdt=5,36&sciodt=0,36&hl=en',\n     'cites_id': '2613963377739401786',\n     'serpapi_scholar_link': 'https://serpapi.com/search.json?as_sdt=5%2C36&cites=2613963377739401786&engine=google_scholar&hl=en'},\n    'related_pages_link': 'https://scholar.google.com/scholar?q=related:OooJutepRiQJ:scholar.google.com/&scioq=how+to+fix+a+pipe+leak&hl=en&as_sdt=0,36',\n    'serpapi_related_pages_link': 'https://serpapi.com/search.json?as_sdt=0%2C36&engine=google_scholar&hl=en&q=related%3AOooJutepRiQJ%3Ascholar.google.com%2F'}},\n  {'position': 3,\n   'title': 'Leaks in pipe networks',\n   'result_id': 'uPA5R-0969YJ',\n   'link': 'https://ascelibrary.org/doi/abs/10.1061/(ASCE)0733-9429(1992)118:7(1031)',\n   'snippet': '… of leaks are sensitive to the quantity and quality of pressure measurements and to how well the pipe … The overdetermined problem (more measurements than suspected leaks) gives the …',\n   'publication_info': {'summary': 'RS Pudar, JA Liggett - Journal of hydraulic engineering, 1992 - ascelibrary.org'},\n   'inline_links': {'serpapi_cite_link': 'https://serpapi.com/search.json?engine=google_scholar_cite&hl=en&q=uPA5R-0969YJ',\n    'cited_by': {'total': 477,\n     'link': 'https://scholar.google.com/scholar?cites=15486539832955105464&as_sdt=5,36&sciodt=0,36&hl=en',\n     'cites_id': '15486539832955105464',\n     'serpapi_scholar_link': 'https://serpapi.com/search.json?as_sdt=5%2C36&cites=15486539832955105464&engine=google_scholar&hl=en'},\n    'related_pages_link': 'https://scholar.google.com/scholar?q=related:uPA5R-0969YJ:scholar.google.com/&scioq=how+to+fix+a+pipe+leak&hl=en&as_sdt=0,36',\n    'serpapi_related_pages_link': 'https://serpapi.com/search.json?as_sdt=0%2C36&engine=google_scholar&hl=en&q=related%3AuPA5R-0969YJ%3Ascholar.google.com%2F',\n    'versions': {'total': 10,\n     'link': 'https://scholar.google.com/scholar?cluster=15486539832955105464&hl=en&as_sdt=0,36',\n     'cluster_id': '15486539832955105464',\n     'serpapi_scholar_link': 'https://serpapi.com/search.json?as_sdt=0%2C36&cluster=15486539832955105464&engine=google_scholar&hl=en'}}},\n  {'position': 4,\n   'title': 'A review of methods for leakage management in pipe networks',\n   'result_id': 'BEnumeoianYJ',\n   'link': 'https://www.tandfonline.com/doi/abs/10.1080/15730621003610878',\n   'snippet': '… exponents vary, being close to 0.5 with fixed area leakage path (hole in pipe) and 1.5 with variable leakage path (crack in pipe). The increase or decrease of real losses due to a change …',\n   'publication_info': {'summary': 'R Puust, Z Kapelan, DA Savic, T Koppel - Urban Water Journal, 2010 - Taylor & Francis',\n    'authors': [{'name': 'R Puust',\n      'link': 'https://scholar.google.com/citations?user=m1fLElgAAAAJ&hl=en&oi=sra',\n      'serpapi_scholar_link': 'https://serpapi.com/search.json?author_id=m1fLElgAAAAJ&engine=google_scholar_author&hl=en',\n      'author_id': 'm1fLElgAAAAJ'},\n     {'name': 'Z Kapelan',\n      'link': 'https://scholar.google.com/citations?user=4iULpZ4AAAAJ&hl=en&oi=sra',\n      'serpapi_scholar_link': 'https://serpapi.com/search.json?author_id=4iULpZ4AAAAJ&engine=google_scholar_author&hl=en',\n      'author_id': '4iULpZ4AAAAJ'},\n     {'name': 'DA Savic',\n      'link': 'https://scholar.google.com/citations?user=piEJXtcAAAAJ&hl=en&oi=sra',\n      'serpapi_scholar_link': 'https://serpapi.com/search.json?author_id=piEJXtcAAAAJ&engine=google_scholar_author&hl=en',\n      'author_id': 'piEJXtcAAAAJ'}]},\n   'inline_links': {'serpapi_cite_link': 'https://serpapi.com/search.json?engine=google_scholar_cite&hl=en&q=BEnumeoianYJ',\n    'cited_by': {'total': 891,\n     'link': 'https://scholar.google.com/scholar?cites=8532670835007047940&as_sdt=5,36&sciodt=0,36&hl=en',\n     'cites_id': '8532670835007047940',\n     'serpapi_scholar_link': 'https://serpapi.com/search.json?as_sdt=5%2C36&cites=8532670835007047940&engine=google_scholar&hl=en'},\n    'related_pages_link': 'https://scholar.google.com/scholar?q=related:BEnumeoianYJ:scholar.google.com/&scioq=how+to+fix+a+pipe+leak&hl=en&as_sdt=0,36',\n    'serpapi_related_pages_link': 'https://serpapi.com/search.json?as_sdt=0%2C36&engine=google_scholar&hl=en&q=related%3ABEnumeoianYJ%3Ascholar.google.com%2F',\n    'versions': {'total': 7,\n     'link': 'https://scholar.google.com/scholar?cluster=8532670835007047940&hl=en&as_sdt=0,36',\n     'cluster_id': '8532670835007047940',\n     'serpapi_scholar_link': 'https://serpapi.com/search.json?as_sdt=0%2C36&cluster=8532670835007047940&engine=google_scholar&hl=en'}}},\n  {'position': 5,\n   'title': 'The prevention of major leaks—better inspection after construction?',\n   'result_id': 'hGcePc4ldpkJ',\n   'link': 'https://onlinelibrary.wiley.com/doi/pdf/10.1002/prsb.720030109',\n   'snippet': '… the behavior of leaks of gas and vapors-how they disperse in the atmosphere and how they behave … However, we do not know the criteria for vessel and pipe line failure and it has been …',\n   'publication_info': {'summary': 'TA Kletz - Plant/Operations Progress, 1984 - Wiley Online Library'},\n   'inline_links': {'serpapi_cite_link': 'https://serpapi.com/search.json?engine=google_scholar_cite&hl=en&q=hGcePc4ldpkJ',\n    'cited_by': {'total': 11,\n     'link': 'https://scholar.google.com/scholar?cites=11058067502773725060&as_sdt=5,36&sciodt=0,36&hl=en',\n     'cites_id': '11058067502773725060',\n     'serpapi_scholar_link': 'https://serpapi.com/search.json?as_sdt=5%2C36&cites=11058067502773725060&engine=google_scholar&hl=en'},\n    'related_pages_link': 'https://scholar.google.com/scholar?q=related:hGcePc4ldpkJ:scholar.google.com/&scioq=how+to+fix+a+pipe+leak&hl=en&as_sdt=0,36',\n    'serpapi_related_pages_link': 'https://serpapi.com/search.json?as_sdt=0%2C36&engine=google_scholar&hl=en&q=related%3AhGcePc4ldpkJ%3Ascholar.google.com%2F',\n    'versions': {'total': 3,\n     'link': 'https://scholar.google.com/scholar?cluster=11058067502773725060&hl=en&as_sdt=0,36',\n     'cluster_id': '11058067502773725060',\n     'serpapi_scholar_link': 'https://serpapi.com/search.json?as_sdt=0%2C36&cluster=11058067502773725060&engine=google_scholar&hl=en'}}},\n  {'position': 6,\n   'title': 'Women in academia: Why and where does the pipeline leak, and how can we fix it',\n   'result_id': '6mfaZrLllXsJ',\n   'type': 'Pdf',\n   'link': 'https://sciencepolicyreview.org/wp-content/uploads/securepdfs/2023/08/MITSPR-v4-191618004014.pdf',\n   'snippet': '… leaks. Because of the large scope of this topic, the focus of this article is on the leaky pipeline faced by women in US academia, where the leaks are, and what possibilities exist to fix …',\n   'publication_info': {'summary': 'L Greska, D McCormick, J Cascino - Parity, 2023 - sciencepolicyreview.org'},\n   'resources': [{'title': 'sciencepolicyreview.org',\n     'file_format': 'PDF',\n     'link': 'https://sciencepolicyreview.org/wp-content/uploads/securepdfs/2023/08/MITSPR-v4-191618004014.pdf'}],\n   'inline_links': {'serpapi_cite_link': 'https://serpapi.com/search.json?engine=google_scholar_cite&hl=en&q=6mfaZrLllXsJ',\n    'cited_by': {'total': 13,\n     'link': 'https://scholar.google.com/scholar?cites=8905276392587552746&as_sdt=5,36&sciodt=0,36&hl=en',\n     'cites_id': '8905276392587552746',\n     'serpapi_scholar_link': 'https://serpapi.com/search.json?as_sdt=5%2C36&cites=8905276392587552746&engine=google_scholar&hl=en'},\n    'related_pages_link': 'https://scholar.google.com/scholar?q=related:6mfaZrLllXsJ:scholar.google.com/&scioq=how+to+fix+a+pipe+leak&hl=en&as_sdt=0,36',\n    'serpapi_related_pages_link': 'https://serpapi.com/search.json?as_sdt=0%2C36&engine=google_scholar&hl=en&q=related%3A6mfaZrLllXsJ%3Ascholar.google.com%2F',\n    'cached_page_link': 'https://scholar.googleusercontent.com/scholar?q=cache:6mfaZrLllXsJ:scholar.google.com/+how+to+fix+a+pipe+leak&hl=en&as_sdt=0,36'}},\n  {'position': 7,\n   'title': 'In situ remediation of leaks in potable water supply systems',\n   'result_id': 'vHY475xqsoQJ',\n   'link': 'https://www.degruyter.com/document/doi/10.1515/corrrev-2013-0026/html',\n   'snippet': '… first comprehensive review of research concepts related to pipeline leak in situ remediation. … As an example of how lower water flow can contribute to autogenous repair, stagnant water …',\n   'publication_info': {'summary': 'M Tang, S Triantafyllidou, M Edwards - Corrosion Reviews, 2013 - degruyter.com',\n    'authors': [{'name': 'S Triantafyllidou',\n      'link': 'https://scholar.google.com/citations?user=ygb7Ic0AAAAJ&hl=en&oi=sra',\n      'serpapi_scholar_link': 'https://serpapi.com/search.json?author_id=ygb7Ic0AAAAJ&engine=google_scholar_author&hl=en',\n      'author_id': 'ygb7Ic0AAAAJ'},\n     {'name': 'M Edwards',\n      'link': 'https://scholar.google.com/citations?user=Je0IEScAAAAJ&hl=en&oi=sra',\n      'serpapi_scholar_link': 'https://serpapi.com/search.json?author_id=Je0IEScAAAAJ&engine=google_scholar_author&hl=en',\n      'author_id': 'Je0IEScAAAAJ'}]},\n   'resources': [{'title': 'degruyter.com',\n     'file_format': 'PDF',\n     'link': 'https://www.degruyter.com/document/doi/10.1515/corrrev-2013-0026/pdf'}],\n   'inline_links': {'serpapi_cite_link': 'https://serpapi.com/search.json?engine=google_scholar_cite&hl=en&q=vHY475xqsoQJ',\n    'cited_by': {'total': 16,\n     'link': 'https://scholar.google.com/scholar?cites=9561822181121881788&as_sdt=5,36&sciodt=0,36&hl=en',\n     'cites_id': '9561822181121881788',\n     'serpapi_scholar_link': 'https://serpapi.com/search.json?as_sdt=5%2C36&cites=9561822181121881788&engine=google_scholar&hl=en'},\n    'related_pages_link': 'https://scholar.google.com/scholar?q=related:vHY475xqsoQJ:scholar.google.com/&scioq=how+to+fix+a+pipe+leak&hl=en&as_sdt=0,36',\n    'serpapi_related_pages_link': 'https://serpapi.com/search.json?as_sdt=0%2C36&engine=google_scholar&hl=en&q=related%3AvHY475xqsoQJ%3Ascholar.google.com%2F',\n    'versions': {'total': 4,\n     'link': 'https://scholar.google.com/scholar?cluster=9561822181121881788&hl=en&as_sdt=0,36',\n     'cluster_id': '9561822181121881788',\n     'serpapi_scholar_link': 'https://serpapi.com/search.json?as_sdt=0%2C36&cluster=9561822181121881788&engine=google_scholar&hl=en'}}},\n  {'position': 8,\n   'title': 'Concrete pipe leak repair without service interruption',\n   'result_id': 'J2KDJmdsomQJ',\n   'link': 'https://ascelibrary.org/doi/abs/10.1061/9780784482490.010',\n   'snippet': '… The ultimate success of this repair method relies on how the repair is executed. Detailed repair … This type of resin is regarded as long term fix with more than 40 years of service history at …',\n   'publication_info': {'summary': 'T Peng, P Drooks - Pipelines 2019, 2019 - ascelibrary.org'},\n   'inline_links': {'serpapi_cite_link': 'https://serpapi.com/search.json?engine=google_scholar_cite&hl=en&q=J2KDJmdsomQJ',\n    'cited_by': {'total': 1,\n     'link': 'https://scholar.google.com/scholar?cites=7251477540303495719&as_sdt=5,36&sciodt=0,36&hl=en',\n     'cites_id': '7251477540303495719',\n     'serpapi_scholar_link': 'https://serpapi.com/search.json?as_sdt=5%2C36&cites=7251477540303495719&engine=google_scholar&hl=en'},\n    'related_pages_link': 'https://scholar.google.com/scholar?q=related:J2KDJmdsomQJ:scholar.google.com/&scioq=how+to+fix+a+pipe+leak&hl=en&as_sdt=0,36',\n    'serpapi_related_pages_link': 'https://serpapi.com/search.json?as_sdt=0%2C36&engine=google_scholar&hl=en&q=related%3AJ2KDJmdsomQJ%3Ascholar.google.com%2F'}},\n  {'position': 9,\n   'title': 'Leak detection and self healing pipelines using twin balls technology',\n   'result_id': 'q32Sdwp4Da4J',\n   'link': 'https://onepetro.org/SPEATCE/proceedings-abstract/16ATCE/16ATCE/185066',\n   'snippet': '… The time required to fix any leak has a direct … how the leak noise decreases as it gets further from the leak location. For that simulation, the leak was created at the center of the pipe. …',\n   'publication_info': {'summary': 'W Chalgham, A Seibi, M Lomas - SPE Annual Technical Conference …, 2016 - onepetro.org',\n    'authors': [{'name': 'W Chalgham',\n      'link': 'https://scholar.google.com/citations?user=-HWCsq8AAAAJ&hl=en&oi=sra',\n      'serpapi_scholar_link': 'https://serpapi.com/search.json?author_id=-HWCsq8AAAAJ&engine=google_scholar_author&hl=en',\n      'author_id': '-HWCsq8AAAAJ'},\n     {'name': 'A Seibi',\n      'link': 'https://scholar.google.com/citations?user=QnWvt8EAAAAJ&hl=en&oi=sra',\n      'serpapi_scholar_link': 'https://serpapi.com/search.json?author_id=QnWvt8EAAAAJ&engine=google_scholar_author&hl=en',\n      'author_id': 'QnWvt8EAAAAJ'}]},\n   'inline_links': {'serpapi_cite_link': 'https://serpapi.com/search.json?engine=google_scholar_cite&hl=en&q=q32Sdwp4Da4J',\n    'cited_by': {'total': 13,\n     'link': 'https://scholar.google.com/scholar?cites=12541812523647794603&as_sdt=5,36&sciodt=0,36&hl=en',\n     'cites_id': '12541812523647794603',\n     'serpapi_scholar_link': 'https://serpapi.com/search.json?as_sdt=5%2C36&cites=12541812523647794603&engine=google_scholar&hl=en'},\n    'related_pages_link': 'https://scholar.google.com/scholar?q=related:q32Sdwp4Da4J:scholar.google.com/&scioq=how+to+fix+a+pipe+leak&hl=en&as_sdt=0,36',\n    'serpapi_related_pages_link': 'https://serpapi.com/search.json?as_sdt=0%2C36&engine=google_scholar&hl=en&q=related%3Aq32Sdwp4Da4J%3Ascholar.google.com%2F',\n    'versions': {'total': 2,\n     'link': 'https://scholar.google.com/scholar?cluster=12541812523647794603&hl=en&as_sdt=0,36',\n     'cluster_id': '12541812523647794603',\n     'serpapi_scholar_link': 'https://serpapi.com/search.json?as_sdt=0%2C36&cluster=12541812523647794603&engine=google_scholar&hl=en'}}},\n  {'position': 10,\n   'title': 'Leakage management and control',\n   'result_id': '5QSZbylJVSkJ',\n   'type': 'Pdf',\n   'link': 'https://iris.who.int/bitstream/handle/10665/66893/WHO_SDE_WSH_01.1_eng.pdf',\n   'snippet': '… behind leakage control and how to put it into practice in real life. Thus, an integral part of the course involves participants developing plans to put a leakage … leak by erosion of the pipe. …',\n   'publication_info': {'summary': 'M Farley - A best practice training manual, 2001 - iris.who.int'},\n   'resources': [{'title': 'who.int',\n     'file_format': 'PDF',\n     'link': 'https://iris.who.int/bitstream/handle/10665/66893/WHO_SDE_WSH_01.1_eng.pdf'}],\n   'inline_links': {'serpapi_cite_link': 'https://serpapi.com/search.json?engine=google_scholar_cite&hl=en&q=5QSZbylJVSkJ',\n    'cited_by': {'total': 242,\n     'link': 'https://scholar.google.com/scholar?cites=2978367170890237157&as_sdt=5,36&sciodt=0,36&hl=en',\n     'cites_id': '2978367170890237157',\n     'serpapi_scholar_link': 'https://serpapi.com/search.json?as_sdt=5%2C36&cites=2978367170890237157&engine=google_scholar&hl=en'},\n    'related_pages_link': 'https://scholar.google.com/scholar?q=related:5QSZbylJVSkJ:scholar.google.com/&scioq=how+to+fix+a+pipe+leak&hl=en&as_sdt=0,36',\n    'serpapi_related_pages_link': 'https://serpapi.com/search.json?as_sdt=0%2C36&engine=google_scholar&hl=en&q=related%3A5QSZbylJVSkJ%3Ascholar.google.com%2F',\n    'versions': {'total': 13,\n     'link': 'https://scholar.google.com/scholar?cluster=2978367170890237157&hl=en&as_sdt=0,36',\n     'cluster_id': '2978367170890237157',\n     'serpapi_scholar_link': 'https://serpapi.com/search.json?as_sdt=0%2C36&cluster=2978367170890237157&engine=google_scholar&hl=en'},\n    'cached_page_link': 'https://scholar.googleusercontent.com/scholar?q=cache:5QSZbylJVSkJ:scholar.google.com/+how+to+fix+a+pipe+leak&hl=en&as_sdt=0,36'}}],\n 'related_searches': [{'query': 'pipe leak repair',\n   'link': 'https://scholar.google.com/scholar?hl=en&as_sdt=0,36&qsp=1&q=pipe+leak+repair&qst=br'},\n  {'query': 'pipeline leak detection',\n   'link': 'https://scholar.google.com/scholar?hl=en&as_sdt=0,36&qsp=2&q=pipeline+leak+detection&qst=br'},\n  {'query': 'pipeline leaks big problem',\n   'link': 'https://scholar.google.com/scholar?hl=en&as_sdt=0,36&qsp=3&q=pipeline+leaks+big+problem&qst=br'},\n  {'query': 'leaks in pipe networks',\n   'link': 'https://scholar.google.com/scholar?hl=en&as_sdt=0,36&qsp=4&q=leaks+in+pipe+networks&qst=br'},\n  {'query': 'leaks in pipelines reliable sensing',\n   'link': 'https://scholar.google.com/scholar?hl=en&as_sdt=0,36&qsp=5&q=leaks+in+pipelines+reliable+sensing&qst=br'},\n  {'query': 'pipe distribution system monitoring leaks',\n   'link': 'https://scholar.google.com/scholar?hl=en&as_sdt=0,36&qsp=6&q=pipe+distribution+system+monitoring+leaks&qst=br'},\n  {'query': 'pressurized pipe systems leak detection techniques',\n   'link': 'https://scholar.google.com/scholar?hl=en&as_sdt=0,36&qsp=7&q=pressurized+pipe+systems+leak+detection+techniques&qst=br'},\n  {'query': 'leak detection monitoring pipeline integrity',\n   'link': 'https://scholar.google.com/scholar?hl=en&as_sdt=0,36&qsp=8&q=leak+detection+monitoring+pipeline+integrity&qst=br'},\n  {'query': 'leak analysis pipeline systems',\n   'link': 'https://scholar.google.com/scholar?hl=en&as_sdt=0,36&qsp=9&q=leak+analysis+pipeline+systems&qst=br'},\n  {'query': 'gas transmission pipelines leak detection',\n   'link': 'https://scholar.google.com/scholar?hl=en&as_sdt=0,36&qsp=10&q=gas+transmission+pipelines+leak+detection&qst=br'},\n  {'query': 'leak size pipe wall thickness',\n   'link': 'https://scholar.google.com/scholar?hl=en&as_sdt=0,36&qsp=11&q=leak+size+pipe+wall+thickness&qst=br'},\n  {'query': 'leak detection in pipelines',\n   'link': 'https://scholar.google.com/scholar?hl=en&as_sdt=0,36&qsp=12&q=leak+detection+in+pipelines&qst=br'}],\n 'pagination': {'current': 1,\n  'next': 'https://scholar.google.com/scholar?start=10&q=how+to+fix+a+pipe+leak&hl=en&as_sdt=0,36',\n  'other_pages': {'2': 'https://scholar.google.com/scholar?start=10&q=how+to+fix+a+pipe+leak&hl=en&as_sdt=0,36',\n   '3': 'https://scholar.google.com/scholar?start=20&q=how+to+fix+a+pipe+leak&hl=en&as_sdt=0,36',\n   '4': 'https://scholar.google.com/scholar?start=30&q=how+to+fix+a+pipe+leak&hl=en&as_sdt=0,36',\n   '5': 'https://scholar.google.com/scholar?start=40&q=how+to+fix+a+pipe+leak&hl=en&as_sdt=0,36',\n   '6': 'https://scholar.google.com/scholar?start=50&q=how+to+fix+a+pipe+leak&hl=en&as_sdt=0,36',\n   '7': 'https://scholar.google.com/scholar?start=60&q=how+to+fix+a+pipe+leak&hl=en&as_sdt=0,36',\n   '8': 'https://scholar.google.com/scholar?start=70&q=how+to+fix+a+pipe+leak&hl=en&as_sdt=0,36',\n   '9': 'https://scholar.google.com/scholar?start=80&q=how+to+fix+a+pipe+leak&hl=en&as_sdt=0,36',\n   '10': 'https://scholar.google.com/scholar?start=90&q=how+to+fix+a+pipe+leak&hl=en&as_sdt=0,36'}},\n 'serpapi_pagination': {'current': 1,\n  'next_link': 'https://serpapi.com/search.json?as_sdt=0%2C36&engine=google_scholar&hl=en&q=how+to+fix+a+pipe+leak&start=10',\n  'next': 'https://serpapi.com/search.json?as_sdt=0%2C36&engine=google_scholar&hl=en&q=how+to+fix+a+pipe+leak&start=10',\n  'other_pages': {'2': 'https://serpapi.com/search.json?as_sdt=0%2C36&engine=google_scholar&hl=en&q=how+to+fix+a+pipe+leak&start=10',\n   '3': 'https://serpapi.com/search.json?as_sdt=0%2C36&engine=google_scholar&hl=en&q=how+to+fix+a+pipe+leak&start=20',\n   '4': 'https://serpapi.com/search.json?as_sdt=0%2C36&engine=google_scholar&hl=en&q=how+to+fix+a+pipe+leak&start=30',\n   '5': 'https://serpapi.com/search.json?as_sdt=0%2C36&engine=google_scholar&hl=en&q=how+to+fix+a+pipe+leak&start=40',\n   '6': 'https://serpapi.com/search.json?as_sdt=0%2C36&engine=google_scholar&hl=en&q=how+to+fix+a+pipe+leak&start=50',\n   '7': 'https://serpapi.com/search.json?as_sdt=0%2C36&engine=google_scholar&hl=en&q=how+to+fix+a+pipe+leak&start=60',\n   '8': 'https://serpapi.com/search.json?as_sdt=0%2C36&engine=google_scholar&hl=en&q=how+to+fix+a+pipe+leak&start=70',\n   '9': 'https://serpapi.com/search.json?as_sdt=0%2C36&engine=google_scholar&hl=en&q=how+to+fix+a+pipe+leak&start=80',\n   '10': 'https://serpapi.com/search.json?as_sdt=0%2C36&engine=google_scholar&hl=en&q=how+to+fix+a+pipe+leak&start=90'}}}"
  },
  {
    "objectID": "tools.html#simple-python-code-execution",
    "href": "tools.html#simple-python-code-execution",
    "title": "Example Tools",
    "section": "Simple python code execution",
    "text": "Simple python code execution\n\nsource\n\nrun_python_code\n\n run_python_code (code:str)\n\n*Execute python code, useful when you need to do a calculation or a simple task Input should be a valid python code. If you want to see the output of a variable, the last line of the code should be that variable name.\nArgs: code (str): Python code to execute\nReturns: str: Output from executing the code, either the value of the last line or the error message*\n\ncode = \"\"\"\nfrom datetime import datetime\nnobama_birth_year = 1961\ncurrent_year = 2025\nobama_age = current_year - obama_birth_year\nobama_age_squared = obama_age ** 2\nobama_age_squared\n\"\"\"\n\n\nrun_python_code(code)\n\n4096\n\n\n\nfrom ladle.chat import Chat\n\n\n# TODO check why call_tool=True is not working\nc = Chat(model='gpt-4o-mini',messages=[{'role':'user','content':'what is the square root of 16?'}],\n    tools={'python':run_python_code},\n    call_function=True,\n    print_prompt=True)\nres = await c()\nres\n\n[{'role': 'system', 'content': 'choose an appropriate tool to use to answer the following thought based on the following tools:\\npython:Execute python code, useful when you need to do a calculation or a simple task\\nInput should be a valid python code.\\nIf you want to see the output of a variable, the last line of the code should be that variable name.\\n\\nArgs:\\n    code (str): Python code to execute\\n    \\nReturns:\\n    str: Output from executing the code, either the value of the last line or the error message\\n    '}, {'role': 'user', 'content': 'what is the square root of 16?'}]\n\n\n{'role': 'assistant',\n 'content': {'name': 'python', 'input': {'code': '16 ** 0.5'}, 'output': 4.0},\n 'meta': {'input_tokens': 419, 'output_tokens': 31}}"
  },
  {
    "objectID": "standard_library.html",
    "href": "standard_library.html",
    "title": "Standard Library",
    "section": "",
    "text": "Here we have a collection of standard functions that help writing Ladle diagrams effectively"
  },
  {
    "objectID": "standard_library.html#nested-conditions-made-simple",
    "href": "standard_library.html#nested-conditions-made-simple",
    "title": "Standard Library",
    "section": "Nested Conditions made simple",
    "text": "Nested Conditions made simple\n\nsource\n\nCondition\n\n Condition (func:Union[Callable,str], mapping:Optional[str]=None,\n            name:Optional[str]=None)\n\n*A utility function for creating condition functions using ladle’s port mapping logic.\nArgs: func: A function or string to match against the input. If string, it will be interpreted as a regex pattern to match the input against. mapping: A mapping of the input to the function. by default, the input is the first argument of the function. name: A name for the condition. by default, is func_name-&gt;mapping_string*\n\ndef is_module_2(x):\n    return x%2==0\n\nis_input_even = Condition(is_module_2,'(0=input)',name='input is even')\n\nassert is_input_even({\"input\": 2})\nassert not is_input_even({\"input\": 3})\n\n\ndef is_sum_42(x,y):\n    return x+y==42\n\nis_io_42 = Condition(is_sum_42,'(x=input,y=output)',name='i+o=42?')\n\nassert is_io_42({\"input\": 2,'output':40})\n\n\nC = Condition\n\ncomplex_cond = C(\"^3\",'(0=input)',name='input is 3') & C(\"^5\",'(0=output)',name='output is 5') | C(\"^2\",'(0=input)')\ncomplex_cond\n\n((input is 3 & output is 5) | Condition( (0=input) ) -&gt; (/^2/))\n\n\n\nassert complex_cond({\"input\": \"345\", \"output\": \"567\"})\nassert complex_cond({\"input\": \"244\", \"output\": \"567\"})\nassert not complex_cond({\"input\": \"145\", \"soutput\": \"567\"})\nassert not complex_cond({\"input\": \"345\", \"output\": \"67\"})\nassert not complex_cond({\"not_input\": \"145\"})\nassert complex_cond({ \"input\": \"244\"})\n\n\nsimple_cond = C(\"^2\")\nassert not simple_cond({\"input\": \"245\", \"output\": \"567\"})\nassert not simple_cond({\"input\": \"245\"})\nassert simple_cond(\"245\")"
  },
  {
    "objectID": "standard_library.html#structuring-objects",
    "href": "standard_library.html#structuring-objects",
    "title": "Standard Library",
    "section": "Structuring objects",
    "text": "Structuring objects\n\nsource\n\nStructureJson\n\n StructureJson (*assignments)\n\n*A class for restructuring JSON objects by nested paths This class allows restructuring JSON objects by specifying path assignments in the form ‘target_path=source_path’. It parses these assignments and creates a new JSON object with the specified structure.\nArgs: assignments: Variable number of strings specifying path assignments in the format ‘target_path=source_path’\nReturns: A new JSON object with the specified structure.*\n\nStructureJson('a.b.c=d.e.f','a.b.d=d.x')\n\nStructureJson(a.b.c=d.e.f, a.b.d=d.x)\n\n\n\nsource_obj = {'d':{'e':{'f':'foo'},'x':'bar'}}\nout = StructureJson('a.b.c=father.d.e.f','a.b.d=father.d.x')(father=source_obj)\nassert out == {'a':{'b':{'c':'foo','d':'bar'}}}"
  },
  {
    "objectID": "standard_library.html#jsonrenderer",
    "href": "standard_library.html#jsonrenderer",
    "title": "Standard Library",
    "section": "JsonRenderer",
    "text": "JsonRenderer\n\nsource\n\nJsonRenderer\n\n JsonRenderer (json_obj, **kwargs)\n\n*A class for rendering JSON objects with nested jinja2 templates.\nAllows setting template variables both during init and when calling the object.\nArgs: json_obj: A JSON object to render. **kwargs: Context variables to use in the rendering.\nReturns: A rendered JSON object.*\n\ntemplate_json = {\n    'name': '{{name}}',\n    'age': '{{age}}',\n    'city_path': '{%for city in cities%} {{city}} - {%endfor%}'\n}\n\nrend = JsonRenderer(template_json,age=30,cities=['SF','LA','NY'])\nrend\n\nJsonRenderer(missing_keys={'name'})\n\n\n\nout = rend(name='Dean')\nassert out == {'name': 'Dean', 'age': '30', 'city_path': 'SF -  LA -  NY -'},out"
  },
  {
    "objectID": "standard_library.html#export",
    "href": "standard_library.html#export",
    "title": "Standard Library",
    "section": "Export",
    "text": "Export"
  },
  {
    "objectID": "basic_diagrams.html",
    "href": "basic_diagrams.html",
    "title": "Basic Diagram Examples",
    "section": "",
    "text": "import os\nfrom ladle.diagrams import (\n    Define,\n    Scope,\n    V,\n    E,\n    draw_diagram\n)\n\nfrom ladle.core import  checkLogs\nfrom ladle.viz import draw_nx\nimport pytest\nimport asyncio"
  },
  {
    "objectID": "basic_diagrams.html#imports",
    "href": "basic_diagrams.html#imports",
    "title": "Basic Diagram Examples",
    "section": "",
    "text": "import os\nfrom ladle.diagrams import (\n    Define,\n    Scope,\n    V,\n    E,\n    draw_diagram\n)\n\nfrom ladle.core import  checkLogs\nfrom ladle.viz import draw_nx\nimport pytest\nimport asyncio"
  },
  {
    "objectID": "basic_diagrams.html#intro",
    "href": "basic_diagrams.html#intro",
    "title": "Basic Diagram Examples",
    "section": "Intro",
    "text": "Intro\nLadle diagrams are written as a graph of nodes and edges.\nThere are 3 reserved node names: * State: a node that is used to store and access state between node executions * Start: the start of the diagram * End: the end of the diagram\nThe edges can be of three types: * state: an edge from the State node to another node, used for either setting or getting part of the state * conditional: edges with a possible condition which are used for deciding which node to run next * parallel: edges that are used to run multiple nodes in parallel\nNote that each node can have multiple edges coming in and out of it. But all non state incoming edges must either be all conditional or all parallel. The same goes for outgoing edges.\nEdges can not only define the flow of the diagram, but also which part of the output of a node is passed to the input of another node.\nLets look at how to define and runa basic diagram."
  },
  {
    "objectID": "basic_diagrams.html#defining-ports-of-an-edge",
    "href": "basic_diagrams.html#defining-ports-of-an-edge",
    "title": "Basic Diagram Examples",
    "section": "Defining ports of an edge",
    "text": "Defining ports of an edge\n\n#TODO make diagram with ** port for kwarg spread\n\n\nwith Define('edge_signature') as D:\n    # we define the nodes with V\n    # Start and End are reserved node names which are automatically added to the diagram\n    # if no function is provided, the node simply passes all its inputs as a dictionary to the next node\n    V('Start')\n    V('End')\n    # we define the edges with E\n    # the edge signature is Start.output_port-&gt;End.input_port\n    # this means that the output of the Start node is passed to the input of the End node\n    E('Start-&gt;End(input_port = output_port)')\n\n    # for our convenience, exiting the Define block automatically draws the diagram\n\n# outside of the Define block,\n# we can now run the diagram\n\n# to make sure we get a fresh copy of the diagram in cases where we want have multiple instances of the same diagram\n# we can use the GetDiagram function\nd = D()\n\n# with checkLogs(name='ladle.diagrams'):\nfor trace in d.run({'output_port':1,'other_port':2}):\n    # every node that is run will return a trace object\n    # this trace object contains the input and output of the node as well as some other useful information\n    # we can use this trace to both debug the diagram \n    # and also to perform other side effects such:\n    # * as logging\n    # * writing responses back to the user\n    trace.pprint()\n\n# we access the output of the diagram via the output property\n# note that the output_port of the Start node is passed to the input_port of the End node\n# the other port is discarded\nd.output\nassert d.output == {'input_port':1}\n\n\n\n\n\n\n\n\nNode Start:\n{ 'input': {'other_port': 2, 'output_port': 1},\n  'output': {'other_port': 2, 'output_port': 1}}\n================================================================================\nNode End:\n{'input': {'input_port': 1}, 'output': {'input_port': 1}}\n================================================================================"
  },
  {
    "objectID": "basic_diagrams.html#edge-types",
    "href": "basic_diagrams.html#edge-types",
    "title": "Basic Diagram Examples",
    "section": "Edge types",
    "text": "Edge types\n\ndef plus(x,y):\n    return x+y\n\n# EXPLAIN start and end are by default\n# with checkLogs(name='__main__'):\nwith Define('multiedge',type='flow') as D:\n\n    V('plus',plus,\n        inputs=[\n        'Start(x=a,y=b)',\n        ],\n        outputs=['End']\n        )\n\n\n\n\n\n\n\n\n\nlog_file = 'log.txt'\nd=D()\nfor trace in d.run({'a':1,'b':2}):\n    trace.pprint(file=log_file)\nassert d.output == 3\n\n\n! cat log.txt\n\nos.unlink(log_file)\n\nNode Start:\n{'input': {'a': 1, 'b': 2}, 'output': {'a': 1, 'b': 2}}\n================================================================================\nNode plus:\n{'input': {'x': 1, 'y': 2}, 'output': 3}\n================================================================================\nNode End:\n{'input': {0: 3}, 'output': 3}\n================================================================================\n\n\n\nfrom time import sleep\n\ndef plus1(x):\n    return x+1\n\ndef plus2(x):\n    return x+2\n\ndef mod2(x):\n    return x%2==0\n\n\nwith Define('naive_flow',type='flow') as NaiveFlow:\n\n    V('plus1',plus1,inputs=['Start'],outputs=['End(x=.)'])\n    V('plus2',plus2,inputs=['Start'],outputs=['End(y=.)'])\n    \n\nd = NaiveFlow()\n\n\n\n\n\n\n\n\n\n# with checkLogs(name='ladle.diagrams.flow'):\ntrace_steps = []\nfor trace in d.run(1):\n        trace.pprint()\n        trace_steps.append(trace.node_name[0])\n\nassert (trace_steps ==['Start','plus1','plus2','End'] or \n        trace_steps ==['Start','plus2','plus1','End']),trace_steps\nassert d.output == {'x': 2, 'y': 3}\n\nNode Start:\n{'input': {0: 1}, 'output': 1}\n================================================================================\nNode plus1:\n{'input': {0: 1}, 'output': 2}\n================================================================================\nNode plus2:\n{'input': {0: 1}, 'output': 3}\n================================================================================\nNode End:\n{'input': {'x': 2, 'y': 3}, 'output': {'x': 2, 'y': 3}}\n================================================================================\n\n\n\nwith pytest.raises(ValueError,match='cannot have multiple output edges with no condition'):\n    with Define('naive_flow',type='decision') as NaiveFlow:\n        V('plus1',plus1,inputs=['Start'],outputs=['End(x=.)'])\n        V('plus2',plus2,inputs=['Start'],outputs=['End(y=.)'])\n\n\n\n\n\n\n\n\n\n# with checkLogs(name='ladle.diagrams.validate'):\nwith Define('edge_types',type='decision') as EdgeTypes:\n    V('Conditional_node',plus1)\n    E('Start-&gt;Conditional_node')\n    V('Option1')\n    V('Default_option')\n    # by default, all edges we define are conditional,\n    # we can specify a condition for an edge by passing a function to the cond argument\n    E('Conditional_node-&gt;Option1',cond=mod2)\n    # not passing a condition means that this edge is the default edge\n    # each node that has outgoing conditional edges must have at least one default edge\n    E('Conditional_node-&gt;Default_option')\n    # we can also define a parallel edge by passing scope='parallel' to the E function\n    V('Parallel_node1',plus1)\n    V('Parallel_node2',plus2)\n    E('Option1-&gt;Parallel_node1',type='flow')\n    E('Option1-&gt;Parallel_node2',type='flow')\n    E('Parallel_node1-&gt;Parallel_end(x=.)',type='flow')\n    E('Parallel_node2-&gt;Parallel_end(y=.)',type='flow')\n    E('Parallel_end-&gt;End(**)')\n    E('Default_option-&gt;End')\n    \n    # we can also read and write to state by using the State node in edge definitions.\n    # the port of the State node is the key of the state we would like to read from or write to\n    # the port of the node we are connecting to is the value we would like to write to the state\n    # if we want to read from the state, we can use the State.port notation\n    E('Start-&gt;state/start')\n    E('state/start-&gt;End(start_state=.)')\n\n\nd = EdgeTypes()\n\n\n\n\n\n\n\n\n\n# with checkLogs(name='ladle.diagrams.flow'):\nfor trace in d.run(1):\n    # trace.pprint()\n    pass\n\nassert d.output == {'x': 3, 'y': 4, 'start_state': 1} , d.output\n\n\n# with checkLogs(name='ladle.diagrams'):\nfor trace in d.run(0):\n    trace.pprint()\n\nassert d.output == {0:1,'start_state':0}\n\nNode Start:\n{'input': {0: 0}, 'output': 0}\n================================================================================\nNode Conditional_node:\n{'input': {0: 0}, 'output': 1}\n================================================================================\nNode Default_option:\n{'input': {0: 1}, 'output': 1}\n================================================================================\nNode End:\n{'input': {0: 1, 'start_state': 0}, 'output': {0: 1, 'start_state': 0}}\n================================================================================\n\n\n\nCustom state\n\nfrom ladle.core import NamedLambda\n\nplus1 = NamedLambda('plus1',lambda x: x+1)\n\nfrom pydantic import BaseModel,ConfigDict,computed_field\n\n# a custom state is any basemodel\nclass CustomState(BaseModel):\n    # we can allow arbitrary attributes by setting extra='allow'\n    # this is useful for defining on the fly state keys with normal behavior\n    model_config = ConfigDict(extra='allow')\n    history:list[int] = list()\n\n    def save(self,value):\n        self.history.append(value)\n\nwith Define('test1',state=CustomState) as D:\n    V('add',plus1)\n    # we can define a custom state class by passing it to the State function\n    # within the Define scope\n    E('Start-&gt;add')\n    E('add-&gt;End')\n    E('add-&gt;State/save')\n\n\n\n\n\n\n\n\n\nd=D()\nfor trace in d.run(input=1):\n    trace.pprint()\n    \nassert d.output == 2\nassert d.state.model_dump() == {'history': [2]},d.state\nassert d.finished\n\nNode Start:\n{'input': {0: 1}, 'output': 1}\n================================================================================\nNode add:\n{'input': {0: 1}, 'output': 2}\n================================================================================\nNode End:\n{'input': {0: 2}, 'output': 2}\n================================================================================\n\n\n\ndef plus1(x):\n    return x+1\n\nwith Define('test1_exp',state=CustomState) as D:\n    V('add',plus1)\n    # we can customize the state behaviour of a given state key by using the State function\n    # set_append=True means that the state value will be appended to the list of values for the given key\n    # we can also add custom getters and setters to a state key for more complex state behaviour\n    # getter is a function of the form (value)-&gt;(processed_value)\n    # setter is a function of the form (old_value,new_value)-&gt;(processed_value)\n    E('Start-&gt;add')\n    E('add-&gt;End')\n    E('add-&gt;State/save')\n\n\n\n\n\n\n\n\n\nd=D()\nfor trace in d.run(input=1):\n    trace.pprint()\nassert d.output == 2\nassert d.state.model_dump() == {'history': [2]},d.state\nassert d.finished\n\nNode Start:\n{'input': {0: 1}, 'output': 1}\n================================================================================\nNode add:\n{'input': {0: 1}, 'output': 2}\n================================================================================\nNode End:\n{'input': {0: 2}, 'output': 2}\n================================================================================\n\n\n\n\nRead State\n\ndef plus1(x):\n    return x+1\n\nwith Define('test_state_read',type='decision') as D:\n    V('add',plus1,inputs=['Start'],outputs=['End(data=.)'])\n    E('state/outside_state-&gt;End(state_data=.)')\n    \nd=D()\nwith checkLogs(name='ladle.diagrstams.flow'):\n    for trace in d.run(input=1,state={'outside_state':10}):\n        trace.pprint()\nd.output\n\n\n\n\n\n\n\n\nNode Start:\n{'input': {0: 1}, 'output': 1}\n================================================================================\nNode add:\n{'input': {0: 1}, 'output': 2}\n================================================================================\nNode End:\n{ 'input': {'data': 2, 'state_data': 10},\n  'output': {'data': 2, 'state_data': 10}}\n================================================================================\n\n\n{'data': 2, 'state_data': 10}\n\n\n\nParallel graph\n\ndef plus1(x,**kwargs):\n    return x+1\n\n# with checkLogs(name='__main__'):\nwith Define('test2',type='flow') as D:\n\n    V('add1',plus1)\n    V('add2',plus1)\n    V('Start',outputs=['add1','add2'])\n    V('prep_end',inputs=['add1(x=.)','add2(y=.)'])\n    E('prep_end-&gt;End')\n\n\n\n\n\n\n\n\n\nd = D()\nfor trace in d.run(1):\n    trace.pprint()\n\nassert d.output == {'x': 2, 'y': 2}\nassert d.finished\n\nNode Start:\n{'input': {0: 1}, 'output': 1}\n================================================================================\nNode add1:\n{'input': {0: 1}, 'output': 2}\n================================================================================\nNode add2:\n{'input': {0: 1}, 'output': 2}\n================================================================================\nNode prep_end:\n{'input': {'x': 2, 'y': 2}, 'output': {'x': 2, 'y': 2}}\n================================================================================\nNode End:\n{'input': {0: {'x': 2, 'y': 2}}, 'output': {'x': 2, 'y': 2}}\n================================================================================\n\n\n\n\n\nParallel with async functions\n\nasync def plus1async(x,**kwargs):\n    await asyncio.sleep(0.1)\n    return x+1\n\n# with checkLogs(name='__main__'):\nwith Define('test',type='flow') as D:\n\n    V('add1',plus1async)\n    V('add2',plus1async)\n    V('Start',outputs=['add1','add2'])\n    V('prepend1',inputs=['add1(x)','add2(y)'])\n    E('prepend1-&gt;End')\n\n\n\n\n\n\n\n\n\nd = D()\nfor trace in d.run(1):\n    trace.pprint()\n\nassert d.output == {'x': 2, 'y': 2}\nassert d.finished\n\nNode Start:\n{'input': {0: 1}, 'output': 1}\n================================================================================\nNode add1:\n{'input': {0: 1}, 'output': 2}\n================================================================================\nNode add2:\n{'input': {0: 1}, 'output': 2}\n================================================================================\nNode prepend1:\n{'input': {'x': 2, 'y': 2}, 'output': {'x': 2, 'y': 2}}\n================================================================================\nNode End:\n{'input': {0: {'x': 2, 'y': 2}}, 'output': {'x': 2, 'y': 2}}\n================================================================================\n\n\n\nMultiple edges from same node\n\ndef plus(x,y):\n    return x+y\n\n# EXPLAIN start and end are by default\n# with checkLogs(name='__main__'):\nwith Define('multiedge',type='flow') as D:\n\n    V('plus',plus,\n        inputs=['Start(x=a,y=b)'],\n        outputs=['End']\n        )\n\nd = D()\nfor trace in d.run({'a':1,'b':2}):\n    pass\nassert d.output == 3\n\n\n\n\n\n\n\n\n\n\n\nUnnamed ports for discarding inputs\n\ndef plus1(x):\n    return x+1\n\n# EXPLAIN start and end are by default\n\nwith Define('unnamed_ports',type='flow') as D:\n    E('Start-&gt;state/start')\n    V('plus',plus1,\n        inputs=[\n        'Start(_)',\n        'state/start(x=.)'],\n        outputs=['End']\n        )\n\ndot = draw_diagram(D,return_dot=True)\ndot.source\n\n\n\n\n\n\n\n\n'digraph unnamed_ports {\\n\\tlabel=unnamed_ports labelloc=t rankdir=TB\\n\\tnode_0 [label=Start color=\"#9370DB\" fillcolor=\"#ECECFF\" shape=box style=\"solid,filled\"]\\n\\tnode_1 [label=\"State[start]\" color=\"#9370DB\" fillcolor=\"#ECECFF\" shape=cylinder style=\"solid,filled\"]\\n\\tnode_2 [label=\"plus[ plus1 ]\" color=\"#9370DB\" fillcolor=\"#ECECFF\" shape=box style=\"solid,filled\"]\\n\\tnode_3 [label=End color=\"#9370DB\" fillcolor=\"#ECECFF\" shape=box style=\"solid,filled\"]\\n\\tnode_0 -&gt; node_1 [label=\"\" style=dashed]\\n\\tnode_1 -&gt; node_2 [label=\". -&gt; x\" style=dashed]\\n\\tnode_0 -&gt; node_2 [label=\". -&gt; _\" color=black style=solid]\\n\\tnode_2 -&gt; node_3 [color=black style=solid]\\n}\\n'\n\n\n\nd=D()\n# with checkLogs(name='ladle.diagrams.flow'):    \nfor trace in d.run(1):\n    pass\nassert d.output == 2\n\n\n\nLLM dummy functions\n\nimport re\nimport itertools\n\nclass MessageAdder():\n    def __init__(self,to_add):\n        self.to_add = to_add\n    \n    def __call__(self,**message):\n        content = message.get('content',0)\n        if isinstance(content,int):\n            new_cont = content + self.to_add\n        elif isinstance(content,str):\n            new_cont = f'{content} _ '\n        else:\n            raise ValueError(f'content {content} must be an int or a string')\n        return {'role':'adder','content':new_cont}\n    \n    def __str__(self):\n        return f'MessageAdder({self.to_add})'\n\ndef MessageSum(**kwargs):\n    sum = 0\n    for key,value in kwargs.items():\n        count = value['content']\n        if isinstance(count,int):\n            sum+=count\n    return {'role':'sum','content':sum}\n\nclass FString():\n    def __init__(self,s):\n        self.s=s\n\n    def __call__(self,**kwargs):\n        return self.s.format(**kwargs)\n\nclass CycleOptions():\n    def __init__(self,opts):\n        self.opts = opts\n        self.cycle = itertools.cycle(opts)\n    def __call__(self,*args,**kwargs):\n        if args:\n            kwargs = args[0]\n        return kwargs | {'role':'chooser','choice':next(self.cycle)}\n    \n    def __str__(self):\n        return f'''CycleOptions({\",\".join(self.opts)})'''\n\nclass is_mod():\n    def __init__(self,mod):\n        self.mod = mod\n\n    def __call__(self, x):\n        return x % self.mod == 0\n    \n    def __repr__(self):\n        return f\"is_mod({self.mod})\"\n\nclass is_eq():\n    def __init__(self,val):\n        self.val = val\n\n    def __call__(self, x):\n        return x == self.val\n    \n    def __repr__(self):\n        return f\"is_eq({self.val})\"\n\ndef concat(x,y,z):\n    return (f'{x}_{y}_{z}')\n\n\n\nself loop\n\ndef is3(x):\n    return x['content'] == 3\n\nwith Define('selfLoop',type='decision') as D:\n    V('add1',MessageAdder(1),\n        inputs=['Start(**)'],\n        outputs=[\n            ('End(**)',is3),\n            'add1(**)'\n            ])\n\n\n\n\n\n\n\n\n\nd=D()\n# with checkLogs(name='ladle.diagrams'):\nfor i,trace in enumerate(d.run(input={'role':'human','content':0})):\n    # this is how we can debug an infinite loop, have it stop after a certain number of iterations\n    if i &gt; 5: \n        break\n    trace.pprint()\n    \nassert d.output == {'role':'adder','content': 3}\nassert d.finished\n\nNode Start:\n{ 'input': {'content': 0, 'role': 'human'},\n  'output': {'content': 0, 'role': 'human'}}\n================================================================================\nNode add1:\n{ 'input': {'content': 0, 'role': 'human'},\n  'output': {'content': 1, 'role': 'adder'}}\n================================================================================\nNode add1:\n{ 'input': {'content': 1, 'role': 'adder'},\n  'output': {'content': 2, 'role': 'adder'}}\n================================================================================\nNode add1:\n{ 'input': {'content': 2, 'role': 'adder'},\n  'output': {'content': 3, 'role': 'adder'}}\n================================================================================\nNode End:\n{ 'input': {'content': 3, 'role': 'adder'},\n  'output': {'content': 3, 'role': 'adder'}}\n================================================================================\n\n\n\n\nChoosing tools\n\n#with checkLogs(name='__main__'):\n\ndef is1(x):\n    return re.match('^1$',x['choice'])!=None\ndef is10(x):\n    return re.match('^10$',x['choice'])!=None\n\nfrom typing import Any,Annotated\n\nclass CustomState(BaseModel):\n    model_config = ConfigDict(extra='allow')\n\n    mem1: Annotated[list[Any],list.append] = list()\n\n    # mem1:list[Any] = list()\n    # def add_mem1(self,value):\n    #     self.mem1.append(value)\n    \n        \nwith Define('choosing_tools',type='decision',state=CustomState) as D:\n\n    E('Start-&gt;add1(**)')\n\n    V('add1',MessageAdder(1),outputs=[\n        'choose_action(**)',\n        'state/mem1'\n        ])\n    V('add10',MessageAdder(10),outputs=[\n        'choose_action(**)',\n        'state/mem10'\n        ])\n    V('choose_action',CycleOptions(['1','10','1','10','finish']),\n        outputs=[\n            ('add1(**)',is1),\n            ('add10(**)',is10),\n            'prep_end(final_out=content)'\n            ]\n    )\n    V('prep_end',\n        inputs=[\n            'State/mem1(ones=.)',\n            'State/mem10(last_ten=.)',\n        ],\n        outputs=[\n            'End'\n        ]\n    )# an ID step\n\n\n\n\n\n\n\n\n\nd = D()\n# with checkLogs(name='ladle.diagrams'):\nfor trace in d.run({'role':'human','count':0}):\n    trace.pprint(skip_passthrough=True)\n\nassert d.output == {\n    'final_out': 23,\n    'ones': [{'role': 'adder', 'content': 1},\n            {'role': 'adder', 'content': 2},\n            {'role': 'adder', 'content': 13}],\n    'last_ten': {'role': 'adder', 'content': 23}\n    },d.output\n\nNode add1:\n{ 'input': {'count': 0, 'role': 'human'},\n  'output': {'content': 1, 'role': 'adder'}}\n================================================================================\nNode choose_action:\n{ 'input': {'content': 1, 'role': 'adder'},\n  'output': {'choice': '1', 'content': 1, 'role': 'chooser'}}\n================================================================================\nNode add1:\n{ 'input': {'choice': '1', 'content': 1, 'role': 'chooser'},\n  'output': {'content': 2, 'role': 'adder'}}\n================================================================================\nNode choose_action:\n{ 'input': {'content': 2, 'role': 'adder'},\n  'output': {'choice': '10', 'content': 2, 'role': 'chooser'}}\n================================================================================\nNode add10:\n{ 'input': {'choice': '10', 'content': 2, 'role': 'chooser'},\n  'output': {'content': 12, 'role': 'adder'}}\n================================================================================\nNode choose_action:\n{ 'input': {'content': 12, 'role': 'adder'},\n  'output': {'choice': '1', 'content': 12, 'role': 'chooser'}}\n================================================================================\nNode add1:\n{ 'input': {'choice': '1', 'content': 12, 'role': 'chooser'},\n  'output': {'content': 13, 'role': 'adder'}}\n================================================================================\nNode choose_action:\n{ 'input': {'content': 13, 'role': 'adder'},\n  'output': {'choice': '10', 'content': 13, 'role': 'chooser'}}\n================================================================================\nNode add10:\n{ 'input': {'choice': '10', 'content': 13, 'role': 'chooser'},\n  'output': {'content': 23, 'role': 'adder'}}\n================================================================================\nNode choose_action:\n{ 'input': {'content': 23, 'role': 'adder'},\n  'output': {'choice': 'finish', 'content': 23, 'role': 'chooser'}}\n================================================================================\n\n\n\n\nparallel flows\n\nwith Define('simple parallel',type='flow',direction='LR') as D:\n\n    V('add1',MessageAdder(1),outputs=['add2(**)','add10(**)'])\n    V('add2',MessageAdder(2))\n    V('add10',MessageAdder(10))\n    V('conc',concat,inputs=[\n        'Start(x=content)',\n        'add2(z=content)',\n        'add10(y=content)'\n    ])\n    V('prep_out',inputs=[\n        'State/start(start_value)',\n        'conc(concatenation)'\n    ])\n\n\n    E('Start-&gt;State/start')\n    E('Start-&gt;add1(**)')\n    E('prep_out-&gt;End')\n\n\n\n\n\n\n\n\n\nd = D()\n\n# with checkLogs(name='ladle.diagrams.flow'):\nfor trace in d.run({'role':'human','content':1}):\n    pass\n\nassert d.output == {'concatenation': '1_12_4', 'start_value': {'role': 'human', 'content': 1}},d.output\nassert d.state.model_dump() == {'start': {'role': 'human', 'content': 1}} , d.state\nd.state\n\nBaseModelExtra(start={'role': 'human', 'content': 1})\n\n\n\n\nParallel and choice\n\nwith Define('add5',draw=False) as Add5:\n    V('add',MessageAdder(5),inputs=['Start(**)'],outputs=['End(**)'])\n\nwith Define('add10',draw=False) as Add10:\n    V('add_first',Add5)\n    V('add_second',Add5)\n    E('Start-&gt;add_first(**)')\n    E('add_first-&gt;add_second(**)')\n    E('add_second-&gt;End(**)')\n\n       \nwith Define('add100',draw=False) as Add100:\n    V('add',MessageAdder(100),inputs=['Start(**)'],outputs=['End(**)'])\n\nwith Define('paralell2',type='flow') as Parallel2:\n\n    def is112(x):\n        return x['content'] == 112\n\n    V('Start',MessageAdder(1))\n    with Scope('flow'):\n        V('add10',Add10,inputs=['Start(**)'])\n        V('add100',Add100,inputs=['Start(**)'])\n        V('End',MessageSum,inputs=['add10(y)','add100(x)'])\n\n\n\n\n\n\n\n\n\nd = Parallel2()\n\n# with checkLogs(name='ladle.diagrams.flow'):\nfor trace in d.run({'role':'human','content':0}):\n   trace.pprint()\n       \nassert d.output == {'role': 'sum', 'content': 112}\n\nNode Start:\n{ 'input': {'content': 0, 'role': 'human'},\n  'output': {'content': 1, 'role': 'adder'}}\n================================================================================\nNode add100.Start:\n{ 'input': {'content': 1, 'role': 'adder'},\n  'output': {'content': 1, 'role': 'adder'}}\n================================================================================\nNode add10.Start:\n{ 'input': {'content': 1, 'role': 'adder'},\n  'output': {'content': 1, 'role': 'adder'}}\n================================================================================\nNode add100.add:\n{ 'input': {'content': 1, 'role': 'adder'},\n  'output': {'content': 101, 'role': 'adder'}}\n================================================================================\nNode add10.add_first.Start:\n{ 'input': {'content': 1, 'role': 'adder'},\n  'output': {'content': 1, 'role': 'adder'}}\n================================================================================\nNode add100.End:\n{ 'input': {'content': 101, 'role': 'adder'},\n  'output': {'content': 101, 'role': 'adder'}}\n================================================================================\nNode add100:\n{ 'input': {'content': 1, 'role': 'adder'},\n  'output': {'content': 101, 'role': 'adder'}}\n================================================================================\nNode add10.add_first.add:\n{ 'input': {'content': 1, 'role': 'adder'},\n  'output': {'content': 6, 'role': 'adder'}}\n================================================================================\nNode add10.add_first.End:\n{ 'input': {'content': 6, 'role': 'adder'},\n  'output': {'content': 6, 'role': 'adder'}}\n================================================================================\nNode add10.add_first:\n{ 'input': {'content': 1, 'role': 'adder'},\n  'output': {'content': 6, 'role': 'adder'}}\n================================================================================\nNode add10.add_second.Start:\n{ 'input': {'content': 6, 'role': 'adder'},\n  'output': {'content': 6, 'role': 'adder'}}\n================================================================================\nNode add10.add_second.add:\n{ 'input': {'content': 6, 'role': 'adder'},\n  'output': {'content': 11, 'role': 'adder'}}\n================================================================================\nNode add10.add_second.End:\n{ 'input': {'content': 11, 'role': 'adder'},\n  'output': {'content': 11, 'role': 'adder'}}\n================================================================================\nNode add10.add_second:\n{ 'input': {'content': 6, 'role': 'adder'},\n  'output': {'content': 11, 'role': 'adder'}}\n================================================================================\nNode add10.End:\n{ 'input': {'content': 11, 'role': 'adder'},\n  'output': {'content': 11, 'role': 'adder'}}\n================================================================================\nNode add10:\n{ 'input': {'content': 1, 'role': 'adder'},\n  'output': {'content': 11, 'role': 'adder'}}\n================================================================================\nNode End:\n{ 'input': { 'x': {'content': 101, 'role': 'adder'},\n             'y': {'content': 11, 'role': 'adder'}},\n  'output': {'content': 112, 'role': 'sum'}}\n================================================================================\n\n\n\nwith Define('paralell with choice',type='decision') as D:\n\n    def is112(x):\n        return x['content'] == 112\n\n    V('add1',MessageAdder(1),inputs=['Start(**)'])\n    with Scope('flow'):\n        V('add10',Add10,inputs=['add1(**)'])\n        V('add100',Add100,inputs=['add1(**)'])\n        V('sum',MessageSum,inputs=['add10(y)','add100(x)'])\n\n\n    E('sum-&gt;End')\n    E('sum-&gt;add1(**)',cond=is112)\n\n    #EXPLAIN what are legal parallel cut\n\n\n\n\n\n\n\n\n\nd = D()\n# with checkLogs(name='ladle.diagrams'):\nfor trace in d.run({'role':'human','content':0}):\n    # trace.pprint()\n    pass\n       \nassert d.output == {'role': 'sum', 'content': 336}\n\n\n\nParallel with break\n\nwith Define('add5',draw=False) as Add5:\n    V('add',MessageAdder(5),inputs=['Start(**)'],outputs=['End(**)'])\n\nwith Define('add10',draw=False) as Add10:\n    V('add_first',Add5)\n    V('add_second',Add5)\n    E('Start-&gt;add_first(**)')\n    E('add_first-&gt;add_second(**)')\n    E('add_second-&gt;End(**)')\n\n       \nwith Define('add100',draw=False) as Add100:\n    V('add',MessageAdder(100),inputs=['Start(**)'],outputs=['End(**)'])\n\n\n# with checkLogs(name=\"__main__\"):\n\nwith Define('paralell with break',type='decision') as D:\n\n    def is112(x):\n        return x['content'] == 112\n\n    V('add1',MessageAdder(1),inputs=['Start(**)'])\n    with Scope('flow'):\n        V('add10',Add10,inputs=['add1(**)'])\n        V('add100',Add100,inputs=['add1(**)'])\n        V('sum',MessageSum,inputs=['add10(y)','add100(x)'])\n\n    V('break',is_break=True)\n    E('sum-&gt;End')\n    E('sum-&gt;break',cond=is112)\n    E('break-&gt;add1(**)')\n\n\n\n\n\n\n\n\n\nd = D()\n\n\noutput = d.run_all({'role':'human','content':0})\n\nassert output == {'role': 'sum', 'content': 112}\nassert d.finished == False\n\nnew_input = {'role':'human','content':157}\noutput = d.run_all(new_input)\n\nassert output == {'role': 'sum', 'content': 426}\nassert d.finished\n\n\n\nNested breaks\n\ndef is_3(x):\n    return x['content'] == 3\n\ndef is_10(x):\n    return x['content'] == 10\n\nwith Define('inner_break',type='decision',direction='LR') as InnerD:\n    V('add',MessageAdder(0),inputs=['Start(**)'],outputs=['break'])\n    V('break',is_break=True,outputs=['add(**)',('End',is_3)])\n    \n\nwith Define('outer_break',type='decision',direction='LR') as OuterD:\n\n    V('inner',InnerD,inputs=['Start(**)'],outputs=['break'])\n    V('break',is_break=True,outputs=['inner(**)',('End',is_10)])\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nwhat we expect to happen here, is that: * We will enter the inner diagram, we wont exit it until we get a 3 * once we get a 3 we will exit the inerdiagram and hit the break on the outer diagram * we will only exit the outer diagram when we get a 10\nSo to exit, we will need to get a 3 followed by a 10\n\ninputs = [\n    {'role':'human','content':0},\n    {'role':'human','content':1},\n    {'role':'human','content':2},\n    {'role':'human','content':3}, # exit inner the first time\n    {'role':'human','content':5}, # go to outer and then to inner again\n    {'role':'human','content':10}, # 10 wont get us out of the inner diagram\n    {'role':'human','content':3}, # exit inner the second time\n    {'role':'human','content':10}, # 10 will get us out of the outer diagram\n]\nouter_d = OuterD()\nwhile True:\n    input = inputs.pop(0)\n    for trace in outer_d.run(input):\n        print(f'{trace.node_name[0]:&lt;16} == {trace.input_}')\n    if outer_d.finished:\n        break\n\nassert outer_d.output == {'role': 'human', 'content': 10}\nassert inputs == []\n\nStart            == {'role': 'human', 'content': 0}\ninner            == {'role': 'human', 'content': 0}\ninner            == {'role': 'human', 'content': 0}\ninner            == {'role': 'human', 'content': 1}\ninner            == {'role': 'human', 'content': 1}\ninner            == {'role': 'human', 'content': 2}\ninner            == {'role': 'human', 'content': 2}\ninner            == {'role': 'human', 'content': 3}\ninner            == {0: {'role': 'human', 'content': 3}}\ninner            == {'role': 'human', 'content': 3}\nbreak            == {'role': 'human', 'content': 5}\ninner            == {'role': 'human', 'content': 5}\ninner            == {'role': 'human', 'content': 5}\ninner            == {'role': 'human', 'content': 10}\ninner            == {'role': 'human', 'content': 10}\ninner            == {'role': 'human', 'content': 3}\ninner            == {0: {'role': 'human', 'content': 3}}\ninner            == {'role': 'human', 'content': 3}\nbreak            == {'role': 'human', 'content': 10}\nEnd              == {0: {'role': 'human', 'content': 10}}\n\n\n\n\nCant break inside parallel\n\nwith pytest.raises(ValueError,match='Breakpoints are not allowed in a Flow diagram'):\n    with Define('simple parallel',type='flow') as d:\n\n        V('add1',MessageAdder(1))\n        V('add2',InnerD)\n        V('add10',MessageAdder(10))\n        V('conc',concat)\n        V('prep_out')\n\n\n        E('Start-&gt;State/start')\n        E('Start-&gt;conc(x=concatenation)')\n        E('Start-&gt;add1')\n        E('add1-&gt;add10')\n        E('add1-&gt;add2')\n        E('add10-&gt;conc(y=concatenation)')\n        E('add2-&gt;conc(z=concatenation)')\n        E('conc-&gt;prep_out(concatenation=concatenation)')\n        E('State/start-&gt;prep_out(start_value=start)')\n        E('prep_out-&gt;End')\n\n\n\n\n\n\n\n\n\n\nFar ancestor writing to state\n\nfrom itertools import pairwise\n\n\nclass CustomState(BaseModel):\n    model_config = ConfigDict(extra='allow')\n\n    history: Annotated[list[Any],list.append] = list()\n\nwith Define('far ancestor writing to state',type='flow',state=CustomState) as D:\n    a = MessageAdder(0)\n\n    for u in ['a','b','c']:\n        V(u,a)\n        E(f'{u}-&gt;state/history')\n\n    for u,v in pairwise(['Start','a','b','c','End']):\n        E(f'{u}-&gt;{v}(**)')\n\n\n\n\n\n\n\n\n\n# with checkLogs(name='__main__'):\nd=D()\nfor trace in d.run({'role':'human','content':0}):\n    pass\nassert d.state.model_dump() == {'history': [{'role': 'adder', 'content': 0},\n                               {'role': 'adder', 'content': 0},\n                               {'role': 'adder', 'content': 0}]}\n\n\n\nInitialising state\n\ndef plus(x,y):\n    return x+y\n\nwith Define('init_state_no_clash',type='decision') as NoClash:\n    \n    V('add1',plus,\n        inputs=['Start(x)','State/init(y)'],\n        outputs=['State/first_sum']\n        )\n\n    V('break',is_break=True,inputs=['add1(x)'])\n\n    V('add2',plus,\n        inputs=['break(x)','State/first_sum(y)'],\n        outputs=['End']\n        )\n\n\n\n\n\n\n\n\n\ninputs = [\n    10,\n    100\n]\n\noutputs = []\nd=NoClash()\nwhile True:\n    # note that the init state is preserved between runs\n    for trace in d.run(input=inputs.pop(0),state={'init':1000}):\n        pass\n    outputs.append(d.output)\n    if d.finished:\n        break\n\nassert outputs == [1010,1110],outputs\n\n\ndef plus(x,y):\n    return x+y\n\nclass StateRequiresInit(BaseModel):\n    init : int\n\nwith Define('init_state_with_clash',type='decision',state=StateRequiresInit) as D:\n    \n    V('add1',plus,\n        inputs=['Start(x)','State/init(y)'],\n        outputs=['State/init']\n        )\n\n    V('break',is_break=True,inputs=['add1(x)'])\n\n    V('add2',plus,\n        inputs=['break(x)','State/init(y)'],\n        outputs=['End']\n        )\n\n\n\n\n\n\n\n\n\ninputs = [\n    10,\n    100\n]\noutputs = []\nd=D()\nwhile True:\n    # note that the internal state overides the state given to the run method\n    # that is why after the breakpoint, state.init is 1010 and not 1000\n    for trace in d.run(input=inputs.pop(0),state={'init':1000}):\n        pass\n    outputs.append(d.output)\n    if d.finished:\n        break\n\nassert outputs == [1010,1110],outputs\n\n\n# make sure that two calls to the Same D dont share state\nd=D()\noutputs = []\n\nfor trace in d.run(input=10,state={'init':1000}):\n    pass\noutputs.append(d.output)\n\nfor trace in d.run(input=100):\n    pass\noutputs.append(d.output)\n\n\nassert d.finished\nassert outputs == [1010,1110],outputs\n\n\n\nMissing input state\n\nd = NoClash()\nwith pytest.raises(AttributeError,match='''object has no attribute '''):\n# # with checkLogs(name='ladle.diagrams'):\n    for trace in d.run(input=10):\n        pass"
  },
  {
    "objectID": "basic_diagrams.html#stateful-nodes-and-serialization",
    "href": "basic_diagrams.html#stateful-nodes-and-serialization",
    "title": "Basic Diagram Examples",
    "section": "Stateful nodes and Serialization",
    "text": "Stateful nodes and Serialization\n\nclass MessageCounter():\n    def __init__(self):\n        self.history = []\n    def __call__(self,message):\n        self.history.append(message['content'])\n        return {'role':'counter','content':str(self.history)}\n    def __str__(self):\n        return f'MessageCounter({self.history})'\n\n    def __repr__(self):\n        return f'&lt;at #{id(self)}&gt;{self.__str__()}'\n\n    def reset(self):\n        self.history = []\n\n    def dump_state(self):\n        return self.history\n\n    def load_state(self,state_object):\n        self.history = state_object\n\n\nclass CustomState(BaseModel):\n    timer:int\n    counter_outputs: Annotated[list[Any],list.append] = list()\n\n    def count_down(self,value):\n        self.timer = max(0,self.timer-1)\n        return self.timer\n\ndef is_timeout(x):\n    return x['timer'] == 'TimerOut'\n\nwith Define('stateful_adder',type='decision',state=CustomState) as StateFulAdder:\n    V('router',\n        inputs=['Start(message)','state/timer(timer)'],\n        outputs=['adder(message=message)']\n        )\n    E('router-&gt;End',cond=is_timeout)\n    V('adder',MessageCounter(),\n        outputs=['state/counter_outputs','state/count_down'])\n    V('break',is_break=True,inputs=['adder'],outputs=['router(message)'])\n\n\n\n\n\n\n\n\n\n# make 2 copies of the diagram\ncopy1 = StateFulAdder()\ncopy2 = StateFulAdder()\n\n# run copy1\nfor trace in copy1.run({'role':'human','content':1},state={'timer':4}):\n    pass\nassert copy1.output == {'role':'counter','content':'[1]'},copy1.output\nassert copy1.finished == False\n\n# make sure copy2 didnt change\nassert copy2.finished == None\nassert copy2.state == None\n\n\n# load the state from copy1 into copy2\nsaved_state = copy1.dump_state()\ncopy2.load_state(saved_state)\n\n# check copy2 has the same output as copy1\nassert copy2.output == copy1.output\nassert copy2.finished == copy1.finished\n\n\n# Continue copy1 and copy2 with different inputs\n# note that we dont need to pass the state again, it is preserved from the copy1 run\n\nres1 = copy1.run_all({'role':'human','content':2})\nres2 = copy2.run_all({'role':'human','content':3})\n\n\n# make sure we got different outputs\nassert res1 == {'role': 'counter', 'content': '[1, 2]'}, res1\nassert res2 == {'role': 'counter', 'content': '[1, 3]'}, res2"
  },
  {
    "objectID": "basic_diagrams.html#conflicting-ports",
    "href": "basic_diagrams.html#conflicting-ports",
    "title": "Basic Diagram Examples",
    "section": "Conflicting ports",
    "text": "Conflicting ports\n\nwith pytest.raises(ValueError,match='has conflicting input ports') as e:\n    with Define('conflicting_ports',type='decision') as d:\n        V('Conditional_node',plus1)\n        E('Start-&gt;Conditional_node')\n        V('Option1')\n        V('Default_option')\n        # by default, all edges we define are conditional,\n        # we can specify a condition for an edge by passing a function to the cond argument\n        E('Conditional_node-&gt;Option1',cond=mod2)\n        # not passing a condition means that this edge is the default edge\n        # each node that has outgoing conditional edges must have at least one default edge\n        E('Conditional_node-&gt;Default_option')\n        # we can also define a flow edge by passing scope='flow' to the E function\n        V('Parallel_node1',plus1)\n        V('Parallel_node2',plus2)\n        E('Option1-&gt;Parallel_node1',type='flow')\n        E('Option1-&gt;Parallel_node2',type='flow')\n        E('Parallel_node1-&gt;Parallel_end',type='flow')\n        E('Parallel_node2-&gt;Parallel_end',type='flow')\n        E('Parallel_end-&gt;End')\n        E('Default_option-&gt;End')\n        \n        # we can also read and write to state by using the State node in edge definitions.\n        # the port of the State node is the key of the state we would like to read from or write to\n        # the port of the node we are connecting to is the value we would like to write to the state\n        # if we want to read from the state, we can use the State.port notation\n        E('Start-&gt;State/start')\n        E('State/start-&gt;End(start_state)')\n\n\nprint(e.value.args[0])\n\n\n\n\n\n\n\n\nNode Parallel_end has conflicting input ports '[0]'\nbetween its father nodes and/or state {'input_state_ports': [], 'Parallel_node1': [0], 'Parallel_node2': [0]}"
  },
  {
    "objectID": "basic_diagrams.html#exception-during-condition",
    "href": "basic_diagrams.html#exception-during-condition",
    "title": "Basic Diagram Examples",
    "section": "Exception during condition",
    "text": "Exception during condition\n\nwith Define('selfLoop',type='decision') as D:\n\n    def is12(x):\n        return x['content'] == 12\n    def istoobig(x):\n        return x['shmontest'] &gt; 12\n    def zeroup (x):\n        x['content'] = 0\n        return x\n    V('too_big')\n    V('adder',MessageAdder(4),\n        inputs=['Start(**)','too_big(**)'],\n        outputs=[\n            ('End',is12),\n            ('too_big(**)',istoobig),\n            'adder(**)'\n            ])\n    V('too_big',zeroup)\nd=D()\nwith pytest.raises(ValueError,match='When choosing next node after adder') as e:\n    for i,trace in enumerate(d.run(input={'role':'human','content':0})):\n        pass\n    \nprint(e.value.args[0])\n\n\n\n\n\n\n\n\nWhen choosing next node after adder:\nCondition function &lt;function istoobig&gt;({'role': 'adder', 'content': 4}) returned \nKeyError:''shmontest''\n\n\n\ndefining conditional edges after node definition\n\nwith pytest.raises(ValueError,match='Edge to_big-&gt;adder already exists') as e:\n    with Define('selfLoop',type='decision') as D:\n\n        def is12(x):\n            return x['content'] == 12\n        def istobig(x):\n            return x['content'] &gt; 12\n        def zeroup (x):\n            return {0: ('adder', 0)}\n        V('to_big')\n        V('adder',MessageAdder(4),\n            inputs=['Start','to_big'],\n            outputs=[\n                ('End',is12),\n                ('to_big',istobig),\n                'adder'\n                ])\n        E('to_big-&gt;adder', lambda x: zeroup(x['content']))\n\nprint(e.value.args[0])\n\nWhen adding edge 'to_big-&gt;adder' with condition &lt;function &lt;lambda&gt;&gt;, type None and edge_data {'edge_type': 'edge', 'mapping': {0: ('.',)}}\n\nOriginal error: Edge to_big-&gt;adder already exists, edge: to_big-&gt;adder"
  },
  {
    "objectID": "basic_diagrams.html#batch-processing",
    "href": "basic_diagrams.html#batch-processing",
    "title": "Basic Diagram Examples",
    "section": "Batch processing",
    "text": "Batch processing\nRegular batch processing\n\nimport time\nimport asyncio\n\nclass MakeItems:\n    def __init__(self,num_items,delta,sleep):\n        self.num_items = num_items\n        self.delta = delta\n        self.sleep = sleep\n    def __call__(self,x):\n        time.sleep(self.sleep)\n        return [x+i*self.delta for i in range(self.num_items)]\n\n    def __str__(self):\n        return f'MakeItems(num_items={self.num_items},delta={self.delta},sleep={self.sleep})'\n\nclass MakeItemsAsync:\n    def __init__(self,num_items,delta,sleep):\n        self.num_items = num_items\n        self.delta = delta\n        self.sleep = sleep\n    async def __call__(self,x):\n        await asyncio.sleep(self.sleep)\n        return [x+i*self.delta for i in range(self.num_items)]\n    def __str__(self):\n        return f'MakeItemsAsync(num_items={self.num_items},delta={self.delta},sleep={self.sleep})'\n\n\ndef add_to_arr(arr,x):\n    return [a+x for a in arr]\n\ndef plus(x,y):\n    return x+y\n\ndef sort(arr):\n    return sorted(arr)\n\nasync def asort(arr):\n    return sorted(arr)\n\n\nwith Define('batch_processing_sync',type='flow') as D:\n    V('make_items',MakeItems(3,delta = 1,sleep = 0.1),inputs=['Start'])\n    V('more_items',MakeItems(3,delta = 10,sleep = 0.1),\n        for_each=['x'],\n        inputs=['make_items(x)'],\n        outputs=['End'], flat=True\n        )\n    V('End',sort)\n\n\n\n\n\n\n\n\n\n# with  checkLogs(name='ladle.diagrams.flow'):\nd=D()\nfor trace in d.run(0):\n    trace.pprint()\n\nassert d.output == [0, 1, 2, 10, 11, 12, 20, 21, 22]\n\nNode Start:\n{'input': {0: 0}, 'output': 0}\n================================================================================\nNode make_items:\n{'input': {0: 0}, 'output': [0, 1, 2]}\n================================================================================\nNode more_items[2]:\n{'input': {'x': 2}, 'output': [2, 12, 22]}\n================================================================================\nNode more_items[1]:\n{'input': {'x': 1}, 'output': [1, 11, 21]}\n================================================================================\nNode more_items[0]:\n{'input': {'x': 0}, 'output': [0, 10, 20]}\n================================================================================\nNode End:\n{ 'input': {0: [2, 12, 22, 1, 11, 21, 0, 10, 20]},\n  'output': [0, 1, 2, 10, 11, 12, 20, 21, 22]}\n================================================================================\n\n\n\nBatch processing with async functions\n\nwith Define('batch_processing_async',type='flow') as D:\n    V('make_items',MakeItemsAsync(3,delta = 1,sleep = 0.1),inputs=['Start'])\n    V('more_items',MakeItemsAsync(3,delta = 10,sleep = 0.1),\n        for_each=['x'],\n        inputs=['make_items(x)'],\n        outputs=['End'], flat=True\n        )\n    V('End',asort)\n\n\n\n\n\n\n\n\n\n# with  checkLogs(name='ladle.diagrams.flow'):\nd=D()\nfor trace in d.run(0):\n    trace.pprint()\n\nassert d.output == [0, 1, 2, 10, 11, 12, 20, 21, 22]\n\nNode Start:\n{'input': {0: 0}, 'output': 0}\n================================================================================\nNode make_items:\n{'input': {0: 0}, 'output': [0, 1, 2]}\n================================================================================\nNode more_items[0]:\n{'input': {'x': 0}, 'output': [0, 10, 20]}\n================================================================================\nNode more_items[1]:\n{'input': {'x': 1}, 'output': [1, 11, 21]}\n================================================================================\nNode more_items[2]:\n{'input': {'x': 2}, 'output': [2, 12, 22]}\n================================================================================\nNode End:\n{ 'input': {0: [0, 10, 20, 1, 11, 21, 2, 12, 22]},\n  'output': [0, 1, 2, 10, 11, 12, 20, 21, 22]}\n================================================================================\n\n\n\nimport time\nimport asyncio\n\nclass MakeItems:\n    def __init__(self,num_items,delta,sleep):\n        self.num_items = num_items\n        self.delta = delta\n        self.sleep = sleep\n    def __call__(self,x):\n        time.sleep(self.sleep)\n        return [x+i*self.delta for i in range(self.num_items)]\n\n    def __str__(self):\n        return f'MakeItems(num_items={self.num_items},delta={self.delta},sleep={self.sleep})'\n\nclass MakeItemsAsync:\n    def __init__(self,num_items,delta,sleep):\n        self.num_items = num_items\n        self.delta = delta\n        self.sleep = sleep\n    async def __call__(self,x):\n        await asyncio.sleep(self.sleep)\n        return [x+i*self.delta for i in range(self.num_items)]\n    def __str__(self):\n        return f'MakeItemsAsync(num_items={self.num_items},delta={self.delta},sleep={self.sleep})'\n\n\ndef sum_all(*arr):\n    return sum(arr)\n\ndef add_to_arr(arr,x):\n    return [a+x for a in arr]\n\ndef plus(x,y):\n    return x+y\n\ndef sort(arr):\n    return sorted(arr)\n\nasync def asort(arr):\n    return sorted(arr)\n\ndef concat(arr1,arr2):\n    return arr1+arr2\n\n\n\nCartesian product of input streams\n\nwith Define('batch_processing_sleep_product',type='flow',direction='LR') as D:\n    V('one',MakeItemsAsync(2,1,sleep=0.05),inputs=['Start(0=1)'])\n    V('two',MakeItemsAsync(2,100,sleep=0.10),inputs=['Start(0=2)'])\n    V('three',MakeItemsAsync(2,10000,sleep=0.2),inputs=['Start(0=3)'])\n    V('sum',sum_all,inputs=['one(0)','two(1)','three(2)'],for_each=[0,1,2])\n    V('End',sort,inputs=['sum'])\n\n\n\n\n\n\n\n\n\nd=D()\nfor trace in d.run({1:10,2:1000,3:100000}):\n    # trace.pprint()\n    pass\n\nassert d.output == [101010, 101011, 101110, 101111, 111010, 111011, 111110, 111111]"
  },
  {
    "objectID": "basic_diagrams.html#using-for_each-with-both-stream-and-non-stream-inputs",
    "href": "basic_diagrams.html#using-for_each-with-both-stream-and-non-stream-inputs",
    "title": "Basic Diagram Examples",
    "section": "Using for_each with both stream and non stream inputs",
    "text": "Using for_each with both stream and non stream inputs\n\nwith Define('batch_processing_comb',type='flow') as D:\n    V('non_stream_first',add_to_arr,inputs=['Start(arr)','State/x(x)'])\n    V('stream_first',MakeItemsAsync(3,10,sleep=0.05),inputs=['Start(x)'],for_each=['x'],flat=True)\n\n    V('non_stream_second',add_to_arr,inputs=['non_stream_first(_)','stream_first(arr)','State/y(x)'])\n    V('stream_second',add_to_arr,inputs=['stream_first(x)','non_stream_first(arr)'],for_each=['x'],flat=True)\n\n    V('Concat',concat,inputs=['non_stream_second(0)','stream_second(1)'])\n    V('End',sort,inputs=['Concat'])\n\n\n\n\n\n\n\n\n\n# with checkLogs(name='ladle.diagrams.flow'):\nd=D()\nfor trace in d.run([0],state={'x':100,'y':1000}):\n    trace.pprint()\n\nassert d.output == [100, 110, 120, 1000, 1010, 1020]\n\nNode Start:\n{'input': {0: [0]}, 'output': [0]}\n================================================================================\nNode non_stream_first:\n{'input': {'arr': [0], 'x': 100}, 'output': [100]}\n================================================================================\nNode stream_first[0]:\n{'input': {'x': 0}, 'output': [0, 10, 20]}\n================================================================================\nNode stream_second[0]:\n{'input': {'arr': [100], 'x': 0}, 'output': [100]}\n================================================================================\nNode non_stream_second:\n{'input': {'arr': [0, 10, 20], 'x': 1000}, 'output': [1000, 1010, 1020]}\n================================================================================\nNode stream_second[1]:\n{'input': {'arr': [100], 'x': 10}, 'output': [110]}\n================================================================================\nNode stream_second[2]:\n{'input': {'arr': [100], 'x': 20}, 'output': [120]}\n================================================================================\nNode Concat:\n{ 'input': {0: [1000, 1010, 1020], 1: [100, 110, 120]},\n  'output': [1000, 1010, 1020, 100, 110, 120]}\n================================================================================\nNode End:\n{ 'input': {0: [1000, 1010, 1020, 100, 110, 120]},\n  'output': [100, 110, 120, 1000, 1010, 1020]}\n================================================================================"
  },
  {
    "objectID": "basic_diagrams.html#nested-diagrams-in-foreach",
    "href": "basic_diagrams.html#nested-diagrams-in-foreach",
    "title": "Basic Diagram Examples",
    "section": "Nested diagrams in foreach",
    "text": "Nested diagrams in foreach\n\nasync def add_sleep(x):\n    await asyncio.sleep(0.1)\n    return x+1\n\n\nwith Define('async_adder')as AsyncAdd:\n    V('add',add_sleep,inputs=['Start(x=x)'],outputs=['End'])\n\nasync_add=AsyncAdd()\nfor trace in async_add.run({'x':0}):\n    trace.pprint()\n\n\n\n\n\n\n\n\nNode Start:\n{'input': {'x': 0}, 'output': {'x': 0}}\n================================================================================\nNode add:\n{'input': {'x': 0}, 'output': 1}\n================================================================================\nNode End:\n{'input': {0: 1}, 'output': 1}\n================================================================================\n\n\n\nwith Define('nested_foreach',type='flow') as D:\n    V('generate',MakeItemsAsync(3,10,sleep=0.05),inputs=['Start(**)'])\n    V('add',AsyncAdd,inputs=['generate(x=.)'],for_each=['x'])\n    V('End',sort,inputs=['add'])\n\n\n\n\n\n\n\n\n\nd=D()\nfor trace in d.run({'x':0}):\n    trace.pprint()\nassert d.output == [1, 11, 21]\n\nNode Start:\n{'input': {'x': 0}, 'output': {'x': 0}}\n================================================================================\nNode generate:\n{'input': {'x': 0}, 'output': [0, 10, 20]}\n================================================================================\nNode add[0].Start:\n{'input': {'x': 0}, 'output': {'x': 0}}\n================================================================================\nNode add[2].Start:\n{'input': {'x': 20}, 'output': {'x': 20}}\n================================================================================\nNode add[1].Start:\n{'input': {'x': 10}, 'output': {'x': 10}}\n================================================================================\nNode add[0].add:\n{'input': {'x': 0}, 'output': 1}\n================================================================================\nNode add[2].add:\n{'input': {'x': 20}, 'output': 21}\n================================================================================\nNode add[1].add:\n{'input': {'x': 10}, 'output': 11}\n================================================================================\nNode add[0].End:\n{'input': {0: 1}, 'output': 1}\n================================================================================\nNode add[2].End:\n{'input': {0: 21}, 'output': 21}\n================================================================================\nNode add[1].End:\n{'input': {0: 11}, 'output': 11}\n================================================================================\nNode add[0]:\n{'input': {'x': 0}, 'output': 1}\n================================================================================\nNode add[1]:\n{'input': {'x': 10}, 'output': 11}\n================================================================================\nNode add[2]:\n{'input': {'x': 20}, 'output': 21}\n================================================================================\nNode End:\n{'input': {0: [1, 11, 21]}, 'output': [1, 11, 21]}\n================================================================================"
  },
  {
    "objectID": "basic_diagrams.html#text-splitting",
    "href": "basic_diagrams.html#text-splitting",
    "title": "Basic Diagram Examples",
    "section": "Text splitting",
    "text": "Text splitting\n\nsample_doc = {'text':\"\"\"\nThe elephant is one of the most remarkable creatures on Earth. Known for their intelligence and complex social structures, elephants form deep family bonds that can last a lifetime. These gentle giants possess remarkable memory capabilities and demonstrate emotional behaviors like mourning their dead. Their distinctive trunks, containing over 40,000 muscles, serve multiple purposes from gathering food to expressing affection.\n\nThe arctic fox is a fascinating animal that has adapted perfectly to life in the extreme cold. During winter, its thick white fur provides both insulation and camouflage in the snowy landscape, while in summer its coat turns brownish-gray to blend with the tundra. These resourceful predators can survive temperatures as low as -50°C (-58°F) and will travel vast distances across the Arctic ice in search of food, often following polar bears to scavenge their leftovers.\n\nThe octopus stands out as one of the ocean's most intelligent invertebrates. With nine brains (one central brain and eight additional ones in each arm), these cephalopods can solve complex puzzles, open jars, and even use tools. Their remarkable ability to change both color and texture allows them to perfectly mimic their surroundings, making them masters of disguise. Despite their impressive capabilities, most octopus species live only 1-2 years, making their intelligence even more remarkable given their short lifespan.\n\"\"\",\n'id':'animal_book'\n}\n\n\ndef splitter(doc):\n    doc_id = doc['id']\n    text = doc['text']\n    return [{'text':chunk.strip(),'id':f'{doc_id}_{i}'} for i,chunk in enumerate(text.split('\\n\\n'))]\n\n\ndef summarizer(text):\n    return text[:20]\n\n\nwith Define('Distilation Rag Uploader',type='flow') as D:\n    V('split_texts',splitter,inputs=['Start(doc=.)'],for_each=['doc'],flat=True)\n    V('summarize_texts',summarizer,inputs=['split_texts(text=text)'],for_each=['text'])\n    V('End',sort,inputs=['summarize_texts'])\n\n\n\n\n\n\n\n\n\nd = D()\nfor trace in d.run([sample_doc]):\n    # trace.pprint()\n    pass\n\nassert d.output == ['The arctic fox is a ', 'The elephant is one ', 'The octopus stands o'],d.output"
  },
  {
    "objectID": "basic_diagrams.html#export",
    "href": "basic_diagrams.html#export",
    "title": "Basic Diagram Examples",
    "section": "Export",
    "text": "Export\n\n# TODO\n# for trace in d.run({'pdfs':['path/to/pdf.pdf','path/to/pdf2.pdf']}):\n#     # TODO make pprint to log\n#     # make progress bars for parallel pipelines with multiple items\n#         # see this https://stackoverflow.com/a/78127892\n#     trace.to_logger()\n\n\n#TODO make sure nested objects in the input,output are also pprinted (ie data classes with alot of field)"
  },
  {
    "objectID": "object_mappings.html",
    "href": "object_mappings.html",
    "title": "Object mappings",
    "section": "",
    "text": "import asyncio\n# ! pip install nest_asyncio"
  },
  {
    "objectID": "object_mappings.html#imports",
    "href": "object_mappings.html#imports",
    "title": "Object mappings",
    "section": "",
    "text": "import asyncio\n# ! pip install nest_asyncio"
  },
  {
    "objectID": "object_mappings.html#accessing-nested-objects",
    "href": "object_mappings.html#accessing-nested-objects",
    "title": "Object mappings",
    "section": "Accessing nested objects",
    "text": "Accessing nested objects\n\nsource\n\naccess_object\n\n access_object (obj, attr_path, missing_ok=False)\n\n*Access an attribute or item of an object, using a path of attribute/item names.\nArgs: obj: The object to access attr_path: A string or tuple/list of strings representing the path to the attribute/item missing_ok: If True, return None if the attribute/item is not found*\n\n\nTests\n\n# Test access_object function\ntest_dict = {\n    'a': {\n        'b': {\n            'c': 1\n        }\n    },\n    'list': [1, 2, 3],\n    'mixed': {\n        'list': [{'x': 1}, {'x': 2}]\n    }\n}\n\nclass TestObj:\n    def __init__(self):\n        self.x = 1\n        self.y = {'z': 2}\n\ntest_obj = TestObj()\n\n# Test dictionary access\nassert access_object(test_dict, ('a', 'b', 'c')) == 1\n\n# Test list access\nassert access_object(test_dict, ['list', 1]) == 2\n\n# Test mixed nested access\nassert access_object(test_dict, ['mixed', 'list', 0, 'x']) == 1\n\n# Test object attribute access\nassert access_object(test_obj, 'x') == 1\nassert access_object(test_obj, ('y','z')) == 2\n\n# Test missing_ok parameter\nassert access_object(test_dict, 'missing', missing_ok=True) is None\nassert access_object(test_dict, 'a.missing', missing_ok=True) is None\n\n# Test error cases\nwith pytest.raises(ValueError, match=\"Invalid attribute path\"):\n    access_object(test_dict, 123)\n\nwith pytest.raises(ValueError, match=\"attribute 'missing' is not a valid attribute\"):\n    access_object(test_dict, 'missing', missing_ok=False)\n\nwith pytest.raises(ValueError, match=\"attribute 'a.missing' is not a valid attribute\"):\n    access_object(test_dict, 'a.missing', missing_ok=False)\n\n\n# Test access_object function\ntest_dict = {\n    'a': {\n        'b': {\n            'c': 1\n        }\n    },\n    'list': [1, 2, 3],\n    'mixed': {\n        'list': [{'x': 1}, {'x': 2}]\n    }\n}\n\nclass TestObj:\n    def __init__(self):\n        self.x = 1\n        self.y = {'z': 2}\n        self.d = {'a': 3}\n\ntest_obj = TestObj()\n\n# Test ** syntax for getting all attributes/items\nassert access_object(test_dict, '**') == test_dict\nassert access_object(test_obj, '**') == {'x': 1, 'y': {'z': 2}, 'd': {'a': 3}}\n\n# Test . syntax for accessing current object\nassert access_object(test_dict, '.') == test_dict\nassert access_object(test_obj, '.') == test_obj\n\n# Test combining . and ** \nassert access_object(test_obj, ('.', '**')) == {'x': 1, 'y': {'z': 2}, 'd': {'a': 3}}\n\n\nfrom pydantic import BaseModel\n\n\nclass TestModel(BaseModel):\n    x: int\n    d: dict[str,int]\n\ntest_model = TestModel(x=1,d={'a':2})\nassert access_object(test_model, '**') == {'x': 1, 'd': {'a': 2}}\n\nnested_model = {\n    'foo': 'bar',\n    'mod':test_model\n}\nassert access_object(nested_model, ('mod','x')) == 1"
  },
  {
    "objectID": "object_mappings.html#set-access",
    "href": "object_mappings.html#set-access",
    "title": "Object mappings",
    "section": "Set access",
    "text": "Set access\n\nsource\n\nset_access\n\n set_access (obj, attr_path, value)\n\n*set an attribute or item of an object, using a path of attribute/item names.\nArgs: obj: The object to set attr_path: A string or tuple/list of strings representing the path to the attribute/item value: The value to set*\n\n\nTests\n\nobj = {'a':1,'b':2,'c':{'d':3,'e':4}}\nset_access(obj,('c','f','g'),5)\nassert obj == {'a': 1, 'b': 2, 'c': {'d': 3, 'e': 4, 'f': {'g': 5}}}"
  },
  {
    "objectID": "object_mappings.html#mapping-dicts-utilities",
    "href": "object_mappings.html#mapping-dicts-utilities",
    "title": "Object mappings",
    "section": "mapping dicts utilities",
    "text": "mapping dicts utilities\n\nsource\n\nassert_keys_contiguous\n\n assert_keys_contiguous (list_of_keys)\n\n\ninput_ = {'x':1,\n        'y':2,'z':3\n        }.keys()\nassert assert_keys_contiguous(input_)\n\n\ninput_ = {0:1,\n        1:2,'z':3\n        }.keys()\nassert assert_keys_contiguous(input_)\n\ninput_ = {0:1,\n        2:2,'z':3\n        }.keys()\nassert not assert_keys_contiguous(input_)\n\n\nsource\n\n\nobject_to_args_kwargs\n\n object_to_args_kwargs (input)\n\n\ninput_ = {0:1,\n        2:2,'z':3\n        }\nargs,kwargs = object_to_args_kwargs(input_)\nassert args == [1,2]\nassert kwargs == {'z':3}"
  },
  {
    "objectID": "object_mappings.html#mapping-objects",
    "href": "object_mappings.html#mapping-objects",
    "title": "Object mappings",
    "section": "Mapping objects",
    "text": "Mapping objects\n\nsource\n\nmap_object\n\n map_object (obj, mapping)\n\n*Map an object according to a mapping.\nArgs: obj: The object to map mapping: A mapping of the form {key: accessor} Returns: A dict with the mapped values*\n\nobj = {'a':1,'b':2,'c':{'d':3,'e':4}}\nmapping = {'x':'a','y':'.','z':('c','d'),'**':'**'}\nmapped_dict = map_object(obj,mapping)\nassert mapped_dict == {'x': 1,\n 'y': {'a': 1, 'b': 2, 'c': {'d': 3, 'e': 4}},\n 'z': 3,\n 'a': 1,\n 'b': 2,\n 'c': {'d': 3, 'e': 4}}\n\n\nsource\n\n\nappend_dicts\n\n append_dicts (dict_list:list[dict])\n\n*Combine multiple dictionaries with the same keys into a single dictionary where each value is a list.\nArgs: dict_list: List of dictionaries with the same keys\nReturns: A dictionary where each key maps to a list of values from the input dictionaries\nExample: &gt;&gt;&gt; dicts = [{‘a’: 1, ‘b’: 2}, {‘a’: 3, ‘b’: 4}] &gt;&gt;&gt; append_dicts(dicts) {‘a’: [1, 3], ‘b’: [2, 4]}*\n\nsource\n\n\nmulti_map\n\n multi_map (obj_dict, mappings_dict, as_list_keys=None)\n\n*Map a dictionary of objects according to a dictionary of mappings.\nArgs: obj_dict: A dictionary of objects to map {obj_name:obj} mappings_dict: A dictionary of mappings of the form {mapping_name:mapping} Returns: A dictionary that is the union of the mapped objects {obj_name:mapped_obj} If a key is present in multiple mappings, the value from the last mapping will be used. If an obj referenced in the mapping dict is not found in the obj_dict, it will be skipped.*\n\nobjects = {'obj1':{'a':1,'b':2,'c':{'d':3,'e':4}}}\nmappings = {'obj1':{'x':'a','y':'b','z':('c','d'),'**':'**'}}\nassert multi_map(objects,mappings) == {'x': 1, 'y': 2, 'z': 3, 'a': 1, 'b': 2, 'c': {'d': 3, 'e': 4}}\n\n\nobjects = {'obj1':{'a':1,'b':2,'c':3},'obj2':{'a':4,'b':5,'c':6}}\nmappings = {'obj1':{0:'a'},'obj2':{'y':'a','z':'b','**':'**'}}\nassert multi_map(objects,mappings) == {0: 1, 'y': 4, 'z': 5, 'a': 4, 'b': 5, 'c': 6}\n\nobjects = {'obj1':{'a':1,'b':2,'c':3},'obj2':{'a':4,'b':5,'c':6}}\nmappings = {'obj1':{'_':'a'},'obj2':{'y':'a'}}\n\nout = multi_map(objects,mappings)\nassert out == {'y': 4},out\n\n\nobjects = {'obj1':[{'a':1,'b':2,'c':3},{'a':10,'b':20,'c':30}],'obj2':{'a':4,'b':5,'c':6}}\nmappings = {'obj1':{'c':'a','d':'b'},'obj2':{'y':'a'}}\n\nout = multi_map(objects,mappings,as_list_keys={'obj1'})\nassert out == {'c': [1, 10], 'd': [2, 20], 'y': 4},out"
  },
  {
    "objectID": "object_mappings.html#declerative-map-syntax",
    "href": "object_mappings.html#declerative-map-syntax",
    "title": "Object mappings",
    "section": "Declerative map syntax",
    "text": "Declerative map syntax\n\nsource\n\nparse_edge_descriptor\n\n parse_edge_descriptor (edge_str:str, start='edge')\n\n\n# Regular edge tests\nout = parse_edge_descriptor('x -&gt;y')\nassert out == {'edge_type':'edge','source_node': 'x', 'target_node': 'y', 'mapping': {0: ('.',)}}, out\n\nout = parse_edge_descriptor('node1-&gt;node2 (in=out)')\nassert out == {'edge_type':'edge','source_node': 'node1', 'target_node': 'node2', 'mapping': {'in': ('out',)}} , out\n\nout = parse_edge_descriptor('node1-&gt;node2 (first,second)')\nassert out == {'edge_type':'edge','source_node': 'node1', 'target_node': 'node2', 'mapping': {'first': ('.',),'second': ('.',)}} , out\n\nout = parse_edge_descriptor('node1-&gt;node2 (0=out)')\nassert out == {'edge_type':'edge','source_node': 'node1', 'target_node': 'node2', 'mapping': {0: ('out',)}} , out\n\n\nout = parse_edge_descriptor(\"x -&gt; y  (c,**,a=b)\")\nassert out == {'edge_type':'edge','source_node': 'x',\n 'target_node': 'y',\n 'mapping': {'c': ('.',), '**': ('.',), 'a': ('b',)}}\n\nout = parse_edge_descriptor(\"x -&gt; y  (d=**,a=b,**=c.**)\")\nassert out == {'edge_type':'edge','source_node': 'x', 'target_node': 'y', 'mapping': {'d': ('**',), 'a': ('b',), '**': ('c', '**')}},out\n\n\nwith pytest.raises(ValueError, match=\"Syntax error when parsing edge\"):\n    parse_edge_descriptor('invalid-&gt;format-&gt;')\n\nout = parse_edge_descriptor(\"x (a=b)\",start='implicit_edge')\nassert out == {'edge_type':'implicit_edge','node': 'x', 'mapping': {'a': ('b',)}}\n\nout = parse_edge_descriptor(\"(a=b)\",start='mapping_expr')\nassert out == {'a': ('b',)}\n\n\nout = parse_edge_descriptor(\"0=a.b.c\",start='mapping_expr')\nassert out ==  {0: ('a', 'b', 'c')},out\n\nout = parse_edge_descriptor(\"**=a\",start='mapping_expr')\nassert out ==  {'**': ('a',)},out\n\n\n# Test state edges\nout = parse_edge_descriptor('x -&gt; state/key')\nassert out == {'edge_type': 'write_edge', 'source_node': 'x', 'target_node': 'key', 'mapping': {0: ('.',)}}, out\n\nout = parse_edge_descriptor('state/key -&gt; x')\nassert out == {'edge_type': 'read_edge', 'source_node': 'key', 'target_node': 'x', 'mapping': {0: ('.',)}}, out\n\nout = parse_edge_descriptor('x -&gt; State/key (0=c.d,a=b)')\nassert out == {'edge_type': 'write_edge', 'source_node': 'x', 'target_node': 'key', 'mapping': {0: ('c', 'd'), 'a': ('b',)}}, out\n\n# Test implicit state edges\nout = parse_edge_descriptor('state/key', start='implicit_edge')\nassert out == {'edge_type': 'implicit_state_edge', 'node': 'key', 'mapping': {0: ('.',)}}, out\n\nout = parse_edge_descriptor('State/key (0=c.d,a=b)', start='implicit_edge')\nassert out == {'edge_type': 'implicit_state_edge', 'node': 'key', 'mapping': {0: ('c', 'd'), 'a': ('b',)}}, out\n\n\nout = parse_edge_descriptor('State/key(_)', start='implicit_edge')\nassert out == {'edge_type': 'implicit_state_edge', 'node': 'key', 'mapping': {'_': ('.',)}}, out\n\n\nout = parse_edge_descriptor('a.b.cs=d.e.f',start='accessor_assignment')\nassert out == (('a', 'b', 'cs'), ('d', 'e', 'f'))"
  },
  {
    "objectID": "object_mappings.html#export",
    "href": "object_mappings.html#export",
    "title": "Object mappings",
    "section": "Export",
    "text": "Export"
  },
  {
    "objectID": "llms.html",
    "href": "llms.html",
    "title": "LLM standard library",
    "section": "",
    "text": "Given our diagram’s ability to use generic functions, we can create a standard library of functions that are useful for LLMs.\nimport nest_asyncio\nnest_asyncio.apply()"
  },
  {
    "objectID": "llms.html#wrapping-instructor",
    "href": "llms.html#wrapping-instructor",
    "title": "LLM standard library",
    "section": "Wrapping instructor",
    "text": "Wrapping instructor\n\nsource\n\njson_client\n\n json_client ()\n\n\nsource\n\n\ntools_client\n\n tools_client ()\n\n\nsource\n\n\ncomplete\n\n complete (model, messages, response_model, mode='json',\n           print_prompt=False, **kwargs)\n\n\nsource\n\n\ncomplete_raw\n\n complete_raw (model, messages, response_model=None, response_schema=None,\n               mode='json', **kwargs)\n\nThis function is used to complete a chat completion with instructor without having basemodels as input or output. used for disk caching of results.\n\nclass UserExtract(BaseModel):\n    name: str\n    age: int\n\n\nuser, usage = await complete(\n    model=\"gpt-3.5-turbo\",\n    response_model=UserExtract,\n    messages=[\n        {\"role\": \"user\", \"content\": \"Extract jason is 25 years old\"},\n    ],\n)\n\nuser,usage\n\n(UserExtract(name='Extract jason', age=25),\n {'input_tokens': 147, 'output_tokens': 19})"
  },
  {
    "objectID": "llms.html#completion-types",
    "href": "llms.html#completion-types",
    "title": "LLM standard library",
    "section": "Completion types",
    "text": "Completion types\n\nSimpler answer\n\nsource\n\n\nanswer_question\n\n answer_question (model, messages, **api_kwargs)\n\n\nawait answer_question(\"gpt-3.5-turbo\",[{\"role\":\"user\",\"content\":\"What is the capital of France?\"}])\n\n('Paris', {'input_tokens': 120, 'output_tokens': 10})\n\n\n\n\nChoice\n\nsource\n\n\nchoose\n\n choose (model, messages, choices, **api_kwargs)\n\n\nawait choose(\"gpt-3.5-turbo\",[{\"role\":\"user\",\"content\":\"What is the capital of France?\"}],[\"PARIS\", \"HILTON\"],print_prompt=True)\n\n[{'role': 'user', 'content': 'What is the capital of France?'}]\n\n\n('PARIS', {'input_tokens': 138, 'output_tokens': 11})\n\n\n\n\nMulti choice\n\nsource\n\n\nchoose_many\n\n choose_many (model, messages, choices, **api_kwargs)\n\n\nawait choose_many(\"gpt-3.5-turbo\",[{\"role\":\"user\",\"content\":\"what parameters did i pass in? my name is jason and i am 25 years old\"}],[\"Age\", \"Name\",\"City\"],print_prompt=True)\n\n[{'role': 'user', 'content': 'what parameters did i pass in? my name is jason and i am 25 years old'}]\n\n\n(['Name', 'Age'], {'input_tokens': 235, 'output_tokens': 32})\n\n\n\n\nStructured output\n\nsource\n\n\nclean_model\n\n clean_model (model:Type[sqlmodel.main.SQLModel], name:Optional[str]=None)\n\n*Convert an SQLModel to a Pydantic BaseModel. used to clean up the output for the LLM Args: model: SQLModel class to convert name: Optional name for the new model class\nReturns: A Pydantic BaseModel class with the same fields*\n\nsource\n\n\nstructured_output\n\n structured_output (model, messages, output_schema, as_json=False,\n                    **api_kwargs)\n\n\nclass UserExtract(BaseModel):\n    name: str\n    age: int\n\nres,usage = await structured_output(\"gpt-3.5-turbo\",\n    [{\"role\":\"user\",\"content\":\"what parameters did i pass in? my name is Jason and i am 25 years old\"}],\n    UserExtract)\nassert res == UserExtract(name=\"Jason\",age=25), res\nres,usage\n\n(UserExtract(name='Jason', age=25), {'input_tokens': 157, 'output_tokens': 17})\n\n\n\nres,usage = await structured_output(\"gpt-3.5-turbo\",\n    [{\"role\":\"user\",\"content\":\"what parameters did i pass in? my name is Jason and i am 25 years old\"}],\n    UserExtract,as_json=True)\nassert res == {\"name\": \"Jason\", \"age\": 25},res\nres,usage\n\n({'name': 'Jason', 'age': 25}, {'input_tokens': 157, 'output_tokens': 17})\n\n\n\nimport sqlite3\nfrom sqlalchemy.engine import create_engine\n\n\nsource\n\n\nUser\n\n User (id:Optional[int]=None, name:Optional[str]=None,\n       age:Optional[int]=None, email:Optional[str]=None)\n\n*Usage docs: https://docs.pydantic.dev/2.10/concepts/models/\nA base class for creating Pydantic models.\nAttributes: class_vars: The names of the class variables defined on the model. private_attributes: Metadata about the private attributes of the model. signature: The synthesized __init__ [Signature][inspect.Signature] of the model.\n__pydantic_complete__: Whether model building is completed, or if there are still undefined fields.\n__pydantic_core_schema__: The core schema of the model.\n__pydantic_custom_init__: Whether the model has a custom `__init__` function.\n__pydantic_decorators__: Metadata containing the decorators defined on the model.\n    This replaces `Model.__validators__` and `Model.__root_validators__` from Pydantic V1.\n__pydantic_generic_metadata__: Metadata for generic models; contains data used for a similar purpose to\n    __args__, __origin__, __parameters__ in typing-module generics. May eventually be replaced by these.\n__pydantic_parent_namespace__: Parent namespace of the model, used for automatic rebuilding of models.\n__pydantic_post_init__: The name of the post-init method for the model, if defined.\n__pydantic_root_model__: Whether the model is a [`RootModel`][pydantic.root_model.RootModel].\n__pydantic_serializer__: The `pydantic-core` `SchemaSerializer` used to dump instances of the model.\n__pydantic_validator__: The `pydantic-core` `SchemaValidator` used to validate instances of the model.\n\n__pydantic_fields__: A dictionary of field names and their corresponding [`FieldInfo`][pydantic.fields.FieldInfo] objects.\n__pydantic_computed_fields__: A dictionary of computed field names and their corresponding [`ComputedFieldInfo`][pydantic.fields.ComputedFieldInfo] objects.\n\n__pydantic_extra__: A dictionary containing extra values, if [`extra`][pydantic.config.ConfigDict.extra]\n    is set to `'allow'`.\n__pydantic_fields_set__: The names of fields explicitly set during instantiation.\n__pydantic_private__: Values of private attributes set on the model instance.*\n\nres,usage = await structured_output(\"gpt-3.5-turbo\",\n    [{\"role\":\"user\",\"content\":\"my name is jyson, my age is 25, my id is 1\"}],\n    User)\nres\n\nUser(id=1, name='jyson', age=25, email=None)\n\n\n\n\nTool calling\n\nsource\n\n\ndescription_to_model\n\n description_to_model (desc:Dict[str,Any], model_name:Optional[str]=None)\n\n*Create a Pydantic model from a function description.\nArgs: desc: Function description from function_to_input_description model_name: Optional name for the model class\nReturns: Pydantic model class*\n\nsource\n\n\nfunction_to_input_description\n\n function_to_input_description (func:Callable)\n\n*Extract parameter information from a function’s signature and docstring.\nArgs: func: Function to analyze\nReturns: Dictionary containing: - name: Function name - params: Dict of parameter info with: - type: Parameter type annotation - description: Parameter description from docstring - default: Default value if any*\n\nasync def add(a: int, b: int = 0) -&gt; int:\n    \"\"\"Add two numbers.\n    \n    Args:\n        a: First number to add\n        b: Second number to add\n    \"\"\"\n    return a + b\n\n# Get function description\ndesc = function_to_input_description(add)\nassert desc == {\n    'name': 'add',\n    'params': {'a': {'type': int,'description': 'First number to add','default': None},\n               'b': {'type': int, 'description': 'Second number to add', 'default': 0}\n               }\n    }\n\n\ndef math_op(op: Literal[\"add\", \"multiply\", \"divide\"],a: int=0, b: int = 0) -&gt; int:\n    \"\"\"Add two numbers.\n    \n    Args:\n        op: Operation to perform\n        a: First number to add\n        b: Second number to add\n    \"\"\"\n    return a + b\n\n# Get function description\ndesc = function_to_input_description(math_op)\ndesc\nassert desc == {'name': 'math_op',\n 'params': {'op': {'type': Literal['add', 'multiply', 'divide'],\n   'description': 'Operation to perform',\n   'default': None},\n  'a': {'type': int, 'description': 'First number to add', 'default': 0},\n  'b': {'type': int, 'description': 'Second number to add', 'default': 0}}}\n\n\nsource\n\n\nfunction_to_input_model\n\n function_to_input_model (func:Callable, name:str,\n                          descriminator_field:str='tool_name')\n\n*Convert a function to a Pydantic input model.\nArgs: func: Function to analyze\nReturns: Pydantic model class for function inputs*\n\nsource\n\n\ncall_tools\n\n call_tools (model:str, messages:List[Dict[str,str]],\n             tools:Dict[str,Callable], call_function:bool=False,\n             descriminator_field:str='tool_name', **api_kwargs)\n\n*Call OpenAI chat completion with tool selection and input parsing.\nArgs: model: OpenAI model name messages: List of message dicts with role and content tools: Dictionary mapping tool names to functions descriminator_field: The name of the field to use as the discriminator Returns: Dict with: - tool_name: Selected tool name - tool_input: Parsed input for the tool*\n\ndef add(a: int, b: int = 0) -&gt; int:\n    \"\"\"Add two numbers.\n    \n    Args:\n        a: First number to add\n        b: Second number to add\n    \"\"\"\n    return a + b\n\ndef multiply(x: int, y: int) -&gt; int:\n    \"\"\"Multiply two numbers.\n    \n    Args:\n        x: First number to multiply\n        y: Second number to multiply\n    \"\"\"\n    return x * y\n\ndef divide(numerator: int, denominator: int) -&gt; float:\n    \"\"\"Divide two numbers.\n    \n    Args:\n        numerator: Number to divide\n        denominator: Number to divide by\n    \"\"\"\n    return numerator / denominator\n\ntools = {\n    'add': add,\n    'multiply': multiply,\n    'divide': divide\n}\n\n\nresult,usage = await call_tools(\n    model=\"gpt-3.5-turbo\",  \n    messages=[{\"role\": \"user\", \"content\": \"What is 5 plus 3?\"}],\n    tools=tools,\n    print_prompt=True\n)\nassert result == {'name': 'add', 'input': {'a': 5, 'b': 3}}\nresult,usage\n\n[{'role': 'system', 'content': 'choose an appropriate tool to use to answer the following thought based on the following tools:\\nadd:Add two numbers.\\n\\nArgs:\\n    a: First number to add\\n    b: Second number to add\\nmultiply:Multiply two numbers.\\n\\nArgs:\\n    x: First number to multiply\\n    y: Second number to multiply\\ndivide:Divide two numbers.\\n\\nArgs:\\n    numerator: Number to divide\\n    denominator: Number to divide by'}, {'role': 'user', 'content': 'What is 5 plus 3?'}]\n\n\n({'name': 'add', 'input': {'a': 5, 'b': 3}},\n {'input_tokens': 813, 'output_tokens': 33})\n\n\n\nresult,usage = await call_tools(\n    model=\"gpt-3.5-turbo\",  \n    messages=[{\"role\": \"user\", \"content\": \"What is 5 plus 3?\"}],\n    tools=tools,\n    call_function=True\n)\nassert result == {'name': 'add', 'input': {'a': 5, 'b': 3}, 'output': 8}\nresult,usage\n\n({'name': 'add', 'input': {'a': 5, 'b': 3}, 'output': 8},\n {'input_tokens': 813, 'output_tokens': 33})\n\n\n\ndef exception_raiser(a:int,b:int):\n    raise ValueError(\"This is a test error\")\n\ntools= {\n    'add': exception_raiser,\n}\n\nresult,usage = await call_tools(\n    model=\"gpt-3.5-turbo\",  \n    messages=[{\"role\": \"user\", \"content\": \"What is 5 plus 3?\"}],\n    tools=tools,\n    call_function=True\n    )\n\nassert result == {'name': 'add', 'input': {'a': 5, 'b': 3}, 'error': 'This is a test error'}\nresult,usage\n\n({'name': 'add', 'input': {'a': 5, 'b': 3}, 'error': 'This is a test error'},\n {'input_tokens': 368, 'output_tokens': 33})"
  },
  {
    "objectID": "llms.html#the-main-chat-class",
    "href": "llms.html#the-main-chat-class",
    "title": "LLM standard library",
    "section": "The main chat class",
    "text": "The main chat class\n\nsource\n\nChat\n\n Chat (model:Optional[str]=None,\n       messages:Optional[List[Dict[str,str]]]=None,\n       output_schema:Optional[pydantic.main.BaseModel]=None,\n       as_json:Optional[bool]=False,\n       tools:Optional[Dict[str,Callable]]=None,\n       call_function:Optional[bool]=False,\n       choices:Optional[enum.Enum]=None,\n       multi_choice:Optional[bool]=False, seed:Optional[int]=42,\n       stop:Union[str,List[str],NoneType]=None, log_prompt:bool=False,\n       save_history:bool=False, append_output:bool=False,\n       init_messages:Optional[List[Dict[str,str]]]=None, **kwargs)\n\n*A Chat objects the renders a prompt and calls an LLM. Currenlty supporting openai models.\nArgs: model: OpenAI model name messages: List of message dicts, must have at least a role and content field output_schema: Optional schema for structured output as_json: Optional boolean to return the response as a json object tools: Optional dictionary of tool names and functions that the LLM can decide to call. Causes the content of the response to be a dict of the form {‘name’:tool_name,‘input’:tool_input_dict} call_function: if tools are provided, whether to call the function and save the output in the output field of the response’s content choices: Optional List of choices for multi-choice questions multi_choice: if choices are provided, whether to choose multiple items from the list seed: Optional seed for random number generation stop: Optional string or list of strings where the model should stop generating save_history: Optional boolean to save the history of the chat between calls append_output: Optional, whether to append the output of the chat to history automatically, default False init_messages: Optional list of messages to init state histroy with, only used if save_history is True **kwargs: Keyword arguments to interpolate into the messages*\nFor a cheatsheet on how to use jinja templates, see this link"
  },
  {
    "objectID": "llms.html#chat-tests",
    "href": "llms.html#chat-tests",
    "title": "LLM standard library",
    "section": "Chat Tests",
    "text": "Chat Tests\n\nchat_with_history = Chat(model=\"gpt-3.5-turbo\", \n                        save_history=True,\n                        append_output=True,\n                        init_messages=[{\"role\":\"system\",\"content\":\"You are a helpful {{role}}\"}],\n                        messages=[{\"role\": \"user\", \"content\": \"Hi, im {{name}}, answer me: {{text}}\"}],\n                        role = 'AI overlord',\n                        name = 'ernio',\n                        )\nres = await chat_with_history(text=\"What is the capital of France?\",print_prompt=True)\nres\n\n[{'role': 'system', 'content': 'You are a helpful AI overlord'}, {'role': 'user', 'content': 'Hi, im ernio, answer me: What is the capital of France?'}]\n\n\n{'role': 'assistant',\n 'content': 'The capital of France is Paris.',\n 'meta': {'input_tokens': 136, 'output_tokens': 15}}\n\n\n\nassert len(chat_with_history.history) == 3\nchat_with_history.history\n\n[{'role': 'system', 'content': 'You are a helpful AI overlord'},\n {'role': 'user',\n  'content': 'Hi, im ernio, answer me: What is the capital of France?'},\n {'role': 'assistant',\n  'content': 'The capital of France is Paris.',\n  'meta': {'input_tokens': 136, 'output_tokens': 15}}]\n\n\n\nres = await chat_with_history(text=\"And what is the closest city to it?\",print_prompt=True)\nres\n\n[{'role': 'system', 'content': 'You are a helpful AI overlord'}, {'role': 'user', 'content': 'Hi, im ernio, answer me: What is the capital of France?'}, {'role': 'assistant', 'content': 'The capital of France is Paris.', 'meta': {'input_tokens': 136, 'output_tokens': 15}}, {'role': 'user', 'content': 'Hi, im ernio, answer me: And what is the closest city to it?'}]\n\n\n{'role': 'assistant',\n 'content': 'The closest city to Paris is Saint-Denis.',\n 'meta': {'input_tokens': 169, 'output_tokens': 19}}\n\n\n\nassert len(chat_with_history.history)==5\n\n\nOther tests\n\nmessages=[\n        {\"role\": \"system\", \"content\": \"Given a sentence, classify it into one of these topics: science, history, technology, or arts. Choose the single most relevant topic.\"},\n        {\"role\": \"user\", \"content\": \"{{text}}\"}\n    ]\n    \ntopic_classifier = Chat(\n    model=\"gpt-4o-mini\",\n    messages=messages,\n    choices = ['science', 'history', 'technology', 'arts'],\n    seed=42,\n    log_prompt=True\n)\ntopic_classifier\n\nChat(model='gpt-4o-mini', required_keys={'text'}, choices=['science', 'history', 'technology', 'arts'], seed=42)\n\n\n\nrenaisance_topic = await topic_classifier(text=\"WWII was a global conflict that lasted from 1939 to 1945.\")\nastroid_topic = await topic_classifier(text=\"The asteroid belt is a region of space between the orbits of Mars and Jupiter.\")\n\nassert renaisance_topic['content'] == 'history',renaisance_topic\nassert astroid_topic['content'] == 'science',astroid_topic\n\ncalling llm with model=gpt-4o-mini and prompt:\nmessages=[{'content': 'Given a sentence, classify it into one of these topics: science, '\n             'history, technology, or arts. Choose the single most relevant '\n             'topic.',\n  'role': 'system'},\n {'content': 'WWII was a global conflict that lasted from 1939 to 1945.',\n  'role': 'user'}]\n\ncalling llm with model=gpt-4o-mini and prompt:\nmessages=[{'content': 'Given a sentence, classify it into one of these topics: science, '\n             'history, technology, or arts. Choose the single most relevant '\n             'topic.',\n  'role': 'system'},\n {'content': 'The asteroid belt is a region of space between the orbits of '\n             'Mars and Jupiter.',\n  'role': 'user'}]\n\n\n\n\nclass Person(BaseModel):\n    first_name: str\n    last_name: str\n    date_of_birth: int\n\nprompted_llm = Chat(model=\"gpt-4o-mini\", messages=\n    [   \n        {\"role\": \"user\", \"content\": \"how old am i? {{name}}, {{age}} years old\"},\n        {\"role\": \"assistant\", \"content\": \"Iam {{model_name}}, You are {{name}}, {{age}} years old\"}\n    ],\n     output_schema=Person)\nprompted_llm\n\nChat(model='gpt-4o-mini', required_keys={'model_name', 'name', 'age'}, output_schema=Person, seed=42)\n\n\n\nbaked_llm = Chat(model=\"gpt-4o-mini\", messages=\n    [\n        {\"role\": \"user\", \"content\": \"how old am i? {{name}}, {{age}} years old\"},\n        {\"role\": \"assistant\", \"content\": \"Iam {{model_name}}, You are {{name}}, {{age}} years old\"}\n    ],\n    output_schema=Person, model_name=\"gpt-4o-mini\", age=30)\nbaked_llm\n\nChat(model='gpt-4o-mini', required_keys={'name'}, output_schema=Person, seed=42)\n\n\n\nres = await prompted_llm(model_name=\"gpt-4o-mini\", age=30,name=\"Dean\")\nassert res['content'] == Person(first_name='Dean', last_name='', date_of_birth=1993)\nres\n\n{'role': 'assistant',\n 'content': Person(first_name='Dean', last_name='', date_of_birth=1993),\n 'meta': {'input_tokens': 206, 'output_tokens': 27}}\n\n\n\nres = await baked_llm(name=\"Dean\")\nassert res['content'] == Person(first_name='Dean', last_name='', date_of_birth=1993)\nres\n\n{'role': 'assistant',\n 'content': Person(first_name='Dean', last_name='', date_of_birth=1993),\n 'meta': {'input_tokens': 206, 'output_tokens': 27}}\n\n\n\nres = await baked_llm(name=\"Dean\",as_json=True)\nassert res['content'] == {\"first_name\": \"Dean\", \"last_name\": \"\", \"date_of_birth\": 1993} \nres\n\n{'role': 'assistant',\n 'content': {'first_name': 'Dean', 'last_name': '', 'date_of_birth': 1993},\n 'meta': {'input_tokens': 206, 'output_tokens': 27}}\n\n\n\ncourse_chooser = Chat(model=\"gpt-4o-mini\",\n    messages=[{\"role\": \"user\", \"content\": \"{{text}}\"}],\n    choices=[\"science\",\"genocide\", \"history\", \"defence against the dark arts\", \"arts\"],\n    multi_choice=True)\nres = await course_chooser(text=\"choose everything that is not genocide\")\nassert not 'genocide' in res['content'] , res\nres\n\n{'role': 'assistant',\n 'content': ['science', 'history', 'defence against the dark arts', 'arts'],\n 'meta': {'input_tokens': 236, 'output_tokens': 59}}\n\n\n\ndef google_search_stub(query:str):\n    \"\"\"\n    Search the web for the query\n    Args:\n        query: The query to search for\n    Returns:\n        The URL of the search results\n    \"\"\"\n    return f\"https://www.google.com/search?q={query.replace(' ','_')}\"\n\ntools = {'google_search': google_search_stub}\n\ngoogle_search = Chat(model=\"gpt-4o-mini\", messages=[{\"role\": \"user\", \"content\": \"{{text}}\"}], tools=tools, call_function=True)\nres = await google_search(text=\"What is the capital of France?\")\nassert res['content'] == {'name': 'google_search',\n  'input': {'query': 'What is the capital of France?'},\n  'output': 'https://www.google.com/search?q=What_is_the_capital_of_France?'}\nres\n\n{'role': 'assistant',\n 'content': {'name': 'google_search',\n  'input': {'query': 'What is the capital of France?'},\n  'output': 'https://www.google.com/search?q=What_is_the_capital_of_France?'},\n 'meta': {'input_tokens': 365, 'output_tokens': 32}}"
  },
  {
    "objectID": "llms.html#image-to-text",
    "href": "llms.html#image-to-text",
    "title": "LLM standard library",
    "section": "Image to Text",
    "text": "Image to Text\n\nsource\n\nimage_to_text\n\n image_to_text (path:str, model:str='gpt-4o-mini', url=False)\n\n*This function takes an image (either from a local file path or URL) and uses OpenAI’s vision model to generate a detailed description of the image contents. The results are cached using disk_cache to avoid redundant API calls.\nArgs: path (str): Path to the image file or URL of the image model (str, optional): OpenAI model to use for image analysis. Defaults to “gpt-4o-mini”. url (bool, optional): Whether the path is a URL. Defaults to False.\nReturns: dict: A dictionary containing: - role (str): Always “assistant” - content (str): Detailed description of the image - meta (dict): Usage statistics including input and output tokens*\n\nfrom textwrap import wrap\n\n\nres= await image_to_text(get_git_root()/\"sample_data/fox.jpeg\")\n\nassert 'fox' in res['content']\nprint('\\n'.join(wrap(res['content'],width=100)))\nres\n\nThe image shows a close-up of a fox's face. The fox has a thick, reddish-brown fur coat, with white\nand cream patches around its mouth and on its chest. Its ears are pointed and have a light brown\nhue, contrasting with its darker face. One eye, which is bright and intelligent, is visible while\nthe other is partially closed. The background appears blurred, suggesting the fox is in a natural\nsetting, possibly during the golden hour of sunlight, adding a warm glow to its fur.\n\n\n{'role': 'assistant',\n 'content': \"The image shows a close-up of a fox's face. The fox has a thick, reddish-brown fur coat, with white and cream patches around its mouth and on its chest. Its ears are pointed and have a light brown hue, contrasting with its darker face. One eye, which is bright and intelligent, is visible while the other is partially closed. The background appears blurred, suggesting the fox is in a natural setting, possibly during the golden hour of sunlight, adding a warm glow to its fur.\",\n 'meta': {'input_tokens': 8626, 'output_tokens': 110}}\n\n\n\nfrom textwrap import wrap\n\n\nimage_url = 'https://upload.wikimedia.org/wikipedia/commons/thumb/3/30/Vulpes_vulpes_ssp_fulvus.jpg/800px-Vulpes_vulpes_ssp_fulvus.jpg'\nres= await image_to_text(image_url,url=True)\n\nassert 'fox' in res['content']\nprint('\\n'.join(wrap(res['content'],width=100)))\nres\n\nThe image features a red fox standing gracefully in a snowy landscape. Its fur is predominantly a\nvibrant orange with darker, almost black markings on its legs and tip of the tail. The fox has a\nbushy tail that is quite prominent. Its head is angled slightly, showcasing pointed ears and bright,\nkeen eyes, giving it an alert expression. The surrounding snow is pristine, contrasting with the\nfox's fur, and there are hints of foliage in the background, obscured by the snow. The overall scene\nconveys a serene and picturesque winter setting.\n\n\n{'role': 'assistant',\n 'content': \"The image features a red fox standing gracefully in a snowy landscape. Its fur is predominantly a vibrant orange with darker, almost black markings on its legs and tip of the tail. The fox has a bushy tail that is quite prominent. Its head is angled slightly, showcasing pointed ears and bright, keen eyes, giving it an alert expression. The surrounding snow is pristine, contrasting with the fox's fur, and there are hints of foliage in the background, obscured by the snow. The overall scene conveys a serene and picturesque winter setting.\",\n 'meta': {'input_tokens': 25627, 'output_tokens': 116}}"
  },
  {
    "objectID": "llms.html#speech-to-text",
    "href": "llms.html#speech-to-text",
    "title": "LLM standard library",
    "section": "Speech to text",
    "text": "Speech to text\n\nsource\n\nspeech_to_text\n\n speech_to_text (audio_path:str, model:str='whisper-1')\n\n*Extract text from an audio file using OpenAI’s Whisper model.\nArgs: audio_path (str): Path to the audio file model (str, optional): OpenAI model to use. Defaults to “whisper-1”.\nReturns: dict: A dictionary containing:\n- role (str): Always “assistant” - content (str): Transcribed text from the audio*\n\nres = await speech_to_text(get_git_root()/\"sample_data/happy_speech.wav\")\nassert res['content'] == \"Look at this, my hands are standing up in my arms, I'm giving myself goosebumps.\" , res\nres\n\n{'role': 'assistant',\n 'content': \"Look at this, my hands are standing up in my arms, I'm giving myself goosebumps.\"}"
  },
  {
    "objectID": "llms.html#export",
    "href": "llms.html#export",
    "title": "LLM standard library",
    "section": "Export",
    "text": "Export"
  },
  {
    "objectID": "dbs.html",
    "href": "dbs.html",
    "title": "Example Databases",
    "section": "",
    "text": "nest_asyncio.apply()\n\n\nsource\n\n\n\n async_openai_client ()\n\n\nsource\n\n\n\n\n openai_client ()\n\n\nsource\n\n\n\n\n check_openai_key ()\n\n\nsource\n\n\n\n\n CachedEmbeddingFunction (model='text-embedding-3-small')\n\n*A protocol for embedding functions. To implement a new embedding function, you need to implement the following methods at minimum: - call\nFor future compatibility, it is strongly recommended to also implement: - init - name - build_from_config - get_config*\n\nsource\n\n\n\n\n OpenAIEmbed (model='text-embedding-3-small')\n\nInitialize self. See help(type(self)) for accurate signature.\n\nsource\n\n\n\n\n openai_embed (text, model='text-embedding-3-small')\n\n\nc = CachedEmbeddingFunction()\nx = c(['hello world'])\nx\n\n[array([-0.00676301, -0.0392247 ,  0.03417418, ..., -0.01968796,\n        -0.01938553, -0.02244004])]\n\n\n\nsource\n\n\n\n\n ChromaClient (persist_path=None, embed_model='text-embedding-3-small')\n\n*Initialize ChromaDB client with a collection name.\nArgs: persist_path: Path to the directory to persist the database to embed_model: Model to use for embedding*\n\n\n\n\n# Test ChromaClient\nclient = ChromaClient()\n\n\nclient.reset()  # Start with a clean state\n\n# Test collection management\nclient.add_collection(\"test_collection\")\nassert \"test_collection\" in client.list_collections(), f\"Collection creation failed, {client.list_collections()}\"\n\n\n# Test document operations\ntest_docs = [\n    {\n        'id': 'doc1',\n        'text': 'The quick brown fox jumps over the lazy dog',\n        'metadata': {'type': 'pangram'}\n    },\n    {\n        'id': 'doc2',\n        'text': 'A quick brown fox jumped over the lazy dogs',\n        'metadata': {'type': 'variant'}\n    },\n    {\n        'id': 'doc3',\n        'text': 'The weather is sunny today',\n        'metadata': {'type': 'weather'}\n    }\n]\n\n# Test upsert\nclient.upsert(\"test_collection\", test_docs)\n\n[{'id': 'doc1',\n  'text': 'The quick brown fox jumps over the lazy dog',\n  'metadata': {'type': 'pangram'}},\n {'id': 'doc2',\n  'text': 'A quick brown fox jumped over the lazy dogs',\n  'metadata': {'type': 'variant'}},\n {'id': 'doc3',\n  'text': 'The weather is sunny today',\n  'metadata': {'type': 'weather'}}]\n\n\n\n# Test query\nresults = client.query(\"test_collection\", \"fox jumping\", k=2)\n\nassert len(results) == 2, \"Query should return 2 results\"\nassert all('fox' in doc['text'] for doc in results), \"Query results should contain relevant documents\"\n\n\n# query with metadata filtering\nresults = client.query(\"test_collection\", \"fox jumping\",where={'type':'pangram'},k=2)\nassert len(results) == 1, results\nassert results[0]['text'] == 'The quick brown fox jumps over the lazy dog'\n\n# query with full text search\nresults = client.query(\"test_collection\", \"sunny\",k=2,where_document={\"$contains\":\"fox\"})\nresults\nassert len(results) == 2, results\nassert all('fox' in doc['text'] for doc in results), \"Query results should contain relevant documents\"\n\n\n# query with both filters\nresults = client.query(\"test_collection\", \"sunny\",k=2,where_document={\"$contains\":\"fox\"},where={'type':{'$in':['weather','variant']}})\nresults\n\n[{'id': 'doc2',\n  'text': 'A quick brown fox jumped over the lazy dogs',\n  'metadata': {'type': 'variant'},\n  'distance': 1.513525366783142}]\n\n\n\nclient.get(\"test_collection\",[\"doc2\",\"doc1\"])\n\n[{'id': 'doc1',\n  'text': 'The quick brown fox jumps over the lazy dog',\n  'metadata': {'type': 'pangram'}},\n {'id': 'doc2',\n  'text': 'A quick brown fox jumped over the lazy dogs',\n  'metadata': {'type': 'variant'}}]\n\n\n\nclient.list(\"test_collection\",k=3)\n\n[{'id': 'doc1',\n  'text': 'The quick brown fox jumps over the lazy dog',\n  'metadata': {'type': 'pangram'},\n  'embedding': array([-0.02083762, -0.01689642, -0.00453628, ...,  0.01019769,\n         -0.01523149,  0.02468777])},\n {'id': 'doc2',\n  'text': 'A quick brown fox jumped over the lazy dogs',\n  'metadata': {'type': 'variant'},\n  'embedding': array([-1.61350556e-02,  1.02180371e-03, -6.04663728e-05, ...,\n          8.89423583e-03, -2.04253849e-02,  1.07899625e-02])},\n {'id': 'doc3',\n  'text': 'The weather is sunny today',\n  'metadata': {'type': 'weather'},\n  'embedding': array([ 0.01581731, -0.03885713,  0.00716233, ..., -0.02583253,\n          0.01166436,  0.0264344 ])}]\n\n\n\n# Test get\ndoc_get = client.get(\"test_collection\", [\"doc1\"])\n\nassert doc_get[0]['id'] == 'doc1', \"Get should return correct document\"\nassert doc_get[0]['text'] == test_docs[0]['text'], \"Document text should match\"\n\n# Test list\ncollection_peek = client.list(\"test_collection\", k=2)\nassert len(collection_peek) == 2, \"List should return 2 documents\"\n\n# Test query\nresults = client.query(\"test_collection\", \"fox jumping\", k=2)\nassert len(results) == 2, \"Query should return 2 results\"\nassert all('fox' in result['text'] for result in results), \"Query results should contain relevant documents\"\nassert all(isinstance(result['distance'], float) for result in results), \"Each result should have a distance score\"\nassert all(isinstance(result['metadata'], dict) for result in results), \"Each result should have metadata\"\n\n# Test delete\nclient.delete(\"test_collection\", [\"doc1\"])\nremaining_docs = client.list(\"test_collection\")\nassert \"doc1\" not in [doc['id'] for doc in remaining_docs], \"Document should be deleted\"\n\n# Test collection deletion\nclient.delete_collection(\"test_collection\")\nassert \"test_collection\" not in client.list_collections(), \"Collection deletion failed\"\n\n\n# Test error cases\nclient.add_collection(\"test_collection\")\nwith pytest.raises(ValueError,match=\"Collection test_collection already exists\"):\n    client.add_collection(\"test_collection\")\n\nclient.add_collection(\"test_collection\", exists_ok=True)\nclient.delete_collection(\"test_collection\")"
  },
  {
    "objectID": "dbs.html#chroma",
    "href": "dbs.html#chroma",
    "title": "Example Databases",
    "section": "",
    "text": "nest_asyncio.apply()\n\n\nsource\n\n\n\n async_openai_client ()\n\n\nsource\n\n\n\n\n openai_client ()\n\n\nsource\n\n\n\n\n check_openai_key ()\n\n\nsource\n\n\n\n\n CachedEmbeddingFunction (model='text-embedding-3-small')\n\n*A protocol for embedding functions. To implement a new embedding function, you need to implement the following methods at minimum: - call\nFor future compatibility, it is strongly recommended to also implement: - init - name - build_from_config - get_config*\n\nsource\n\n\n\n\n OpenAIEmbed (model='text-embedding-3-small')\n\nInitialize self. See help(type(self)) for accurate signature.\n\nsource\n\n\n\n\n openai_embed (text, model='text-embedding-3-small')\n\n\nc = CachedEmbeddingFunction()\nx = c(['hello world'])\nx\n\n[array([-0.00676301, -0.0392247 ,  0.03417418, ..., -0.01968796,\n        -0.01938553, -0.02244004])]\n\n\n\nsource\n\n\n\n\n ChromaClient (persist_path=None, embed_model='text-embedding-3-small')\n\n*Initialize ChromaDB client with a collection name.\nArgs: persist_path: Path to the directory to persist the database to embed_model: Model to use for embedding*\n\n\n\n\n# Test ChromaClient\nclient = ChromaClient()\n\n\nclient.reset()  # Start with a clean state\n\n# Test collection management\nclient.add_collection(\"test_collection\")\nassert \"test_collection\" in client.list_collections(), f\"Collection creation failed, {client.list_collections()}\"\n\n\n# Test document operations\ntest_docs = [\n    {\n        'id': 'doc1',\n        'text': 'The quick brown fox jumps over the lazy dog',\n        'metadata': {'type': 'pangram'}\n    },\n    {\n        'id': 'doc2',\n        'text': 'A quick brown fox jumped over the lazy dogs',\n        'metadata': {'type': 'variant'}\n    },\n    {\n        'id': 'doc3',\n        'text': 'The weather is sunny today',\n        'metadata': {'type': 'weather'}\n    }\n]\n\n# Test upsert\nclient.upsert(\"test_collection\", test_docs)\n\n[{'id': 'doc1',\n  'text': 'The quick brown fox jumps over the lazy dog',\n  'metadata': {'type': 'pangram'}},\n {'id': 'doc2',\n  'text': 'A quick brown fox jumped over the lazy dogs',\n  'metadata': {'type': 'variant'}},\n {'id': 'doc3',\n  'text': 'The weather is sunny today',\n  'metadata': {'type': 'weather'}}]\n\n\n\n# Test query\nresults = client.query(\"test_collection\", \"fox jumping\", k=2)\n\nassert len(results) == 2, \"Query should return 2 results\"\nassert all('fox' in doc['text'] for doc in results), \"Query results should contain relevant documents\"\n\n\n# query with metadata filtering\nresults = client.query(\"test_collection\", \"fox jumping\",where={'type':'pangram'},k=2)\nassert len(results) == 1, results\nassert results[0]['text'] == 'The quick brown fox jumps over the lazy dog'\n\n# query with full text search\nresults = client.query(\"test_collection\", \"sunny\",k=2,where_document={\"$contains\":\"fox\"})\nresults\nassert len(results) == 2, results\nassert all('fox' in doc['text'] for doc in results), \"Query results should contain relevant documents\"\n\n\n# query with both filters\nresults = client.query(\"test_collection\", \"sunny\",k=2,where_document={\"$contains\":\"fox\"},where={'type':{'$in':['weather','variant']}})\nresults\n\n[{'id': 'doc2',\n  'text': 'A quick brown fox jumped over the lazy dogs',\n  'metadata': {'type': 'variant'},\n  'distance': 1.513525366783142}]\n\n\n\nclient.get(\"test_collection\",[\"doc2\",\"doc1\"])\n\n[{'id': 'doc1',\n  'text': 'The quick brown fox jumps over the lazy dog',\n  'metadata': {'type': 'pangram'}},\n {'id': 'doc2',\n  'text': 'A quick brown fox jumped over the lazy dogs',\n  'metadata': {'type': 'variant'}}]\n\n\n\nclient.list(\"test_collection\",k=3)\n\n[{'id': 'doc1',\n  'text': 'The quick brown fox jumps over the lazy dog',\n  'metadata': {'type': 'pangram'},\n  'embedding': array([-0.02083762, -0.01689642, -0.00453628, ...,  0.01019769,\n         -0.01523149,  0.02468777])},\n {'id': 'doc2',\n  'text': 'A quick brown fox jumped over the lazy dogs',\n  'metadata': {'type': 'variant'},\n  'embedding': array([-1.61350556e-02,  1.02180371e-03, -6.04663728e-05, ...,\n          8.89423583e-03, -2.04253849e-02,  1.07899625e-02])},\n {'id': 'doc3',\n  'text': 'The weather is sunny today',\n  'metadata': {'type': 'weather'},\n  'embedding': array([ 0.01581731, -0.03885713,  0.00716233, ..., -0.02583253,\n          0.01166436,  0.0264344 ])}]\n\n\n\n# Test get\ndoc_get = client.get(\"test_collection\", [\"doc1\"])\n\nassert doc_get[0]['id'] == 'doc1', \"Get should return correct document\"\nassert doc_get[0]['text'] == test_docs[0]['text'], \"Document text should match\"\n\n# Test list\ncollection_peek = client.list(\"test_collection\", k=2)\nassert len(collection_peek) == 2, \"List should return 2 documents\"\n\n# Test query\nresults = client.query(\"test_collection\", \"fox jumping\", k=2)\nassert len(results) == 2, \"Query should return 2 results\"\nassert all('fox' in result['text'] for result in results), \"Query results should contain relevant documents\"\nassert all(isinstance(result['distance'], float) for result in results), \"Each result should have a distance score\"\nassert all(isinstance(result['metadata'], dict) for result in results), \"Each result should have metadata\"\n\n# Test delete\nclient.delete(\"test_collection\", [\"doc1\"])\nremaining_docs = client.list(\"test_collection\")\nassert \"doc1\" not in [doc['id'] for doc in remaining_docs], \"Document should be deleted\"\n\n# Test collection deletion\nclient.delete_collection(\"test_collection\")\nassert \"test_collection\" not in client.list_collections(), \"Collection deletion failed\"\n\n\n# Test error cases\nclient.add_collection(\"test_collection\")\nwith pytest.raises(ValueError,match=\"Collection test_collection already exists\"):\n    client.add_collection(\"test_collection\")\n\nclient.add_collection(\"test_collection\", exists_ok=True)\nclient.delete_collection(\"test_collection\")"
  },
  {
    "objectID": "dbs.html#sql",
    "href": "dbs.html#sql",
    "title": "Example Databases",
    "section": "SQL",
    "text": "SQL\nWe show here how to create and use an in memory SQL db and configure tables using SQLModel Objects\n\nsource\n\ntemp_sql_db\n\n temp_sql_db (**kwargs)\n\ncreates and sqlalchemy engine to a shared memory sqlite DB. Kwargs are passed to to sqlalchemy’s create_engine function.\n\nengine = temp_sql_db(echo=False)\n\nSQLModel.metadata.clear()\n\nclass Hero(SQLModel,table=True,extend_existing=True):\n    id: Optional[int] = Field(default=None,primary_key=True)\n    name: str\n    secret_name: str\n    age: Optional[int] = None\n\nSQLModel.metadata.create_all(engine)\n\n\ndef merge_heros(heros:List[Hero]):\n    with Session(engine) as session:\n        for hero in heros:\n            session.merge(hero)\n        session.commit()\n\nmerge_heros(\n    [Hero(id=1,name=\"Deadpond\", secret_name=\"Dive\"),\n    Hero(id=2,name=\"Spider-Boy\", secret_name=\"Pedro\"),\n    Hero(id=3,name=\"Rusty-Man\", secret_name=\"Tommy\")])\n\ndef get_hero(name:str):\n    with Session(engine) as session:\n        stmt = select(Hero).where(Hero.name == name)\n        result = session.exec(stmt).one()\n        return result\n\nget_hero(\"Deadpond\")\n\nHero(name='Deadpond', id=1, age=None, secret_name='Dive')"
  },
  {
    "objectID": "diagrams.html",
    "href": "diagrams.html",
    "title": "Diagrams",
    "section": "",
    "text": "load_env()\n\nTrue\n\n\n\n# FUTURE reference syntax of string diagrams https://arxiv.org/pdf/2305.08768.pdf\n# FUTURE in future, add automatic async conversion to functions running in parallel using https://stackoverflow.com/a/70880583\n# FUTURE descrive that we have flow diagrams and decision diagrams"
  },
  {
    "objectID": "diagrams.html#imports",
    "href": "diagrams.html#imports",
    "title": "Diagrams",
    "section": "",
    "text": "load_env()\n\nTrue\n\n\n\n# FUTURE reference syntax of string diagrams https://arxiv.org/pdf/2305.08768.pdf\n# FUTURE in future, add automatic async conversion to functions running in parallel using https://stackoverflow.com/a/70880583\n# FUTURE descrive that we have flow diagrams and decision diagrams"
  },
  {
    "objectID": "diagrams.html#diagram-state",
    "href": "diagrams.html#diagram-state",
    "title": "Diagrams",
    "section": "Diagram State",
    "text": "Diagram State\n\nsource\n\nBaseModelExtra\n\n BaseModelExtra (**extra_data:Any)\n\n*Usage docs: https://docs.pydantic.dev/2.10/concepts/models/\nA base class for creating Pydantic models.\nAttributes: class_vars: The names of the class variables defined on the model. private_attributes: Metadata about the private attributes of the model. signature: The synthesized __init__ [Signature][inspect.Signature] of the model.\n__pydantic_complete__: Whether model building is completed, or if there are still undefined fields.\n__pydantic_core_schema__: The core schema of the model.\n__pydantic_custom_init__: Whether the model has a custom `__init__` function.\n__pydantic_decorators__: Metadata containing the decorators defined on the model.\n    This replaces `Model.__validators__` and `Model.__root_validators__` from Pydantic V1.\n__pydantic_generic_metadata__: Metadata for generic models; contains data used for a similar purpose to\n    __args__, __origin__, __parameters__ in typing-module generics. May eventually be replaced by these.\n__pydantic_parent_namespace__: Parent namespace of the model, used for automatic rebuilding of models.\n__pydantic_post_init__: The name of the post-init method for the model, if defined.\n__pydantic_root_model__: Whether the model is a [`RootModel`][pydantic.root_model.RootModel].\n__pydantic_serializer__: The `pydantic-core` `SchemaSerializer` used to dump instances of the model.\n__pydantic_validator__: The `pydantic-core` `SchemaValidator` used to validate instances of the model.\n\n__pydantic_fields__: A dictionary of field names and their corresponding [`FieldInfo`][pydantic.fields.FieldInfo] objects.\n__pydantic_computed_fields__: A dictionary of computed field names and their corresponding [`ComputedFieldInfo`][pydantic.fields.ComputedFieldInfo] objects.\n\n__pydantic_extra__: A dictionary containing extra values, if [`extra`][pydantic.config.ConfigDict.extra]\n    is set to `'allow'`.\n__pydantic_fields_set__: The names of fields explicitly set during instantiation.\n__pydantic_private__: Values of private attributes set on the model instance.*\n\nsource\n\n\nset_state_key\n\n set_state_key (state, key, value)\n\n\nsource\n\n\nget_state_key\n\n get_state_key (state, key)\n\n\nsource\n\n\nget_attr_metadata\n\n get_attr_metadata (obj, attr)\n\n\nclass RequiredFieldState(BaseModel):\n    field:int\n\n\ns = RequiredFieldState(field=3)\n\nset_state_key(s,'field',5)\nassert s == RequiredFieldState(field=5)\n\n\n# a custom state is any basemodel\nclass CustomState(BaseModel):\n    # we can allow arbitrary attributes by setting extra='allow'\n    # this is useful for defining on the fly state keys with normal behavior\n    model_config = ConfigDict(extra='allow')\n    history:list[int] = list()\n    _hidden_attribute:str = 'hidden'\n\n    annoated_list: Annotated[list[int],list.append] = list()\n\n    def add_message(self,value):\n        self.history.append(value)\n\n    def first_message(self)-&gt;int:\n        if len(self.history) == 0:\n            return 0\n        return self.history[0]\n\n    @computed_field\n    def last_message(self)-&gt;int:\n        if len(self.history) == 0:\n            return 0\n        return self.history[-1]\n\n    @property\n    def hidden(self):\n        return self._hidden_attribute\n    @hidden.setter\n    def hidden(self,value):\n        self._hidden_attribute = value\n\n\ns = CustomState()\ns.add_message(3)\ns\n\nCustomState(history=[3], annoated_list=[], last_message=3)\n\n\n\nset_state_key(s,'extra_attr',10)\nset_state_key(s,'add_message',4)\nset_state_key(s,'hidden','different hidden')\nset_state_key(s,'annoated_list',5)\n\n\nassert get_state_key(s,'last_message') == 4\nassert get_state_key(s,'first_message') == 3\nassert get_state_key(s,'hidden') == 'different hidden'\nassert s.model_dump() == {'history': [3, 4], 'extra_attr': 10, 'last_message': 4,'annoated_list':[5]},s"
  },
  {
    "objectID": "diagrams.html#diagram-base-class",
    "href": "diagrams.html#diagram-base-class",
    "title": "Diagrams",
    "section": "Diagram base class",
    "text": "Diagram base class\n\nsource\n\nDiagramSchema\n\n DiagramSchema (graph=None, state_class=&lt;class '__main__.BaseModelExtra'&gt;,\n                factored_graph=None, start_node=None, end_node=None,\n                name=None, type:__main__.DiagramType=None, anon=False,\n                derive_state=False)\n\n*A class representing a diagram schema for computational graphs.\nA Diagram defines a directed graph structure where nodes represent computational steps and edges represent data flow between them. and supports validation of graph structure and parallel execution paths.\nParams: name (str): Optional name for the diagram schema graph (nx.DiGraph): The underlying NetworkX directed graph factored_graph (nx.DiGraph, optional): A simplified version of the graph after factorisation, where the entire diagram is of a single type. start_node (str): Name of the starting node, defaults to ‘Start’ end_node (str): Name of the ending node, defaults to ‘End’ type (DiagramType): The type of diagram (e.g. Flow, Decision) anon (bool): Whether this is an anonymous diagram derive_state (bool): Whether to derive the state from a calling diagram*\n\nsource\n\n\nDiagramType\n\n DiagramType (*values)\n\n*Create a collection of name/value pairs.\nExample enumeration:\n\n\n\nclass Color(Enum): … RED = 1 … BLUE = 2 … GREEN = 3\n\n\n\nAccess them by:\n\nattribute access:\n\n\n\nColor.RED &lt;Color.RED: 1&gt;\n\n\n\nvalue lookup:\n\n\n\nColor(1) &lt;Color.RED: 1&gt;\n\n\n\nname lookup:\n\n\n\nColor[‘RED’] &lt;Color.RED: 1&gt;\n\n\n\n\nEnumerations can be iterated over, and know how many members they have:\n\n\n\nlen(Color) 3\n\n\n\n\n\n\nlist(Color) [&lt;Color.RED: 1&gt;, &lt;Color.BLUE: 2&gt;, &lt;Color.GREEN: 3&gt;]\n\n\n\nMethods can be added to enumerations, and members can have their own attributes – see the documentation for details.*\n\nsource\n\n\nDiagram\n\n Diagram (**kwargs)\n\n*An instance of a ladle diagram. Instantiated by calling the Schema()\nHas the following public attributes: output - the output of the last run finished - whether the diagram has reached the End node state - the current state of the diagram*"
  },
  {
    "objectID": "diagrams.html#declerative-definition-of-diagrams",
    "href": "diagrams.html#declerative-definition-of-diagrams",
    "title": "Diagrams",
    "section": "Declerative definition of diagrams",
    "text": "Declerative definition of diagrams\n\nDiagram registry singelton\n\nsource\n\n\nCurrentScheme\n\n CurrentScheme ()\n\n\n\nScopes\n\nsource\n\n\nDefine\n\n Define (diagram_name, type:str='flow',\n         state:pydantic.main.BaseModel=&lt;class '__main__.BaseModelExtra'&gt;,\n         draw:bool=True, draw_raw:bool=False, validate:bool=True,\n         direction:str='TB')\n\n*Define a new diagram using a context manager.\nArgs: diagram_name: Name for the new diagram type: The type of diagram to create. Defaults to ‘flow’ state: The state class to use for the diagram. Defaults to BaseModelExtra solve_name_conflicts: If True, append numbers to duplicate names. If False, raise error. Defaults to False draw: If True, draws the diagram after definition. Defaults to True draw_raw: If True, draws the raw graph after definition. Defaults to False validate: If True, validates diagram structure after definition. Defaults to True direction: the direction to draw the diagram in, either TB or LR. Defaults to TB\nYields: The created diagram object\nRaises: ValueError: If diagram_name already exists and solve_name_conflicts is False*\n\nsource\n\n\nScope\n\n Scope (scope:str)\n\n*Context manager for defining a flow/decision scope in a diagram of a different type\nArgs: scope: The scope type to start. Can be either a string (‘flow’ or ‘decision’).*\n\n\nAdding edges and nodes\n\nsource\n\n\nE\n\n E (edge_string:str, cond:Callable=None, type:str=None)\n\n*Add an edge to the current diagram\nArgs: edge_string: The edge descriptor string cond: The condition of the edge type: The type of the edge, either ‘flow’ or ‘decision’, by default, the type is determined by the current scope*\n\nsource\n\n\nV\n\n V (name:str, func:Callable=None, inputs:Any=None, outputs=None,\n    is_break:bool=False, for_each:Optional[List[str]]=None,\n    filter:bool=False, flat:bool=False, as_start:bool=False,\n    as_end:bool=False)\n\n*Add a vertex (node) to the current diagram.\nArgs: name (str): Name of the node func (callable, optional): Function to execute at this node. If None, node acts as a passthrough inputs (List[str], optional): List of input edge descriptors. Each descriptor can be either: - A string in format “source_node.source_port-&gt;target_port” - A tuple (edge_descriptor, condition_func) for conditional edges outputs (List[str], optional): List of output edge descriptors. Each descriptor can be either: - A string in format “source_port-&gt;target_node.target_port” - A tuple (edge_descriptor, condition_func) for conditional edges is_break (bool, optional): If True, execution will pause at this node. Not allowed in flow scopes for_each (List[str|int], optional): List of input keys to iterate over. Used for batching operations in Flow diagrams. If provided, the node will be executed once for each product of items in the input list. This for each keys must get iteratbles from the input edges. filter (bool, optional): Used for batching operations in Flow diagrams. If True, falsy node outputs will be filtered out. Cannot be used with flat=True flat (bool, optional): Used for batching operations in Flow diagrams. If True, node output lists will be flattened into a single list. Cannot be used with filter=True as_start (bool, optional): If True, marks this node as the diagram’s start node as_end (bool, optional): If True, marks this node as the diagram’s end node\nReturns: str: Name of the created node\nRaises: ValueError: If both filter and flat are True ValueError: If validator is not callable or BaseModel ValueError: If break node is used in flow scope*\n\n\nControlling state\n\n\nTest\n\nwith checkLogs(name='__main__'):\n    with Define('test_d',type='decision',validate=False,draw=False,draw_raw=True) as TestD:\n        V('process4',is_break=True)\n        E('Start-&gt;process4')\n        E('process4-&gt;End(**=a)')\n        E('Start-&gt;process1',NamedLambda('is_even',lambda x: x%2==0))\n        E('identity-&gt;End(**)')\n\n        with Scope('flow'):\n            V('process1',\n                func=NamedLambda('add1',lambda x: x+1),\n                outputs=['state/result'],)\n            V('process2',\n                func=NamedLambda('add2',lambda x: x+2),\n                inputs=['process1'],\n                for_each =[0]\n                )\n            V('process3',\n                func=NamedLambda('add5',lambda x: x+5),\n                inputs=['process1'],)\n            V('identity',\n                inputs=['process2(x=a)',\n                        'process3(y=b)',\n                        'state/result(input=.)',\n                        ],\n                for_each = ['x']\n                        )\n\n\nwith Define('test_d2',type='decision',validate=False,draw=False,draw_raw=False) as TestD2:\n    V('proc',TestD,\n        inputs=['Start'],\n        outputs=['End'],\n    )"
  },
  {
    "objectID": "diagrams.html#drawing-diagrams",
    "href": "diagrams.html#drawing-diagrams",
    "title": "Diagrams",
    "section": "Drawing diagrams",
    "text": "Drawing diagrams\n\nsource\n\nNodeMapper\n\n NodeMapper ()\n\nInitialize self. See help(type(self)) for accurate signature.\n\nnode_data_list,edge_data_list = _diagram_to_graphviz_data(TestD.graph)\nnode_data_list,edge_data_list\n\n([{'name': 'node_0',\n   'label': 'process4',\n   'shape': 'box',\n   'style': 'dashed,filled'},\n  {'name': 'node_1',\n   'label': 'Start',\n   'shape': 'box',\n   'style': 'solid,filled'},\n  {'name': 'node_2', 'label': 'End', 'shape': 'box', 'style': 'solid,filled'},\n  {'name': 'node_3',\n   'label': 'process1[ add1 ]',\n   'shape': 'box',\n   'style': 'solid,filled'},\n  {'name': 'node_4',\n   'label': 'State[result]',\n   'shape': 'cylinder',\n   'style': 'solid,filled'},\n  {'name': 'node_5',\n   'label': 'identity[ foreach=[x] ]',\n   'shape': 'box',\n   'style': 'bold,filled'},\n  {'name': 'node_6',\n   'label': 'process2[ add2, foreach=[0] ]',\n   'shape': 'box',\n   'style': 'bold,filled'},\n  {'name': 'node_7',\n   'label': 'process3[ add5 ]',\n   'shape': 'box',\n   'style': 'solid,filled'}],\n [{'tail_name': 'node_3',\n   'head_name': 'node_4',\n   'label': '',\n   'style': 'dashed'},\n  {'tail_name': 'node_4',\n   'head_name': 'node_5',\n   'label': '. -&gt; input',\n   'style': 'dashed'},\n  {'tail_name': 'node_0',\n   'head_name': 'node_2',\n   'label': 'a -&gt; **',\n   'style': 'bold',\n   'color': 'blue'},\n  {'tail_name': 'node_1',\n   'head_name': 'node_0',\n   'label': None,\n   'style': 'bold',\n   'color': 'blue'},\n  {'tail_name': 'node_1',\n   'head_name': 'node_3',\n   'label': '?(is_even)',\n   'style': 'bold',\n   'color': 'blue'},\n  {'tail_name': 'node_3',\n   'head_name': 'node_6',\n   'label': None,\n   'style': 'solid',\n   'color': 'black'},\n  {'tail_name': 'node_3',\n   'head_name': 'node_7',\n   'label': None,\n   'style': 'solid',\n   'color': 'black'},\n  {'tail_name': 'node_5',\n   'head_name': 'node_2',\n   'label': '. -&gt; **',\n   'style': 'bold',\n   'color': 'blue'},\n  {'tail_name': 'node_6',\n   'head_name': 'node_5',\n   'label': 'a -&gt; x',\n   'style': 'solid',\n   'color': 'black'},\n  {'tail_name': 'node_7',\n   'head_name': 'node_5',\n   'label': 'b -&gt; y',\n   'style': 'solid',\n   'color': 'black'}])\n\n\n\ndot = draw_graphviz(node_data_list,edge_data_list,\n    name=TestD.name,direction='TB',\n    node_attrs={'shape':'box','color':'#9370DB','fillcolor':'#ECECFF','style':'filled'}\n    ,edge_attrs={},graph_attrs={})\ndot\n\n#TODO from here make this work with the draw_diagram interface\n\n\n\n\n\n\n\n\n\nsource\n\n\ndiagram_to_dot_single\n\n diagram_to_dot_single (graph, name, direction='TB', **kwargs)\n\n\ndiagram_to_dot_single(TestD.graph,TestD.name)\n\n\n\n\n\n\n\n\n\nsource\n\n\ndraw_diagram\n\n draw_diagram (diagram, name=None, return_dot=False, direction='TB',\n               recursive:Union[bool,List[str]]=False, factored=False,\n               **kwargs)\n\n*Draw a diagram using graphviz. kwargs are sent to wrap to constrain node and edge labels\nArgs: diagram: Either a diagram object or a diagram scheme object name: If provided, uses this name for the diagram in the Mermaid title return_dot: If True, returns the graphviz dot object direction: direction to draw, either TB (top to bottom) or LR (left to right), defaults to TB recursive: Whether to draw subdiagrams as well. If False, only the top level diagram is drawn. If True, all subdiagrams are drawn. If a list of strings, only the subdiagrams with whose names the regex strings are drawn. factored: If True, draws the factored graph, used for debugging Returns: If return_dot is True, returns dot objects Otherwise displays diagram when in an Ipython environment*\n\n\nTests\n\nwith Define('test_state_read',type='decision',validate=False) as TestStateRead:\n    V('add',inputs=['Start'],outputs=['End(data=.)'])\n    E('state/outside_state-&gt;End(state_data=.)')\n\n\n\n\n\n\n\n\n\n_diagram_to_graphviz_data(TestStateRead.graph)\n\n([{'name': 'node_0', 'label': 'add', 'shape': 'box', 'style': 'solid,filled'},\n  {'name': 'node_1',\n   'label': 'Start',\n   'shape': 'box',\n   'style': 'solid,filled'},\n  {'name': 'node_2', 'label': 'End', 'shape': 'box', 'style': 'solid,filled'},\n  {'name': 'node_3',\n   'label': 'State[outside_state]',\n   'shape': 'cylinder',\n   'style': 'solid,filled'}],\n [{'tail_name': 'node_3',\n   'head_name': 'node_2',\n   'label': '. -&gt; state_data',\n   'style': 'dashed'},\n  {'tail_name': 'node_0',\n   'head_name': 'node_2',\n   'label': '. -&gt; data',\n   'style': 'bold',\n   'color': 'blue'},\n  {'tail_name': 'node_1',\n   'head_name': 'node_0',\n   'label': None,\n   'style': 'bold',\n   'color': 'blue'}])\n\n\n\ndraw_diagram(TestD)\n\n\n\n\n\n\n\n\n\ndraw_diagram(TestD2,recursive=True)"
  },
  {
    "objectID": "diagrams.html#factoring-diagrams-into-nested-single-type-diagrams",
    "href": "diagrams.html#factoring-diagrams-into-nested-single-type-diagrams",
    "title": "Diagrams",
    "section": "Factoring diagrams into nested single type diagrams",
    "text": "Factoring diagrams into nested single type diagrams\n\nsource\n\ncompress_cuts\n\n compress_cuts (g, start_node, end_node, ret_raw_graph=False,\n                wrap_as_diagram=False)\n\n\nclass Adder():\n    def __init__(self,x):\n        self.x = x\n\n    def __call__(self,y):\n        return self.x + y\n\n    def __repr__(self):\n        return f'Adder({self.x})'\n\nsum = NamedLambda('sum',sum)\n\nis112 = NamedLambda('is112',lambda x: x == 112)\n\nwith Define('paralell with choice',type='decision',validate=False) as d:\n\n    V('add1',Adder(1),inputs=['Start'])\n    with Scope('flow'):\n        V('add10',Adder(10),inputs=['add1'])\n        V('add100',Adder(100),inputs=['add1'])\n        V('sum',sum,inputs=['add10(y=.)','add100(x=.)'])\n\n\n    E('sum-&gt;End')\n    E('sum-&gt;add1_again',cond=is112)\n    E('add1_again-&gt;add1')\n\n    #EXPLAIN what are legal parallel cut\n\n\n\n\n\n\n\n\n\nwith checkLogs(name='__main__'):\n    d.factored_graph,_ = compress_cuts(d.graph,'Start','End')\n\n\ndraw_diagram(d,factored=True)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ndraw_nx(d.factored_graph)\n\n\n\n\n\n\n\n\n\ndraw_nx(d.factored_graph.nodes['anon_from_add1_to_sum']['func'].factored_graph)\n\n\n\n\n\n\n\n\n\nwith checkLogs(name='__main__'):\n    TestD.factored_graph,_ = compress_cuts(TestD.graph,'Start','End')\n\n\ndraw_diagram(TestD,factored=False)\n\n\n\n\n\n\n\n\n\ndraw_diagram(TestD,factored=True)"
  },
  {
    "objectID": "diagrams.html#validation-of-diagrams",
    "href": "diagrams.html#validation-of-diagrams",
    "title": "Diagrams",
    "section": "Validation of diagrams",
    "text": "Validation of diagrams\n\n# Handling state conflicts\n# flow nodes cant write state if they have a non one mutiplicity\n# or if there is another node that reads or writes the same state\n\n# for nested anonymous diagrams, where state is shared, we need an ownership mechanism\n# each subdiagram has who it reads and writes to, and we need to make sure that there are no multiplicities except multiple readers at once.\n\n# also, we need to figure out how to avoid sharing states between a subdiagram that is used twice in a flow diagram. we need to make copies of the diagram for each one.\n\n# currently, to start, I won't allow writing to shared state within a flow diagram.\n# this is done by checking read_keys and write_keys on the unfactored graph\n\n\nsource\n\nDiagramSchema.post_def\n\n DiagramSchema.post_def ()\n\nvalidate the graph and factor it\n\n\nTest\n\nwith checkLogs(name='__main__'):\n    with Define('test_d',type='decision',validate=False) as test_d:\n        V('process4',is_break=True)\n        E('Start-&gt;process4')\n        E('process4-&gt;End')\n        E('Start-&gt;process1',cond=NamedLambda('is_even',lambda x: x%2==0))\n        E('identity-&gt;End')\n\n        with Scope('flow'):\n            V('process1',\n                func=NamedLambda('add1',lambda x: x+1),\n                outputs=['state/result'],)\n            V('process2',\n                func=NamedLambda('add2',lambda x: x+2),\n                inputs=['process1'],\n                for_each =[0]\n                )\n            V('process3',\n                func=NamedLambda('add5',lambda x: x+5),\n                inputs=['process1'],)\n            V('identity',\n                inputs=['process2(x=a)',\n                        'process3(y=b)',\n                        'state/result(input=.)',\n                        ],\n                        )\n\n\n\n\n\n\n\n\n\ndisplay(draw_nx(test_d.graph))\n\n\n\n\n\n\n\n\n\ntest_d.factored_graph,test_d.type = compress_cuts(test_d.graph,test_d.start_node,test_d.end_node)\n\n\ndisplay(draw_nx(test_d.graph))\n\n\n\n\n\n\n\n\n\ndisplay(draw_nx(test_d.factored_graph))\ndisplay(draw_nx(test_d.factored_graph.nodes['anon_from_process1_to_identity']['func'].factored_graph))"
  },
  {
    "objectID": "diagrams.html#execution-functions",
    "href": "diagrams.html#execution-functions",
    "title": "Diagrams",
    "section": "Execution functions",
    "text": "Execution functions\n\nGet and Set state\n\nsource\n\n\nDiagramSchema.get_input_only_state_keys\n\n DiagramSchema.get_input_only_state_keys ()\n\n\n\nnode input output\n\ndraw_nx(test_d.factored_graph)\n\n\n\n\n\n\n\n\n\nsource\n\n\nDiagram.compute_node_input\n\n Diagram.compute_node_input (node, previous_outputs, state,\n                             raw_input=False, partial=False)\n\nPrepare the input for the next node execution\n\n\nTraces\n\nsource\n\n\nTruncatedPrettyPrinter\n\n TruncatedPrettyPrinter (*args, str_length=100, **kwargs)\n\n*Handle pretty printing operations onto a stream using a set of configured parameters.\nindent Number of spaces to indent for each level of nesting.\nwidth Attempted maximum number of columns in the output.\ndepth The maximum depth to print out nested structures.\nstream The desired output stream. If omitted (or false), the standard output stream available at construction will be used.\ncompact If true, several items will be combined in one line.\nsort_dicts If true, dict keys are sorted.\nunderscore_numbers If true, digit groups are separated with underscores.*\n\nsource\n\n\nTrace\n\n Trace (run_uid:str, node_uid:str, node_name:List[str],\n        input_idx:List[Optional[int]]=[None],\n        node_func:Optional[Any]=None,\n        input_state_keys:Optional[set[str]]=None, input_:Any,\n        output:Optional[Any]=None, run_type:__main__.DiagramType,\n        start_time:Optional[datetime.datetime]=None,\n        end_time:Optional[datetime.datetime]=None)\n\n*Usage docs: https://docs.pydantic.dev/2.10/concepts/models/\nA base class for creating Pydantic models.\nAttributes: class_vars: The names of the class variables defined on the model. private_attributes: Metadata about the private attributes of the model. signature: The synthesized __init__ [Signature][inspect.Signature] of the model.\n__pydantic_complete__: Whether model building is completed, or if there are still undefined fields.\n__pydantic_core_schema__: The core schema of the model.\n__pydantic_custom_init__: Whether the model has a custom `__init__` function.\n__pydantic_decorators__: Metadata containing the decorators defined on the model.\n    This replaces `Model.__validators__` and `Model.__root_validators__` from Pydantic V1.\n__pydantic_generic_metadata__: Metadata for generic models; contains data used for a similar purpose to\n    __args__, __origin__, __parameters__ in typing-module generics. May eventually be replaced by these.\n__pydantic_parent_namespace__: Parent namespace of the model, used for automatic rebuilding of models.\n__pydantic_post_init__: The name of the post-init method for the model, if defined.\n__pydantic_root_model__: Whether the model is a [`RootModel`][pydantic.root_model.RootModel].\n__pydantic_serializer__: The `pydantic-core` `SchemaSerializer` used to dump instances of the model.\n__pydantic_validator__: The `pydantic-core` `SchemaValidator` used to validate instances of the model.\n\n__pydantic_fields__: A dictionary of field names and their corresponding [`FieldInfo`][pydantic.fields.FieldInfo] objects.\n__pydantic_computed_fields__: A dictionary of computed field names and their corresponding [`ComputedFieldInfo`][pydantic.fields.ComputedFieldInfo] objects.\n\n__pydantic_extra__: A dictionary containing extra values, if [`extra`][pydantic.config.ConfigDict.extra]\n    is set to `'allow'`.\n__pydantic_fields_set__: The names of fields explicitly set during instantiation.\n__pydantic_private__: Values of private attributes set on the model instance.*\n\nsource\n\n\nDiagram.prep_trace\n\n Diagram.prep_trace (node, input_, output, type=&lt;DiagramType.decision:\n                     'decision'&gt;, idx=None, start_time=None,\n                     end_time=None)\n\n\n\nRunning nodes\n\nsource\n\n\nDiagram.run_subdiagram_iter\n\n Diagram.run_subdiagram_iter (node, input_, subdiagram, idx=None)\n\nRun a subdiagram as a node yields traces from the subdiagram returns the output of the subdiagram and the subdiagram itself\n\nsource\n\n\nDiagram.run_node\n\n Diagram.run_node (node, input_, idx=None)\n\n\nsource\n\n\nsimplify_output\n\n simplify_output (input_)\n\n\n\nRun Decision Diagrams\n\n# we need to factor the port mapping out into a seperate function that works on mapping data.\n# we save the mapping data during post_def\n# we can check for conflicts in the mapping data based on the decision/flow semantics.\n# and then we use it in the arun decision and arun flow functions\n\n# this function should be in pos_kwargs syntax, we can probably simplify the function inputclass by just keeping the assert and the args kwargs as functions.\n# when we are in decision, lets us a read_keys to output function\n# and then just pass the mapping data with ('father_node','state') to the mapping\n# in flow, we will paritally apply the mapping data to the input ports. as new fathers finish, ultimately merging stream and regular inputs.\n\n\nsource\n\n\nDiagram.arun_decision\n\n Diagram.arun_decision (input_, state, **kwargs)\n\n\nsource\n\n\nDiagram.choose_next_node\n\n Diagram.choose_next_node (node, output)\n\nBased on the output of the last node, choose the next node returns the next node to run, or None if we are at the end\n\n\nRun Flow Diagrams\n\nsource\n\n\nDiagram.update_state\n\n Diagram.update_state (graph, node)\n\n\nsource\n\n\nDiagram.can_generate_new_input\n\n Diagram.can_generate_new_input (graph, node)\n\n\nsource\n\n\nNodeState\n\n NodeState (*values)\n\n*Create a collection of name/value pairs.\nExample enumeration:\n\n\n\nclass Color(Enum): … RED = 1 … BLUE = 2 … GREEN = 3\n\n\n\nAccess them by:\n\nattribute access:\n\n\n\nColor.RED &lt;Color.RED: 1&gt;\n\n\n\nvalue lookup:\n\n\n\nColor(1) &lt;Color.RED: 1&gt;\n\n\n\nname lookup:\n\n\n\nColor[‘RED’] &lt;Color.RED: 1&gt;\n\n\n\n\nEnumerations can be iterated over, and know how many members they have:\n\n\n\nlen(Color) 3\n\n\n\n\n\n\nlist(Color) [&lt;Color.RED: 1&gt;, &lt;Color.BLUE: 2&gt;, &lt;Color.GREEN: 3&gt;]\n\n\n\nMethods can be added to enumerations, and members can have their own attributes – see the documentation for details.*\n\nsource\n\n\nDiagram.enqueue_task\n\n Diagram.enqueue_task (node, input_, idx)\n\n*Create appropriate task type and add to corresponding task dict. Handles AsyncIter initialization and tracks task creation time.\nArgs: node: Node to execute input_: Input data for the node idx: Execution index for the node tasks: Dict of regular tasks iterator_tasks: Dict of iterator tasks subdiagram_tasks: Dict of subdiagram tasks*\n\nsource\n\n\nDiagram.handle_finished_task\n\n Diagram.handle_finished_task (task)\n\n*Handle a completed task and return node, trace, and outputs\nArgs: task: The completed asyncio task\nReturns: Tuple of: - node: The node that completed - trace: The execution trace (or None) - outputs: List of outputs (or None)*\n\nsource\n\n\nDiagram.enqueue_new_input\n\n Diagram.enqueue_new_input (graph, node, father_node, new_father_outputs)\n\n*Lets look at this example U.(x,y)-&gt;V.(a,b) V foreach a U is a stream node W.(z,w)-&gt;V.(c,d) V foreach d W is a regular node M.(a,b)-&gt;V.(e,f) V for each e,f, M is a stream node N.(a,b)-&gt;V.(g,h) V for each g,h, N is a regular node\nWe need to have all 8 of a,b,c,d,e,f,g,h Since W is regular, once we compute it, we portmap it to c,d and overide them Since U is a stream node, we need to get every item from it and extend the port mappings Both W and U have a regular port, so we need to wait for both to finish N is a regular node but all it’s outputs are foreach nodes, so we dont need to wait for it but we cant run until it finishes\nM only has foreach nodes, so we dont need to wait for it We need to wait till for both ot finish since both have a foreach\nthen we have a mapped dict of: { a: a list since U is a stream node b: a list since U is a stream node c: some object since W is a regular node d: a list since we need to for each it (we need to check this) e-h: lists since we are foreach }*\n\nsource\n\n\nDiagram.arun_flow\n\n Diagram.arun_flow (input_, state=None)\n\nRun a flow diagram asynchronously, yielding traces for each node execution\n\n\nMain execution functions\n\nsource\n\n\nDiagram.load_external_state\n\n Diagram.load_external_state (outside_state=None)\n\n\nsource\n\n\nDiagram.run_all\n\n Diagram.run_all (input:Any,\n                  state:Union[pydantic.main.BaseModel,Dict]=None,\n                  progress_bars:bool=True, trace_nested:bool=True)\n\n*Run the diagram to completion and return the final output.\nArgs: input: The input data to process through the diagram state: Optional state to initialize the diagram with progress_bars: Whether to display progress bars during execution (default True). Deprecated. trace_nested: Whether to trace nested diagram execution (default True)\nReturns: The final output after diagram execution completes*\n\nsource\n\n\nDiagram.run\n\n Diagram.run (input:Any, state:Union[pydantic.main.BaseModel,Dict]=None,\n              progress_bars:bool=True, trace_nested:bool=True)\n\n*Run the diagram with the given input and state.\nArgs: input: The input data to process through the diagram state: Optional state to initialize the diagram with progress_bars: Whether to display progress bars during execution (default True). Deprecated. trace_nested: Whether to trace nested diagram execution (default True)\nYields: Trace objects containing execution state at each step*\n\nsource\n\n\nDiagram.arun\n\n Diagram.arun (input:Any, state:Union[pydantic.main.BaseModel,Dict]=None,\n               progress_bars:bool=True, trace_nested:bool=True)\n\n*Asynchronously run the diagram with the given input and state.\nArgs: input: The input data to process through the diagram state: Optional state to initialize the diagram with progress_bars: Whether to display progress bars during execution (default True). Deprecated. trace_nested: Whether to trace nested diagram execution (default True)\nYields: Trace objects containing execution state at each step*\n\nsource\n\n\nDiagram.get_node_func\n\n Diagram.get_node_func (node)\n\n*Get the function associated with a node in the diagram.\nArgs: node: The node identifier to get the function for\nReturns: The function associated with the given node in the diagram*\n\n# TODO future\n# show if clause for condition edge in drawing, and annotation for setting state\n# TODO add support for progress bars."
  },
  {
    "objectID": "diagrams.html#export",
    "href": "diagrams.html#export",
    "title": "Diagrams",
    "section": "Export",
    "text": "Export"
  },
  {
    "objectID": "docs/nodes/tools.html",
    "href": "docs/nodes/tools.html",
    "title": "Tools",
    "section": "",
    "text": "Here are some example tools for LLM agents\n\nfrom ladle.tools import google_search,wikipedia_search,run_python_code\n\n## google_search\n\nsource\n\n\nSignature: google_search(q: str, location: str = 'Austin, Texas', engine: str = 'google_scholar')\n\nSearch the web for information using various search engines.\nThis function performs web searches using the SerpAPI client, allowing access to information from different search engines including Google Scholar. Results include source information for verification.\n\n\n\n\n\n\n\n\n\nParameter\nType\nDefault\nDescription\n\n\n\n\nq\n&lt;class ‘str’&gt;\nNone\nThe search query string.\n\n\nlocation\n&lt;class ‘str’&gt;\nAustin, Texas\nThe location to use for localized search results.Defaults to ‘Austin, Texas’.\n\n\nengine\n&lt;class ‘str’&gt;\ngoogle_scholar\nThe search engine to use. Defaults to ‘google_scholar’.\n\n\n:Returns:\ndict\n-\nA dictionary containing the search results and metadata from the SerpAPIresponse.\n\n\n\n## wikipedia_search\n\nsource\n\n\nSignature: wikipedia_search(q: str)\n\nA tool to query wikipedia, useful when you need to find information about a specific topic or person that is well known. Useful when you dont have enough context to reason about how to answer the question.\n\n\n\nParameter\nType\nDefault\nDescription\n\n\n\n\nq\n&lt;class ‘str’&gt;\nNone\nThe query string to search for\n\n\n:Returns:\nstr\n-\nThe wikipedia search results\n\n\n\n## run_python_code\n\nsource\n\n\nSignature: run_python_code(code: str)\n\nExecute python code, useful when you need to do a calculation or a simple task Input should be a valid python code. If you want to see the output of a variable, the last line of the code should be that variable name.\n\n\n\n\n\n\n\n\n\nParameter\nType\nDefault\nDescription\n\n\n\n\ncode\n&lt;class ‘str’&gt;\nNone\nPython code to execute\n\n\n:Returns:\nstr\n-\nOutput from executing the code, either the value of the last line or the error message\n\n\n\n\nrun_python_code('''\nx=2\nx*3\n''')\n\n6",
    "crumbs": [
      "LLM nodes",
      "Tools"
    ]
  },
  {
    "objectID": "docs/nodes/chat.html",
    "href": "docs/nodes/chat.html",
    "title": "LLMs",
    "section": "",
    "text": "This is an example of how to implement a LLM based functions, for use in our agent examples. Feel free to look at the source code and fit it for your own usecase.",
    "crumbs": [
      "LLM nodes",
      "LLMs"
    ]
  },
  {
    "objectID": "docs/nodes/chat.html#chat",
    "href": "docs/nodes/chat.html#chat",
    "title": "LLMs",
    "section": "Chat",
    "text": "Chat\n\nfrom ladle.chat import Chat\n\n## Chat\n\nsource\n\n\nSignature: Chat(model: Optional[str] = None, messages: Optional[List[Dict[str, str]]] = None, output_schema: Optional[pydantic.main.BaseModel] = None, as_json: Optional[bool] = False, tools: Optional[Dict[str, Callable]] = None, call_function: Optional[bool] = False, choices: Optional[enum.Enum] = None, multi_choice: Optional[bool] = False, seed: Optional[int] = 42, stop: Union[str, List[str], NoneType] = None, log_prompt: bool = False, save_history: bool = False, append_output: bool = False, init_messages: Optional[List[Dict[str, str]]] = None, **kwargs)\n\nA Chat objects the renders a prompt and calls an LLM. Currenlty supporting openai models.\n\n\n\n\n\n\n\n\n\nParameter\nType\nDefault\nDescription\n\n\n\n\nmodel\ntyping.Optional[str]\nNone\nOpenAI model name\n\n\nmessages\ntyping.Optional[typing.List[typing.Dict[str, str]]]\nNone\nList of message dicts, must have at least a role and content field\n\n\noutput_schema\ntyping.Optional[pydantic.main.BaseModel]\nNone\nOptional schema for structured output\n\n\nas_json\ntyping.Optional[bool]\nFalse\nOptional boolean to return the response as a json object\n\n\ntools\ntyping.Optional[typing.Dict[str, typing.Callable]]\nNone\nOptional dictionary of tool names and functions that the LLM can decide to call. Causes the content of the responseto be a dict of the form {‘name’:tool_name,‘input’:tool_input_dict}\n\n\ncall_function\ntyping.Optional[bool]\nFalse\nif tools are provided, whether to call the function and save the output in the output field of the response’s content\n\n\nchoices\ntyping.Optional[enum.Enum]\nNone\nOptional List of choices for multi-choice questions\n\n\nmulti_choice\ntyping.Optional[bool]\nFalse\nif choices are provided, whether to choose multiple items from the list\n\n\nseed\ntyping.Optional[int]\n42\nOptional seed for random number generation\n\n\nstop\ntyping.Union[str, typing.List[str], NoneType]\nNone\nOptional string or list of strings where the model should stop generating\n\n\nsave_history\n&lt;class ‘bool’&gt;\nFalse\nOptional boolean to save the history of the chat between calls\n\n\nappend_output\n&lt;class ‘bool’&gt;\nFalse\nOptional, whether to append the output of the chat to history automatically, default False\n\n\ninit_messages\ntyping.Optional[typing.List[typing.Dict[str, str]]]\nNone\nOptional list of messages to init state histroy with, only used if save_history is True\n\n\n**kwargs\nNone\nNone\nKeyword arguments to interpolate into the messages\n\n\n\n\n__call__\nFormat prompt with kwargs and call OpenAI chat. Init parameters such as output_schema, tools, choices, seed, stop, as well as template variables can be set or overridden by kwargs &gt; Signature: Chat.\\_\\_call\\_\\_(self, **kwargs) -&gt; Dict[str, Any]\n\n\n\nParameter\nType\nDefault\nDescription\n\n\n\n\n**kwargs\nNone\nNone\nValues for format string placeholders\n\n\n\n\n\nExamples\n\nmessages=[\n        {\"role\": \"system\", \"content\": \"Given a sentence, classify it into one of these topics: science, history, technology, or arts. Choose the single most relevant topic.\"},\n        {\"role\": \"user\", \"content\": \"{{text}}\"}\n    ]\n    \ntopic_classifier = Chat(\n    model=\"gpt-4o-mini\",\n    messages=messages,\n    choices = ['science', 'history', 'technology', 'arts'],\n    seed=42,\n)\ntopic_classifier\n\nChat(model='gpt-4o-mini', required_keys={'text'}, choices=['science', 'history', 'technology', 'arts'], seed=42)\n\n\n\nawait topic_classifier(text=\"WWII was a global conflict that lasted from 1939 to 1945.\")\n\n{'role': 'assistant',\n 'content': 'history',\n 'meta': {'input_tokens': 180, 'output_tokens': 10}}\n\n\n\nfrom pydantic import BaseModel\n\n\nclass Person(BaseModel):\n    first_name: str\n    last_name: str\n    date_of_birth: int\n\nprompted_llm = Chat(model=\"gpt-4o-mini\", messages=\n    [   \n        {\"role\": \"user\", \"content\": \"how old am i? {{name}}, {{age}} years old\"},\n        # {\"role\": \"assistant\", \"content\": \"Iam {{model_name}}, You are {{name}}, {{age}} years old\"}\n    ],\n     output_schema=Person)\nprompted_llm\n\nChat(model='gpt-4o-mini', required_keys={'age', 'name'}, output_schema=Person, seed=42)\n\n\n\nawait prompted_llm(model_name=\"gpt-4o-mini\", age=30,name=\"Jake\")\n\n{'role': 'assistant',\n 'content': Person(first_name='Jake', last_name='', date_of_birth=1993),\n 'meta': {'input_tokens': 186, 'output_tokens': 27}}\n\n\n\ndef google_search_stub(query:str):\n    \"\"\"\n    Search the web for the query\n    Args:\n        query: The query to search for\n    Returns:\n        The URL of the search results\n    \"\"\"\n    return f\"https://www.google.com/search?q={query.replace(' ','_')}\"\n\ntools = {'google_search': google_search_stub}\n\ngoogle_search = Chat(model=\"gpt-4o-mini\", messages=[{\"role\": \"user\", \"content\": \"{{text}}\"}], tools=tools, call_function=True)\nres = await google_search(text=\"What is the capital of France?\")\nassert res['content'] == {'name': 'google_search',\n  'input': {'query': 'What is the capital of France?'},\n  'output': 'https://www.google.com/search?q=What_is_the_capital_of_France?'}\nres\n\n{'role': 'assistant',\n 'content': {'name': 'google_search',\n  'input': {'query': 'What is the capital of France?'},\n  'output': 'https://www.google.com/search?q=What_is_the_capital_of_France?'},\n 'meta': {'input_tokens': 365, 'output_tokens': 32}}",
    "crumbs": [
      "LLM nodes",
      "LLMs"
    ]
  },
  {
    "objectID": "docs/nodes/chat.html#image-to-text",
    "href": "docs/nodes/chat.html#image-to-text",
    "title": "LLMs",
    "section": "Image to Text",
    "text": "Image to Text\n\nfrom ladle.chat import image_to_text\n\n## image_to_text\n\nsource\n\n\nSignature: image_to_text(path: str, model: str = 'gpt-4o-mini', url=False)\n\nThis function takes an image (either from a local file path or URL) and uses OpenAI’s vision model to generate a detailed description of the image contents. The results are cached using disk_cache to avoid redundant API calls.\n\n\n\n\n\n\n\n\n\nParameter\nType\nDefault\nDescription\n\n\n\n\npath\n&lt;class ‘str’&gt;\nNone\nPath to the image file or URL of the image\n\n\nmodel\n&lt;class ‘str’&gt;\ngpt-4o-mini\nOpenAI model to use for image analysis. Defaults to “gpt-4o-mini”.\n\n\nurl\nbool\nFalse\nWhether the path is a URL. Defaults to False.\n\n\n:Returns:\ndict\n-\nA dictionary containing:- role (str): Always “assistant”- content (str): Detailed description of the image- meta (dict): Usage statistics including input and output tokens\n\n\n\n\nawait image_to_text('../../../sample_data/fox.jpeg')\n\n{'role': 'assistant',\n 'content': \"The image features a close-up of a fox's face. The fox has a bushy, reddish-brown fur with lighter shades on its face and underbelly. It has pointed ears with dark tips, and its eyes appear sharp, reflecting a sense of alertness. The background is blurred, emphasizing the fox's facial features. The lighting suggests a warm, soft glow, highlighting the textures of the fur.\",\n 'meta': {'input_tokens': 8626, 'output_tokens': 91}}",
    "crumbs": [
      "LLM nodes",
      "LLMs"
    ]
  },
  {
    "objectID": "docs/nodes/chat.html#speech-to-text",
    "href": "docs/nodes/chat.html#speech-to-text",
    "title": "LLMs",
    "section": "Speech to Text",
    "text": "Speech to Text\n\nfrom ladle.chat import speech_to_text\n\n## speech_to_text\n\nsource\n\n\nSignature: speech_to_text(audio_path: str, model: str = 'whisper-1') -&gt; Dict[str, str]\n\nExtract text from an audio file using OpenAI’s Whisper model.\n\n\n\n\n\n\n\n\n\nParameter\nType\nDefault\nDescription\n\n\n\n\naudio_path\n&lt;class ‘str’&gt;\nNone\nPath to the audio file\n\n\nmodel\n&lt;class ‘str’&gt;\nwhisper-1\nOpenAI model to use. Defaults to “whisper-1”.\n\n\n:Returns:\ntyping.Dict[str, str]\n-\nA dictionary containing: - role (str): Always “assistant”- content (str): Transcribed text from the audio\n\n\n\n\nawait speech_to_text('../../../sample_data/happy_speech.wav')\n\n{'role': 'assistant',\n 'content': \"Look at this, my hands are standing up in my arms, I'm giving myself goosebumps.\"}",
    "crumbs": [
      "LLM nodes",
      "LLMs"
    ]
  },
  {
    "objectID": "docs/examples/interactive_qa_db.html",
    "href": "docs/examples/interactive_qa_db.html",
    "title": "Interactive QA with DB",
    "section": "",
    "text": "from pathlib import Path\nfrom pprint import pprint\nfrom pydantic import BaseModel,Field,ConfigDict\nfrom typing import Union,Literal,Optional\nfrom sqlmodel import SQLModel, Session, select, Field\n\nfrom ladle.diagrams import (\n    Define,Scope,\n    V,E,\n    draw_diagram\n)\nfrom ladle.core import has_missing\nfrom ladle.chat import Chat\nfrom ladle.std import Condition as C\nfrom ladle.db import temp_sql_db",
    "crumbs": [
      "Examples",
      "Interactive QA with DB"
    ]
  },
  {
    "objectID": "docs/examples/interactive_qa_db.html#collect-missing-data-from-user",
    "href": "docs/examples/interactive_qa_db.html#collect-missing-data-from-user",
    "title": "Interactive QA with DB",
    "section": "Collect missing data from user",
    "text": "Collect missing data from user\nIn this example we will create an agent the collects missing data from the user with the following imporvements: * The user will check if we already have data for the user, if we do, they will confirm it is correct * If the user takes too long to respond, the agent will save the current state with the missing data and continue later * the agent will save the data to the db oncce we have all the data\n\nengine = temp_sql_db(echo=False)\n\n\nSQLModel.metadata.clear()\n\n#  Define your model (if using SQLModel)\nclass User(SQLModel, table=True,extend_existing=True):\n    id: int = Field(default=None, primary_key=True)\n    name: Optional[str] = Field(default=None)\n    age: Optional[int] = Field(default=None)\n    email: Optional[str] = Field(default=None)\n\nSQLModel.metadata.create_all(engine)\n\n\nask_missing_data = Chat(\n    model='gpt-4o-mini',\n    messages=[\n        {'role':'system','content':'''\n        You are a helpful assistant asks the user for missing information.\n        The information we have so far is:\n        {{current_info}}\n        Ask the user for the missing information.\n        '''}])\n\nformat_new_info = Chat(\n    model='gpt-4o-mini',\n    messages=[\n        {'role':'system','content':'''\n        You are a helpful assistant that gets user data and makes sure it is complete.\n        If you are not sure that you were given the relevant information, put None in the relevant field.\n        {% if current_info %}\n        The information we have so far is:\n        {{current_info}}\n        {% endif %}\n        The user will supply the missing information.\n        '''},\n        {'role':'user','content':'{{input}}'},\n    ],\n    output_schema=User)\n\nhas_missing_data = C(has_missing,'(0=content)',name='has_missing_data')\n\n\nres = await format_new_info(input='my age is 20',current_info=User(id=1, name=\"Alice\"))\nres\n\n{'role': 'assistant',\n 'content': User(id=1, name='Alice', age=20, email=None),\n 'meta': {'input_tokens': 327, 'output_tokens': 30}}\n\n\n\n# Define a Custom State Object\n\n\nclass UserDBState(BaseModel):\n    model_config = ConfigDict(extra='allow')\n    user_id:int\n    _user:Optional[User]=None\n\n    @property\n    def engine(self):\n        return temp_sql_db(echo=False)\n\n    def get_user(self):\n        user_id = self.user_id\n        if not self._user is None:\n            return self._user\n        with Session(self.engine) as session:\n            user = session.exec(select(User).where(User.id == user_id)).first()\n            self._user = user\n            return user\n\n    def add_user(self,user_data):\n        self._user = user_data\n        with Session(self.engine) as session:\n            session.merge(user_data)\n            session.commit()\n\n\nstate = UserDBState(user_id=1)\nprint(state.get_user())\nstate.add_user(User(id=1,name='Alice',age=30,email='alice@example.com'))\nprint(state.get_user())\n\nNone\nid=1 name='Alice' age=30 email='alice@example.com'\n\n\n\nwith Define('fill missing user with db',type='decision',state=UserDBState) as D:\n    \n    V('Start',inputs=['state/get_user(content)'],\n        outputs=[\n            ('ask_missing_data(_)',has_missing_data),\n            'End',\n            ]\n        )\n\n    V('ask_missing_data',ask_missing_data,\n        inputs=['state/get_user(current_info)'],\n        outputs=['break']\n    )\n\n    V('break',is_break=True,outputs=['format_new_info(input)'])\n\n    \n    V('format_new_info',format_new_info,\n        inputs=['state/get_user(current_info)'],\n        outputs=[\n            ('ask_missing_data(_)',has_missing_data),\n            'End',\n            'state/add_user(0=content)'\n        ])\n\n\n\n\n\n\n\n\n\nd = D()\n# with checkLogs(name='ladle.diagrams'):\nfor trace in d.run(input=None,state={'user_id':1,'db_string':'Memory'}):\n    trace.pprint()\n\nd.output\n\nNode Start:\n{ 'input': { 0: None,\n             'content': User(age=30, id=1, name='Alice', email='alice@example.com')},\n  'output': { 0: None,\n              'content': User(age=30, id=1, name='Alice', email='alice@example.com')}}\n================================================================================\nNode End:\n{ 'input': { 0: { 0: None,\n                  'content': User(age=30, id=1, name='Alice', email='alice@example.com')}},\n  'output': { 0: None,\n              'content': User(age=30, id=1, name='Alice', email='alice@example.com')}}\n================================================================================\n\n\n{0: None,\n 'content': User(age=30, id=1, name='Alice', email='alice@example.com')}\n\n\n\nd.state\n\nUserDBState(user_id=1, db_string='Memory')\n\n\n\nd.state.get_user()\n\nUser(age=30, id=1, name='Alice', email='alice@example.com')",
    "crumbs": [
      "Examples",
      "Interactive QA with DB"
    ]
  },
  {
    "objectID": "docs/examples/002_react.html",
    "href": "docs/examples/002_react.html",
    "title": "React Agent",
    "section": "",
    "text": "from pprint import pprint\nfrom pathlib import Path\n\nfrom typing import Union,Literal\nfrom pydantic import BaseModel,Field\n\nfrom ladle.diagrams import (\n    Define,Scope,\n    V,E,\n    draw_diagram\n)\nfrom ladle.chat import Chat\nfrom ladle.std import Condition as C\nfrom ladle.db import ChromaClient\nfrom ladle.tools import google_search, wikipedia_search,run_python_code\n\n\nreact_system_prompt = [{'role':'system','content':\"\"\"\nAnswer the following questions as best you can.\nHere is an example of the format of the answer:\nQuestion: the input question you must answer\nThought: you should always think about what to do\nTool Name: the name of the tool you will use\nTool Input: the input to the tool\nObservation: the result of the tool\nThis thought - tool name - tool input - observation can repeat N times\nFinal Answer: the final answer to the original input question\nEach time you are prompter either provide a thought that you need to use a tool or provide a final answer.\nthe tool name, input and observation will be provided to you in the next message.\n\nExample:\nuser:\nQuestion: what is the year five years from now?\nassistant:\nThought: I need to compute the current year\nTool Name: wikipedia_search\nTool Input: {query: 'what is the current year'}\nObservation: 2024\nThought: I need to add 5 to the current year\nTool Name: run_python_code\nTool Input: {code: 'import datetime; result = datetime.datetime.now().year + 5',output_expression='result'}\nObservation: 2029\nFinal Answer: 2029\n\"\"\"}]\n\n\nclass Thought(BaseModel):\n    type: Literal['thought','final_answer']\n    text: str\n\nreact_cot_chat = Chat(model='gpt-4o-mini',\n    save_history=True,\n    init_messages=react_system_prompt,\n    output_schema=Thought,\n    )\nreact_cot_chat\n\nChat(model='gpt-4o-mini', output_schema=Thought, seed=42, save_history=True)\n\n\n\nres = await react_cot_chat(messages=[{'role':'user','content':'Question: what is obamas age to the power of 2?'}],print_prompt=True)\npprint(res)\nreact_cot_chat.reset()\n\n[{'role': 'system', 'content': \"Answer the following questions as best you can.\\nHere is an example of the format of the answer:\\nQuestion: the input question you must answer\\nThought: you should always think about what to do\\nTool Name: the name of the tool you will use\\nTool Input: the input to the tool\\nObservation: the result of the tool\\nThis thought - tool name - tool input - observation can repeat N times\\nFinal Answer: the final answer to the original input question\\nEach time you are prompter either provide a thought that you need to use a tool or provide a final answer.\\nthe tool name, input and observation will be provided to you in the next message.\\n\\nExample:\\nuser:\\nQuestion: what is the year five years from now?\\nassistant:\\nThought: I need to compute the current year\\nTool Name: wikipedia_search\\nTool Input: {query: 'what is the current year'}\\nObservation: 2024\\nThought: I need to add 5 to the current year\\nTool Name: run_python_code\\nTool Input: {code: 'import datetime; result = datetime.datetime.now().year + 5',output_expression='result'}\\nObservation: 2029\\nFinal Answer: 2029\"}, {'role': 'user', 'content': 'Question: what is obamas age to the power of 2?'}]\n{'content': Thought(type='thought', text=\"I need to determine Obama's current age.\"),\n 'meta': {'input_tokens': 415, 'output_tokens': 23},\n 'role': 'assistant'}\n\n\n\ntools = {\n    'wikipedia_search':wikipedia_search,\n    'run_python_code':run_python_code,\n}\n\n\nreact_tool_step = Chat(model='gpt-4o-mini',\n    messages= [\n        {'role':'system','content':'choose an appropriate tool to use to answer the following:'},\n        {'role':'user','content':'{{thought}}'}],\n    tools=tools,\n    call_function=True\n    )\nawait react_tool_step(thought='what is the capital of france?')\n\n{'role': 'assistant',\n 'content': {'name': 'wikipedia_search',\n  'input': {'q': 'capital of France'},\n  'output': \"This is a chronological list of capitals of France. The capital of France has been Paris since its liberation in 1944.\\n\\n\\n== Chronology ==\\nTournai (before 486), current-day Belgium\\nSoissons (486–936)\\nLaon (936–987)\\nParis (987–1419), the residence of the Kings of France, although they were consecrated at Reims.\\nOrléans (1108), one of the few consecrations of a French monarch to occur outside of Reims occurred at Orléans, when Louis VI the Fat was consecrated in Orléans Cathedral by Daimbert, Archbishop of Sens; from 13 December 1560 to 31 January 1561, the French States-General also met in the city.\\nTroyes (1419–1422), for a short time during the Hundred Years' War, the city was the seat of the royal government.\\nBourges (1422–1444), Charles VII was forced to flee from Paris.\\nTours (1444–1527), Louis XI made the Château de Plessis-lez-Tours his residence.\\nParis (1528–1589), Francis I had established his court in Paris.\\nTours (1589–1594), faction of parliamentarians, faithful to King Henry IV sat at Tours.\\nParis (1594–1682)\\nVersailles (1682–1789), from 1682 to 1715, Louis XIV made Versailles his residence and the seat of the French court.\\nParis (1789–1871), on 5 and 6 October 1789, a throng from Paris invaded the castle and forced the royal family to move back to Paris. The National Constituent Assembly followed the King to Paris soon afterward; Versailles lost its role of capital city.\\nProvisional seats of the government:\\n\\nVersailles (1871), the French Third Republic established Versailles as its provisional seat of government in March 1871 after the Paris Commune took control of Paris.\\nBordeaux (September 1914), the government was relocated from Paris to Bordeaux very briefly during World War I, when it was feared that Paris would soon fall into German hands. These fears were alleviated after the German Army was pushed back at the First Battle of the Marne.\\nTours (10–13 June 1940), the city served as the temporary capital of France during World War II after the government fled Paris due to the German advance.\\nBordeaux (June 1940), the government was relocated from Paris to Tours then Bordeaux very briefly during World War II, when it became apparent that Paris would soon fall into German hands.\\nClermont-Ferrand (29 June 1940), the government was relocated from Bordeaux to Clermont-Ferrand, during a single day, before going to Vichy, which had a larger hotel capacity.\\nVichy (1940–1944), the Third Republic was abolished in Vichy and replaced it with the French State.\\nBrazzaville (1940–1943), with metropolitan France under Axis powers rule, Brazzaville was announced as the seat of the Free France government.\\nAlgiers (1943–1944), the city was made the seat of Free France, to be closer to the war in Europe.\\nParis (1945-present day).\\n\\n\\n== References ==\"},\n 'meta': {'input_tokens': 681, 'output_tokens': 30}}\n\n\n\nawait react_tool_step(thought='what is the square root of 16?',print_prompt=True)\n\n[{'role': 'system', 'content': 'choose an appropriate tool to use to answer the following thought based on the following tools:\\nwikipedia_search:Memoized version of wikipedia_search(q: str)\\n\\nA tool to query wikipedia, useful when you need to find information about a specific topic or person that is well known.\\nUseful when you dont have enough context to reason about how to answer the question.\\n\\nArgs:\\n    q (str): The query string to search for\\n\\nReturns:\\n    str: The wikipedia search results\\nrun_python_code:Execute python code, useful when you need to do a calculation or a simple task\\nInput should be a valid python code.\\nIf you want to see the output of a variable, the last line of the code should be that variable name.\\n\\nArgs:\\n    code (str): Python code to execute\\n    \\nReturns:\\n    str: Output from executing the code, either the value of the last line or the error message\\n    '}, {'role': 'system', 'content': 'choose an appropriate tool to use to answer the following:'}, {'role': 'user', 'content': 'what is the square root of 16?'}]\n\n\n{'role': 'assistant',\n 'content': {'name': 'run_python_code',\n  'input': {'code': '16**0.5'},\n  'output': 4.0},\n 'meta': {'input_tokens': 683, 'output_tokens': 32}}\n\n\n\ndef react_cot_format(tool_name,input,output):\n    return [{\n        'role':'assistant',\n        'content':f\"\"\"Tool Name: {tool_name}\nTool Input: {input}\nObservation: {output}\"\"\"\n    }]\n\nis_final_answer= C('final_answer','(0=content.type)',name='is_final_answer')\n\n\nwith Define('React Agent',type='decision') as ReactAgent:\n\n    V('thinker',react_cot_chat,\n        inputs = ['Start(messages)'],\n        outputs = [\n            ('End',is_final_answer),\n            'use_tool(thought=content.text)'])\n    V('use_tool',react_tool_step,outputs=['format_tool_call(tool_name=content.name,input=content.input,output=content.output)'])\n    V('format_tool_call',react_cot_format,\n        outputs =[\n            'thinker(messages)'\n        ])\n\n\n\n\n\n\n\n\n\nd=ReactAgent()\nfor trace in d.run(\n    [{'role':'user','content':\"Question: what is obamas age to the power of 2?\"}],\n    ):\n    if trace.pretty_name() in ['thinker','format_tool_call']:\n        pass\n\nd.output\n\n{'role': 'assistant',\n 'content': Thought(type='final_answer', text='4096'),\n 'meta': {'input_tokens': 17998, 'output_tokens': 19}}\n\n\n\nreact_node_chat = d.get_node_func('thinker')\nreact_node_chat.history + [d.output]\n\n[{'role': 'system',\n  'content': \"Answer the following questions as best you can.\\nHere is an example of the format of the answer:\\nQuestion: the input question you must answer\\nThought: you should always think about what to do\\nTool Name: the name of the tool you will use\\nTool Input: the input to the tool\\nObservation: the result of the tool\\nThis thought - tool name - tool input - observation can repeat N times\\nFinal Answer: the final answer to the original input question\\nEach time you are prompter either provide a thought that you need to use a tool or provide a final answer.\\nthe tool name, input and observation will be provided to you in the next message.\\n\\nExample:\\nuser:\\nQuestion: what is the year five years from now?\\nassistant:\\nThought: I need to compute the current year\\nTool Name: wikipedia_search\\nTool Input: {query: 'what is the current year'}\\nObservation: 2024\\nThought: I need to add 5 to the current year\\nTool Name: run_python_code\\nTool Input: {code: 'import datetime; result = datetime.datetime.now().year + 5',output_expression='result'}\\nObservation: 2029\\nFinal Answer: 2029\"},\n {'role': 'user',\n  'content': 'Question: what is obamas age to the power of 2?'},\n {'role': 'assistant',\n  'content': 'Tool Name: wikipedia_search\\nTool Input: {\\'q\\': \\'Barack Obama\\'}\\nObservation: Barack Hussein Obama II (born August 4, 1961) is an American politician who was the 44th president of the United States from 2009 to 2017. A member of the Democratic Party, he was the first African-American president in American history. Obama previously served as a U.S. senator representing Illinois from 2005 to 2008 and as an Illinois state senator from 1997 to 2004.\\nBorn in Honolulu, Hawaii, Obama graduated from Columbia University in 1983 with a Bachelor of Arts degree in political science and later worked as a community organizer in Chicago. In 1988, Obama enrolled in Harvard Law School, where he was the first black president of the Harvard Law Review. He became a civil rights attorney and an academic, teaching constitutional law at the University of Chicago Law School from 1992 to 2004. In 1996, Obama was elected to represent the 13th district in the Illinois Senate, a position he held until 2004, when he successfully ran for the U.S. Senate. In the 2008 presidential election, after a close primary campaign against Hillary Clinton, he was nominated by the Democratic Party for president. Obama selected Joe Biden as his running mate and defeated Republican nominee John McCain and his running mate Sarah Palin.\\nObama was awarded the 2009 Nobel Peace Prize for efforts in international diplomacy, a decision which drew both criticism and praise. During his first term, his administration responded to the 2008 financial crisis with measures including the American Recovery and Reinvestment Act of 2009, a major stimulus package to guide the economy in recovering from the Great Recession; a partial extension of the Bush tax cuts; legislation to reform health care; and the Dodd–Frank Wall Street Reform and Consumer Protection Act, a major financial regulation reform bill. Obama also appointed Supreme Court justices Sonia Sotomayor and Elena Kagan, the former being the first Hispanic American on the Supreme Court. He oversaw the end of the Iraq War and ordered Operation Neptune Spear, the raid that killed Osama bin Laden, who was responsible for the September 11 attacks. Obama downplayed Bush\\'s counterinsurgency model, expanding air strikes and making extensive use of special forces, while encouraging greater reliance on host-government militaries. He also ordered the 2011 military intervention in Libya to implement United Nations Security Council Resolution 1973, contributing to the overthrow of Muammar Gaddafi and the outbreak of the Libyan crisis.\\nObama defeated Republican opponent Mitt Romney and his running mate Paul Ryan in the 2012 presidential election. In his second term, Obama advocated for gun control in the wake of the Sandy Hook Elementary School shooting, took steps to combat climate change, signing the Paris Agreement, a major international climate agreement, and an executive order to limit carbon emissions. Obama also presided over the implementation of the Affordable Care Act and other legislation passed in his first term. He initiated sanctions against Russia following the invasion in Ukraine and again after Russian interference in the 2016 U.S. elections, ordered military intervention in Iraq in response to gains made by ISIL following the 2011 withdrawal from Iraq, negotiated the Joint Comprehensive Plan of Action (a nuclear agreement with Iran), and normalized relations with Cuba. The number of American soldiers in Afghanistan decreased during Obama\\'s second term, though U.S. soldiers remained in the country throughout the remainder of his presidency. Obama promoted inclusion for LGBT Americans, becoming the first sitting U.S. president to publicly support same-sex marriage.\\nObama left office in 2017 with high approval ratings both within the United States and among foreign advisories. He continues to reside in Washington D.C. and remains politically active, campaigning for candidates in various American elections, including in Biden\\'s successful presidential bid in the 2020 presidential election. Outside of politics, Obama has published three books: Dreams from My Father (1995), The Audacity of Hope (2006), and A Promised Land (2020). His presidential library began construction in the South Side of Chicago in 2021. Historians and political scientists rank Obama among the upper tier in historical rankings of U.S. presidents.\\n\\n\\n== Early life and career ==\\n\\nBarack Obama was born on August 4, 1961, at Kapiolani Medical Center for Women and Children in Honolulu, Hawaii. He is the only president born outside the contiguous 48 states. He was born to an 18-year-old American mother and a 27-year-old Kenyan father. His mother, Ann Dunham (1942–1995), was born in Wichita, Kansas, and was of English, Welsh, German, Swiss, and Irish descent. In 2007 it was discovered her great-great-grandfather Falmouth Kearney emigrated from the village of Moneygall, Ireland to the U.S. in 1850. In July 2012, Ancestry.com found a strong likelihood that Dunham was descended from John Punch, an enslaved African man who lived in the Colony of Virginia during the seventeenth century. Obama\\'s father, Barack Obama Sr. (1934–1982), was a married Luo Kenyan from Nyang\\'oma Kogelo. His last name, Obama, was derived from his Luo descent. Obama\\'s parents met in 1960 in a Russian language class at the University of Hawaiʻi at Mānoa, where his father was a foreign student on a scholarship. The couple married in Wailuku, Hawaii, on February 2, 1961, six months before Obama was born.\\nIn late August 1961, a few weeks after he was born, Barack and his mother moved to the University of Washington in Seattle, where they lived for a year. During that time, Barack\\'s father completed his undergraduate degree in economics in Hawaii, graduating in June 1962. He left to attend graduate school on a scholarship at Harvard University, where he earned a Master of Arts in economics. Obama\\'s parents divorced in March 1964. Obama Sr. returned to Kenya in 1964, where he married for a third time and worked for the Kenyan government as the senior economic analyst in the Ministry of Finance. He visited his son in Hawaii only once, at Christmas 1971, before he was killed in an automobile accident in 1982, when Obama was 21 years old. Recalling his early childhood, Obama said: \"That my father looked nothing like the people around me—that he was black as pitch, my mother white as milk—barely registered in my mind.\" He described his struggles as a young adult to reconcile social perceptions of his multiracial heritage.\\nIn 1963, Dunham met Lolo Soetoro at the University of Hawaii; he was an Indonesian East–West Center graduate student in geography. The couple married on Molokai on March 15, 1965. After two one-year extensions of his J-1 visa, Lolo returned to Indonesia in 1966. His wife and stepson followed sixteen months later in 1967. The family initially lived in the Menteng Dalam neighborhood in the Tebet district of South Jakarta. From 1970, they lived in a wealthier neighborhood in the Menteng district of Central Jakarta.\\n\\n\\n=== Education ===\\n\\nAt the age of 6, Obama and his mother had moved to Indonesia to join his stepfather. From age six to ten, he was registered in school as \"Barry\" and attended local Indonesian-language schools: Sekolah Dasar Katolik Santo Fransiskus Asisi (St. Francis of Assisi Catholic Elementary School) for two years and Sekolah Dasar Negeri Menteng 01 (State Elementary School Menteng 01) for one and a half years, supplemented by English-language Calvert School homeschooling by his mother. As a result of his four years in Jakarta, he was able to speak Indonesian fluently as a child. During his time in Indonesia, Obama\\'s stepfather taught him to be resilient and gave him \"a pretty hardheaded assessment of how the world works\".\\nIn 1971, Obama returned to Honolulu to live with his maternal grandparents, Madelyn and Stanley Dunham. He attended Punahou School—a private college preparatory school—with the aid of a scholarship from fifth grade until he graduated from high school in 1979. In high school, Obama continued to use the nickname \"Barry\" which he kept until making a visit to Kenya in 1980. Obama lived with his mother and half-sister, Maya Soetoro, in Hawaii for three years from 1972 to 1975 while his mother was a graduate student in anthropology at the University of Hawaii. Obama chose to stay in Hawaii when his mother and half-sister returned to Indonesia in 1975, so his mother could begin anthropology field work. His mother spent most of the next two decades in Indonesia, divorcing Lolo Soetoro in 1980 and earning a PhD degree in 1992, before dying in 1995 in Hawaii following unsuccessful treatment for ovarian and uterine cancer.\\nOf his years in Honolulu, Obama wrote: \"The opportunity that Hawaii offered — to experience a variety of cultures in a climate of mutual respect — became an integral part of my world view, and a basis for the values that I hold most dear.\" Obama has also written and talked about using alcohol, marijuana, and cocaine during his teenage years to \"push questions of who I was out of my mind\". Obama was also a member of the \"Choom Gang\" (the slang term for smoking marijuana), a self-named group of friends who spent time together and smoked marijuana.\\n College and research jobs \\nAfter graduating from high school in 1979, Obama moved to Los Angeles to attend Occidental College on a full scholarship. In February 1981, Obama made his first public speech, calling for Occidental to participate in the disinvestment from South Africa in response to that nation\\'s policy of apartheid. In mid-1981, Obama traveled to Indonesia to visit his mother and half-sister Maya and visited the families of college friends in Pakistan for three weeks. Later in 1981, he transferred to Columbia University in New York City as a junior, where he majored in political science with a specialty in international relations and in English literature and lived off-campus on West 109th Street. He graduated with a Bachelor of Arts degree in 1983 and a 3.7 GPA. After graduating, Obama worked for about a year at the Business International Corporation, where he was a financial researcher and writer, then as a project coordinator for the New York Public Interest Research Group on the City College of New York campus for three months in 1985.\\n Community organizer and Harvard Law School \\nTwo years after graduating from Columbia, Obama moved from New York to Chicago when he was hired as director of the Developing Communities Project, a faith-based community organization originally comprising eight Catholic parishes in Roseland, West Pullman, and Riverdale on Chicago\\'s South Side. He worked there as a community organizer from June 1985 to May 1988. He helped set up a job training program, a college preparatory tutoring program, and a tenants\\' rights organization in Altgeld Gardens. Obama also worked as a consultant and instructor for the Gamaliel Foundation, a community organizing institute. In mid-1988, he traveled for the first time in Europe for three weeks and then for five weeks in Kenya, where he met many of his paternal relatives for the first time.\\n\\nDespite being offered a full scholarship to Northwestern University School of Law, Obama enrolled at Harvard Law School in the fall of 1988, living in nearby Somerville, Massachusetts. He was selected as an editor of the Harvard Law Review at the end of his first year, president of the journal in his second year, and research assistant to the constitutional scholar Laurence Tribe while at Harvard. During his summers, he returned to Chicago, where he worked as a summer associate at the law firms of Sidley Austin in 1989 and Hopkins & Sutter in 1990. Obama\\'s election as the first black president of the Harvard Law Review gained national media attention and led to a publishing contract and advance for a book about race relations, which evolved into a personal memoir. The manuscript was published in mid-1995 as Dreams from My Father. Obama graduated from Harvard Law in 1991 with a Juris Doctor magna cum laude.\\n University of Chicago Law School \\nIn 1991, Obama accepted a two-year position as Visiting Law and Government Fellow at the University of Chicago Law School to work on his first book. He then taught constitutional law at the University of Chicago Law School for twelve years, first as a lecturer from 1992 to 1996, and then as a senior lecturer from 1996 to 2004.\\nFrom April to October 1992, Obama directed Illinois\\'s Project Vote, a voter registration campaign with ten staffers and seven hundred volunteer registrars; it achieved its goal of registering 150,000 of 400,000 unregistered African Americans in the state, leading Crain\\'s Chicago Business to name Obama to its 1993 list of \"40 under Forty\" powers to be.\\n\\n\\n=== Family and personal life ===\\n\\nIn a 2006 interview, Obama highlighted the diversity of his extended family: \"It\\'s like a little mini-United Nations,\" he said. \"I\\'ve got relatives who look like Bernie Mac, and I\\'ve got relatives who look like Margaret Thatcher.\" Obama has a half-sister with whom he was raised (Maya Soetoro-Ng) and seven other half-siblings from his Kenyan father\\'s family, six of them living. Obama\\'s mother was survived by her Kansas-born mother, Madelyn Dunham, until her death on November 2, 2008, two days before his election to the presidency. Obama also has roots in Ireland; he met with his Irish cousins in Moneygall in May 2011. In Dreams from My Father, Obama ties his mother\\'s family history to possible Native American ancestors and distant relatives of Jefferson Davis, President of the Confederate States of America during the American Civil War. He also shares distant ancestors in common with George W. Bush and Dick Cheney, among others.\\nObama lived with anthropologist Sheila Miyoshi Jager while he was a community organizer in Chicago in the 1980s. He proposed to her twice, but both Jager and her parents turned him down. The relationship was not made public until May 2017, several months after his presidency had ended.\\n\\nIn June 1989, Obama met Michelle Robinson when he was employed at Sidley Austin. Robinson was assigned for three months as Obama\\'s adviser at the firm, and she joined him at several group social functions but declined his initial requests to date. They began dating later that summer, became engaged in 1991, and were married on October 3, 1992. After suffering a miscarriage, Michelle underwent in vitro fertilization to conceive their children. The couple\\'s first daughter, Malia Ann, was born in 1998, followed by a second daughter, Natasha (\"Sasha\"), in 2001. The Obama daughters attended the University of Chicago Laboratory Schools. When they moved to Washington, D.C., in January 2009, the girls started at the Sidwell Friends School. The Obamas had two Portuguese Water Dogs; the first, a male named Bo, was a gift from Senator Ted Kennedy. In 2013, Bo was joined by Sunny, a female. Bo died of cancer on May 8, 2021.\\nObama is a supporter of the Chicago White Sox, and he threw out the first pitch at the 2005 ALCS when he was still a senator. In 2009, he threw out the ceremonial first pitch at the All-Star Game while wearing a White Sox jacket. He is also primarily a Chicago Bears football fan in the NFL, but in his childhood and adolescence was a fan of the Pittsburgh Steelers and rooted for them ahead of their victory in Super Bowl XLIII 12 days after he took office as president. In 2011, Obama invited the 1985 Chicago Bears to the White House; the team had not visited the White House after their Super Bowl win in 1986 due to the Space Shuttle Challenger disaster. He plays basketball, a sport he participated in as a member of his high school\\'s varsity team, and he is left-handed.\\nIn 2005, the Obama family applied the proceeds of a book deal and moved from a Hyde Park, Chicago condominium to a $1.6 million house (equivalent to $2.6 million in 2024) in neighboring Kenwood, Chicago. The purchase of an adjacent lot—and sale of part of it to Obama by the wife of developer, campaign donor and friend Tony Rezko—attracted media attention because of Rezko\\'s subsequent indictment and conviction on political corruption charges that were unrelated to Obama.\\nIn December 2007, Money Magazine estimated Obama\\'s net worth at $1.3 million (equivalent to $2 million in 2024). Their 2009 tax return showed a household income of $5.5 million—up from about $4.2 million in 2007 and $1.6 million in 2005—mostly from sales of his books. On his 2010 income of $1.7 million, he gave 14 percent to non-profit organizations, including $131,000 to Fisher House Foundation, a charity assisting wounded veterans\\' families, allowing them to reside near where the veteran is receiving medical treatments. Per his 2012 financial disclosure, Obama may be worth as much as $10 million.\\n\\n\\n=== Religious views ===\\nObama is a Protestant Christian whose religious views developed in his adult life. He wrote in The Audacity of Hope that he \"was not raised in a religious household.\" He described his mother, raised by non-religious parents, as being detached from religion, yet \"in many ways the most spiritually awakened person ... I have ever known\", and \"a lonely witness for secular humanism.\" He described his father as a \"confirmed atheist\" by the time his parents met, and his stepfather as \"a man who saw religion as not particularly useful.\" Obama explained how, through working with black churches as a community organizer while in his twenties, he came to understand \"the power of the African-American religious tradition to spur social change.\"\\n\\nIn January 2008, Obama told Christianity Today: \"I am a Christian, and I am a devout Christian. I believe in the redemptive death and resurrection of Jesus Christ. I believe that faith gives me a path to be cleansed of sin and have eternal life.\" On September 27, 2010, Obama released a statement commenting on his religious views, saying:\\n\\nI\\'m a Christian by choice. My family didn\\'t—frankly, they weren\\'t folks who went to church every week. And my mother was one of the most spiritual people I knew, but she didn\\'t raise me in the church. So I came to my Christian faith later in life, and it was because the precepts of Jesus Christ spoke to me in terms of the kind of life that I would want to lead—being my brothers\\' and sisters\\' keeper, treating others as they would treat me.\\nObama met Trinity United Church of Christ pastor Jeremiah Wright in October 1987 and became a member of Trinity in 1992. During Obama\\'s first presidential campaign in May 2008, he resigned from Trinity after some of Wright\\'s statements were criticized. Since moving to Washington, D.C., in 2009, the Obama family has attended several Protestant churches, including Shiloh Baptist Church and St. John\\'s Episcopal Church, as well as Evergreen Chapel at Camp David, but the members of the family do not attend church on a regular basis.\\nIn 2016, Obama said that he gets inspiration from a few items that remind him \"of all the different people I\\'ve met along the way\", adding: \"I carry these around all the time. I\\'m not that superstitious, so it\\'s not like I think I necessarily have to have them on me at all times.\" The items, \"a whole bowl full\", include rosary beads given to him by Pope Francis, a figurine of the Hindu deity Hanuman, a Coptic cross from Ethiopia, a small Buddha statue given by a monk, and a metal poker chip that used to be the lucky charm of a motorcyclist in Iowa.\\n\\n\\n== Legal career ==\\nFrom 1994 to 2002, Obama served on the boards of directors of the Woods Fund of Chicago—which in 1985 had been the first foundation to fund the Developing Communities Project—and of the Joyce Foundation. He served on the board of directors of the Chicago Annenberg Challenge from 1995 to 2002, as founding president and chairman of the board of directors from 1995 to 1999. Obama\\'s law license became inactive in 2007.\\n\\n\\n== Legislative career ==\\n\\n\\n=== Illinois Senate (1997–2004) ===\\n\\nObama was elected to the Illinois Senate in 1996, succeeding Democratic state senator Alice Palmer from Illinois\\'s 13th District, which, at that time, spanned Chicago South Side neighborhoods from Hyde Park–Kenwood south to South Shore and west to Chicago Lawn. Once elected, Obama gained bipartisan support for legislation that reformed ethics and health care laws. He sponsored a law that increased tax credits for low-income workers, negotiated welfare reform, and promoted increased subsidies for childcare. In 2001, as co-chairman of the bipartisan Joint Committee on Administrative Rules, Obama supported Republican governor George Ryan\\'s payday loan regulations and predatory mortgage lending regulations aimed at averting home foreclosures.\\nHe was reelected to the Illinois Senate in 1998, defeating Republican Yesse Yehudah in the general election, and was re-elected again in 2002. In 2000, he lost a Democratic primary race for Illinois\\'s 1st congressional district in the United States House of Representatives to four-term incumbent Bobby Rush by a margin of two to one.\\nIn January 2003, Obama became chairman of the Illinois Senate\\'s Health and Human Services Committee when Democrats, after a decade in the minority, regained a majority. He sponsored and led unanimous, bipartisan passage of legislation to monitor racial profiling by requiring police to record the race of drivers they detained, and legislation making Illinois the first state to mandate videotaping of homicide interrogations. During his 2004 general election campaign for the U.S. Senate, police representatives credited Obama for his active engagement with police organizations in enacting death penalty reforms. Obama resigned from the Illinois Senate in November 2004 following his election to the U.S. Senate.\\n\\n\\n=== 2004 U.S. Senate campaign in Illinois ===\\n\\nIn May 2002, Obama commissioned a poll to assess his prospects in a 2004 U.S. Senate race. He created a campaign committee, began raising funds, and lined up political media consultant David Axelrod by August 2002. Obama formally announced his candidacy in January 2003.\\nObama was an early opponent of the George W. Bush administration\\'s 2003 invasion of Iraq. On October 2, 2002, the day President Bush and Congress agreed on the joint resolution authorizing the Iraq War, Obama addressed the first high-profile Chicago anti-Iraq War rally, and spoke out against the war. He addressed another anti-war rally in March 2003 and told the crowd \"it\\'s not too late\" to stop the war.\\nDecisions by Republican incumbent Peter Fitzgerald and his Democratic predecessor Carol Moseley Braun not to participate in the election resulted in wide-open Democratic and Republican primary contests involving 15 candidates. In the March 2004 primary election, Obama won in an unexpected landslide—which overnight made him a rising star within the national Democratic Party, started speculation about a presidential future, and led to the reissue of his memoir, Dreams from My Father. In July 2004, Obama delivered the keynote address at the 2004 Democratic National Convention, seen by nine million viewers. His speech was well received and elevated his status within the Democratic Party.\\nObama\\'s expected opponent in the general election, Republican primary winner Jack Ryan, withdrew from the race in June 2004. Six weeks later, Alan Keyes accepted the Republican nomination to replace Ryan. In the November 2004 general election, Obama won with 70 percent of the vote, the largest margin of victory for a Senate candidate in Illinois history. He took 92 of the state\\'s 102 counties, including several where Democrats traditionally do not do well.\\n\\n\\n=== U.S. Senate (2005–2008) ===\\n\\nObama was sworn in as a senator on January 3, 2005, becoming the only Senate member of the Congressional Black Caucus. He introduced two initiatives that bore his name: Lugar–Obama, which expanded the Nunn–Lugar Cooperative Threat Reduction concept to conventional weapons; and the Federal Funding Accountability and Transparency Act of 2006, which authorized the establishment of USAspending.gov, a web search engine on federal spending. On June 3, 2008, Senator Obama—along with Senators Tom Carper, Tom Coburn, and John McCain—introduced follow-up legislation: Strengthening Transparency and Accountability in Federal Spending Act of 2008. He also cosponsored the Secure America and Orderly Immigration Act.\\nIn December 2006, President Bush signed into law the Democratic Republic of the Congo Relief, Security, and Democracy Promotion Act, marking the first federal legislation to be enacted with Obama as its primary sponsor. In January 2007, Obama and Senator Feingold introduced a corporate jet provision to the Honest Leadership and Open Government Act, which was signed into law in September 2007.\\nLater in 2007, Obama sponsored an amendment to the Defense Authorization Act to add safeguards for personality-disorder military discharges. This amendment passed the full Senate in the spring of 2008. He sponsored the Iran Sanctions Enabling Act supporting divestment of state pension funds from Iran\\'s oil and gas industry, which was never enacted but later incorporated in the Comprehensive Iran Sanctions, Accountability, and Divestment Act of 2010; and co-sponsored legislation to reduce risks of nuclear terrorism. Obama also sponsored a Senate amendment to the State Children\\'s Health Insurance Program, providing one year of job protection for family members caring for soldiers with combat-related injuries.\\nObama held assignments on the Senate Committees for Foreign Relations, Environment and Public Works, and Veterans\\' Affairs through December 2006. In January 2007, he left the Environment and Public Works committee and took additional assignments with Health, Education, Labor and Pensions and Homeland Security and Governmental Affairs. He also became Chairman of the Senate\\'s subcommittee on European Affairs. As a member of the Senate Foreign Relations Committee, Obama made official trips to Eastern Europe, the Middle East, Central Asia, and Africa. He met with Mahmoud Abbas before Abbas became President of the Palestinian National Authority and gave a speech at the University of Nairobi in which he condemned corruption within the Kenyan government. Obama resigned his Senate seat on November 16, 2008, to focus on his transition period for the presidency.\\n\\n\\n== Presidential campaigns ==\\n\\n\\n=== 2008 ===\\n\\nOn February 10, 2007, Obama announced his candidacy for President of the United States in front of the Old State Capitol building in Springfield, Illinois. The choice of the announcement site was viewed as symbolic, as it was also where Abraham Lincoln delivered his \"House Divided\" speech in 1858. Obama emphasized issues of rapidly ending the Iraq War, increasing energy independence, and reforming the health care system.\\n\\nNumerous candidates entered the Democratic Party presidential primaries. The field narrowed to Obama and Senator Hillary Clinton after early contests, with the race remaining close throughout the primary process, but Obama gained a steady lead in pledged delegates due to better long-range planning, superior fundraising, dominant organizing in caucus states, and better exploitation of delegate allocation rules. \\nOn June 2, 2008, Obama had received enough votes to clinch his nomination. After an initial hesitation to concede, on June 7, Clinton ended her campaign and endorsed Obama. On August 23, 2008, Obama announced his selection of Delaware senator Joe Biden as his vice presidential running mate. Obama selected Biden from a field speculated to include former Indiana governor and senator Evan Bayh and Virginia governor Tim Kaine. At the Democratic National Convention in Denver, Colorado, Hillary Clinton called for her supporters to endorse Obama, and she and Bill Clinton gave convention speeches in his support. Obama delivered his acceptance speech at Invesco Field at Mile High stadium to a crowd of about eighty-four thousand; the speech was viewed by over three million people worldwide. During both the primary process and the general election, Obama\\'s campaign set numerous fundraising records, particularly in the quantity of small donations. On June 19, 2008, Obama became the first major-party presidential candidate to turn down public financing in the general election since the system was created in 1976.\\nJohn McCain was nominated as the Republican candidate, and he selected Sarah Palin as his running mate. Obama and McCain engaged in three presidential debates in September and October 2008. On November 4, Obama won the presidency with 365 electoral votes to 173 received by McCain. Obama won 52.9 percent of the popular vote to McCain\\'s 45.7 percent. He became the first African-American to be elected president. Obama delivered his victory speech before hundreds of thousands of supporters in Chicago\\'s Grant Park. He is one of the three United States senators moved directly from the U.S. Senate to the White House, the others being Warren G. Harding and John F. Kennedy.\\n\\n\\n=== 2012 ===\\n\\nOn April 4, 2011, Obama filed election papers with the Federal Election Commission and then announced his reelection campaign for 2012 in a video titled \"It Begins with Us\" that he posted on his website. As the incumbent president, he ran virtually unopposed in the Democratic Party presidential primaries, and on April 3, 2012, Obama secured the 2778 convention delegates needed to win the Democratic nomination. At the Democratic National Convention in Charlotte, North Carolina, Obama and Joe Biden were formally nominated by former president Bill Clinton as the Democratic Party candidates for president and vice president in the general election. Their main opponents were Republicans Mitt Romney, the former governor of Massachusetts, and Representative Paul Ryan of Wisconsin.\\nOn November 6, 2012, Obama won 332 electoral votes, exceeding the 270 required for him to be reelected as president. With 51.1 percent of the popular vote, Obama became the first Democratic president since Franklin D. Roosevelt to win the majority of the popular vote twice. Obama addressed supporters and volunteers at Chicago\\'s McCormick Place after his reelection and said: \"Tonight you voted for action, not politics as usual. You elected us to focus on your jobs, not ours. And in the coming weeks and months, I am looking forward to reaching out and working with leaders of both parties.\"\\n\\n\\n== Presidency (2009–2017) ==\\n\\n\\n=== First 100 days ===\\n\\nThe inauguration of Barack Obama as the 44th president took place on January 20, 2009. In his first few days in office, Obama issued executive orders and presidential memoranda directing the U.S. military to develop plans to withdraw troops from Iraq. He ordered the closing of the Guantanamo Bay detention camp, but Congress prevented the closure by refusing to appropriate the required funds and preventing moving any Guantanamo detainee. Obama reduced the secrecy given to presidential records. He also revoked President George W. Bush\\'s restoration of President Ronald Reagan\\'s Mexico City policy which prohibited federal aid to international family planning organizations that perform or provide counseling about abortion.\\n\\n\\n=== Domestic policy ===\\n\\nThe first bill signed into law by Obama was the Lilly Ledbetter Fair Pay Act of 2009, relaxing the statute of limitations for equal-pay lawsuits. Five days later, he signed the reauthorization of the State Children\\'s Health Insurance Program to cover an additional four million uninsured children. In March 2009, Obama reversed a Bush-era policy that had limited funding of embryonic stem cell research and pledged to develop \"strict guidelines\" on the research.\\n\\nObama appointed two women to serve on the Supreme Court in the first two years of his presidency. He nominated Sonia Sotomayor on May 26, 2009, to replace retiring associate justice David Souter. She was confirmed on August 6, 2009, becoming the first Supreme Court Justice of Hispanic descent. Obama nominated Elena Kagan on May 10, 2010, to replace retiring Associate Justice John Paul Stevens. She was confirmed on August 5, 2010, bringing the number of women sitting simultaneously on the Court to three for the first time in American history.\\nOn March 11, 2009, Obama created the White House Council on Women and Girls, which formed part of the Office of Intergovernmental Affairs, having been established by Executive Order 13506 with a broad mandate to advise him on issues relating to the welfare of American women and girls. The council was chaired by Senior Advisor to the President Valerie Jarrett. Obama also established the White House Task Force to Protect Students from Sexual Assault through a government memorandum on January 22, 2014, with a broad mandate to advise him on issues relating to sexual assault on college and university campuses throughout the United States. The co-chairs of the Task Force were Vice President Joe Biden and Jarrett. The Task Force was a development out of the White House Council on Women and Girls and Office of the Vice President of the United States, and prior to that the 1994 Violence Against Women Act first drafted by Biden.\\nIn July 2009, Obama launched the Priority Enforcement Program, an immigration enforcement program that had been pioneered by George W. Bush, and the Secure Communities fingerprinting and immigration status data-sharing program.\\nIn a major space policy speech in April 2010, Obama announced a planned change in direction at NASA, the U.S. space agency. He ended plans for a return of human spaceflight to the moon and development of the Ares I rocket, Ares V rocket and Constellation program, in favor of funding earth science projects, a new rocket type, research and development for an eventual crewed mission to Mars, and ongoing missions to the International Space Station.\\n\\nOn January 16, 2013, one month after the Sandy Hook Elementary School shooting, Obama signed 23 executive orders and outlined a series of sweeping proposals regarding gun control. He urged Congress to reintroduce an expired ban on military-style assault weapons, such as those used in several recent mass shootings, impose limits on ammunition magazines to 10 rounds, introduce background checks on all gun sales, pass a ban on possession and sale of armor-piercing bullets, introduce harsher penalties for gun-traffickers, especially unlicensed dealers who buy arms for criminals and approving the appointment of the head of the federal Bureau of Alcohol, Tobacco, Firearms and Explosives for the first time since 2006. On January 5, 2016, Obama announced new executive actions extending background check requirements to more gun sellers. In a 2016 editorial in The New York Times, Obama compared the struggle for what he termed \"common-sense gun reform\" to women\\'s suffrage and other civil rights movements in American history.\\nIn 2011, Obama signed a four-year renewal of the Patriot Act. Following the 2013 global surveillance disclosures by whistleblower Edward Snowden, Obama condemned the leak as unpatriotic, but called for increased restrictions on the National Security Agency (NSA) to address violations of privacy. Obama continued and expanded surveillance programs set up by George W. Bush, while implementing some reforms. He supported legislation that would have limited the NSA\\'s ability to collect phone records in bulk under a single program and supported bringing more transparency to the Foreign Intelligence Surveillance Court (FISC).\\n\\n\\n==== Racial issues ====\\n\\nIn his speeches as president, Obama did not make more overt references to race relations than his predecessors, but according to one study, he implemented stronger policy action on behalf of African-Americans than any president since the Nixon era.\\nFollowing Obama\\'s election, many pondered the existence of a \"post-racial America\". However, lingering racial tensions quickly became apparent, and many African-Americans expressed outrage over what they saw as an intense racial animosity directed at Obama. The acquittal of George Zimmerman following the killing of Trayvon Martin sparked national outrage, leading to Obama giving a speech in which he said that \"Trayvon Martin could have been me 35 years ago.\" The shooting of Michael Brown in Ferguson, Missouri, sparked a wave of protests. These and other events led to the birth of the Black Lives Matter movement, which campaigns against violence and systemic racism toward black people. Though Obama entered office reluctant to talk about race, by 2014 he began openly discussing the disadvantages faced by many members of minority groups.\\nSeveral incidents during Obama\\'s presidency generated disapproval from the African-American community and with law enforcement, and Obama sought to build trust between law enforcement officials and civil rights activists, with mixed results. Some in law enforcement criticized Obama\\'s condemnation of racial bias after incidents in which police action led to the death of African-American men, while some racial justice activists criticized Obama\\'s expressions of empathy for the police. In a March 2016 Gallup poll, nearly one third of Americans said they worried \"a great deal\" about race relations, a higher figure than in any previous Gallup poll since 2001.\\n\\n\\n==== LGBT rights ====\\nOn October 8, 2009, Obama signed the Matthew Shepard and James Byrd Jr. Hate Crimes Prevention Act, a measure that expanded the 1969 United States federal hate-crime law to include crimes motivated by a victim\\'s actual or perceived gender, sexual orientation, gender identity, or disability. On October 30, 2009, Obama lifted the ban on travel to the United States by those infected with HIV. The lifting of the ban was celebrated by Immigration Equality. On December 22, 2010, Obama signed the Don\\'t Ask, Don\\'t Tell Repeal Act of 2010, which fulfilled a promise made in the 2008 presidential campaign to end the don\\'t ask, don\\'t tell policy of 1993 that had prevented gay and lesbian people from serving openly in the United States Armed Forces. In 2016, the Pentagon ended the policy that barred transgender people from serving openly in the military.\\n\\n\\n===== Same-sex marriage =====\\nAs a candidate for the Illinois state senate in 1996, Obama stated he favored legalizing same-sex marriage. During his Senate run in 2004, he said he supported civil unions and domestic partnerships for same-sex partners but opposed same-sex marriages. In 2008, he reaffirmed this position by stating \"I believe marriage is between a man and a woman. I am not in favor of gay marriage.\" On May 9, 2012, shortly after the official launch of his campaign for re-election as president, Obama said his views had evolved, and he publicly affirmed his personal support for the legalization of same-sex marriage, becoming the first sitting U.S. president to do so. During his second inaugural address on January 21, 2013, Obama became the first U.S. president in office to call for full equality for gay Americans, and the first to mention gay rights or the word \"gay\" in an inaugural address. In 2013, the Obama administration filed briefs that urged the Supreme Court to rule in favor of same-sex couples in the cases of Hollingsworth v. Perry (regarding same-sex marriage) and United States v. Windsor (regarding the Defense of Marriage Act).\\n\\n\\n==== Economic policy ====\\n\\nOn February 17, 2009, Obama signed the American Recovery and Reinvestment Act of 2009, a $787 billion (equivalent to $1153 billion in 2024) economic stimulus package aimed at helping the economy recover from the deepening worldwide recession. The act includes increased federal spending for health care, infrastructure, education, various tax breaks and incentives, and direct assistance to individuals. In March 2009, Obama\\'s Treasury Secretary, Timothy Geithner, took further steps to manage the 2008 financial crisis, including introducing the Public–Private Investment Program for Legacy Assets, which contains provisions for buying up to $2 trillion in depreciated real estate assets.\\n\\nObama intervened in the troubled automotive industry in March 2009, renewing loans for General Motors (GM) and Chrysler to continue operations while reorganizing. Over the following months the White House set terms for both firms\\' bankruptcies, including the sale of Chrysler to Italian automaker Fiat and a reorganization of GM giving the U.S. government a temporary 60 percent equity stake in the company. In June 2009, dissatisfied with the pace of economic stimulus, Obama called on his cabinet to accelerate the investment. He signed into law the Car Allowance Rebate System, known colloquially as \"Cash for Clunkers\", which temporarily boosted the economy.\\nThe Bush and Obama administrations authorized spending and loan guarantees from the Federal Reserve and the Department of the Treasury. These guarantees totaled about $11.5 trillion, but only $3 trillion had been spent by the end of November 2009. On August 2, 2011, after a lengthy congressional debate over whether to raise the nation\\'s debt limit, Obama signed the bipartisan Budget Control Act of 2011. The legislation enforced limits on discretionary spending until 2021, established a procedure to increase the debt limit, created a Congressional Joint Select Committee on Deficit Reduction to propose further deficit reduction with a stated goal of achieving at least $1.5 trillion in budgetary savings over 10 years, and established automatic procedures for reducing spending by as much as $1.2 trillion if legislation originating with the new joint select committee did not achieve such savings. By passing the legislation, Congress was able to prevent a U.S. government default on its obligations.\\nThe unemployment rate rose in 2009, reaching a peak in October at 10.0 percent and averaging 10.0 percent in the fourth quarter. Following a decrease to 9.7 percent in the first quarter of 2010, the unemployment rate fell to 9.6 percent in the second quarter, where it remained for the rest of the year. Between February and December 2010, employment rose by 0.8 percent, which was less than the average of 1.9 percent experienced during comparable periods in the past four employment recoveries. By November 2012, the unemployment rate fell to 7.7 percent, decreasing to 6.7 percent in the last month of 2013. During 2014, the unemployment rate continued to decline, falling to 6.3 percent in the first quarter. GDP growth returned in the third quarter of 2009, expanding at a rate of 1.6 percent, followed by a 5.0 percent increase in the fourth quarter. Growth continued in 2010, posting an increase of 3.7 percent in the first quarter, with lesser gains throughout the rest of the year. In July 2010, the Federal Reserve noted that economic activity continued to increase, but its pace had slowed, and chairman Ben Bernanke said the economic outlook was \"unusually uncertain\". Overall, the economy expanded at a rate of 2.9 percent in 2010.\\n\\nThe Congressional Budget Office (CBO) and a broad range of economists credit Obama\\'s stimulus plan for economic growth. The CBO released a report stating that the stimulus bill increased employment by 1–2.1 million, while conceding that \"it is impossible to determine how many of the reported jobs would have existed in the absence of the stimulus package.\" Although an April 2010, survey of members of the National Association for Business Economics showed an increase in job creation (over a similar January survey) for the first time in two years, 73 percent of 68 respondents believed the stimulus bill has had no impact on employment. The economy of the United States has grown faster than the other original NATO members by a wider margin under President Obama than it has anytime since the end of World War II. The Organisation for Economic Co-operation and Development credits the much faster growth in the United States to the stimulus plan of the U.S. and the austerity measures in the European Union.\\nWithin a month of the 2010 midterm elections, Obama announced a compromise deal with the Congressional Republican leadership that included a temporary, two-year extension of the 2001 and 2003 income tax rates, a one-year payroll tax reduction, continuation of unemployment benefits, and a new rate and exemption amount for estate taxes. The compromise overcame opposition from some in both parties, and the resulting $858 billion (equivalent to $1.2 trillion in 2024) Tax Relief, Unemployment Insurance Reauthorization, and Job Creation Act of 2010 passed with bipartisan majorities in both houses of Congress before Obama signed it on December 17, 2010.\\nIn December 2013, Obama declared that growing income inequality is a \"defining challenge of our time\" and called on Congress to bolster the safety net and raise wages. This came on the heels of the nationwide strikes of fast-food workers and Pope Francis\\' criticism of inequality and trickle-down economics. Obama urged Congress to ratify a 12-nation free trade pact called the Trans-Pacific Partnership.\\n\\n\\n==== Environmental policy ====\\n\\nOn April 20, 2010, an explosion destroyed an offshore drilling rig at the Macondo Prospect in the Gulf of Mexico, causing a major sustained oil leak. Obama visited the Gulf, announced a federal investigation, and formed a bipartisan commission to recommend new safety standards, after a review by Secretary of the Interior Ken Salazar and concurrent Congressional hearings. He then announced a six-month moratorium on new deepwater drilling permits and leases, pending regulatory review. As multiple efforts by BP failed, some in the media and public expressed confusion and criticism over various aspects of the incident, and stated a desire for more involvement by Obama and the federal government. Prior to the oil spill, on March 31, 2010, Obama ended a ban on oil and gas drilling along the majority of the East Coast of the United States and along the coast of northern Alaska in an effort to win support for an energy and climate bill and to reduce foreign imports of oil and gas.\\nIn July 2013, Obama expressed reservations and said he \"would reject the Keystone XL pipeline if it increased carbon pollution [or] greenhouse emissions.\" On February 24, 2015, Obama vetoed a bill that would have authorized the pipeline. It was the third veto of Obama\\'s presidency and his first major veto.\\nIn December 2016, Obama permanently banned new offshore oil and gas drilling in most United States-owned waters in the Atlantic and Arctic Oceans using the 1953 Outer Continental Shelf Act.\\nObama emphasized the conservation of federal lands during his term in office. He used his power under the Antiquities Act to create 25 new national monuments during his presidency and expand four others, protecting a total of 553,000,000 acres (224,000,000 ha) of federal lands and waters, more than any other U.S. president.\\n\\n\\n==== Health care reform ====\\n\\nObama called for Congress to pass legislation reforming health care in the United States, a key campaign promise and a top legislative goal. He proposed an expansion of health insurance coverage to cover the uninsured, cap premium increases, and allow people to retain their coverage when they leave or change jobs. His proposal was to spend $900 billion over ten years and include a government insurance plan, also known as the public option, to compete with the corporate insurance sector as a main component to lowering costs and improving quality of health care. It would also make it illegal for insurers to drop sick people or deny them coverage for pre-existing conditions, and require every American to carry health coverage. The plan also includes medical spending cuts and taxes on insurance companies that offer expensive plans.\\n\\nOn July 14, 2009, House Democratic leaders introduced a 1,017-page plan for overhauling the U.S. health care system, which Obama wanted Congress to approve by the end of 2009. After public debate during the Congressional summer recess of 2009, Obama delivered a speech to a joint session of Congress on September 9 where he addressed concerns over the proposals. In March 2009, Obama lifted a ban on using federal funds for stem cell research.\\nOn November 7, 2009, a health care bill featuring the public option was passed in the House. On December 24, 2009, the Senate passed its own bill—without a public option—on a party-line vote of 60–39. On March 21, 2010, the Patient Protection and Affordable Care Act (ACA, colloquially \"Obamacare\") passed by the Senate in December was passed in the House by a vote of 219 to 212. Obama signed the bill into law on March 23, 2010.\\nThe ACA includes health-related provisions, most of which took effect in 2014, including expanding Medicaid eligibility for people making up to 133 percent of the federal poverty level (FPL) starting in 2014, subsidizing insurance premiums for people making up to 400 percent of the FPL ($88,000 for family of four in 2010) so their maximum \"out-of-pocket\" payment for annual premiums will be from 2 percent to 9.5 percent of income, providing incentives for businesses to provide health care benefits, prohibiting denial of coverage and denial of claims based on pre-existing conditions, establishing health insurance exchanges, prohibiting annual coverage caps, and support for medical research. According to White House and CBO figures, the maximum share of income that enrollees would have to pay would vary depending on their income relative to the federal poverty level.\\n\\nThe costs of these provisions are offset by taxes, fees, and cost-saving measures, such as new Medicare taxes for those in high-income brackets, taxes on indoor tanning, cuts to the Medicare Advantage program in favor of traditional Medicare, and fees on medical devices and pharmaceutical companies; there is also a tax penalty for those who do not obtain health insurance, unless they are exempt due to low income or other reasons. In March 2010, the CBO estimated that the net effect of both laws will be a reduction in the federal deficit by $143 billion over the first decade.\\nThe law faced several legal challenges, primarily based on the argument that an individual mandate requiring Americans to buy health insurance was unconstitutional. On June 28, 2012, the Supreme Court ruled by a 5–4 vote in National Federation of Independent Business v. Sebelius that the mandate was constitutional under the U.S. Congress\\'s taxing authority. In Burwell v. Hobby Lobby the Court ruled that \"closely-held\" for-profit corporations could be exempt on religious grounds under the Religious Freedom Restoration Act from regulations adopted under the ACA that would have required them to pay for insurance that covered certain contraceptives. In June 2015, the Court ruled 6–3 in King v. Burwell that subsidies to help individuals and families purchase health insurance were authorized for those doing so on both the federal exchange and state exchanges, not only those purchasing plans \"established by the State\", as the statute reads.\\n\\n\\n=== Foreign policy ===\\n\\nIn February and March 2009, Vice President Joe Biden and Secretary of State Hillary Clinton made separate overseas trips to announce a \"new era\" in U.S. foreign relations with Russia and Europe, using the terms \"break\" and \"reset\" to signal major changes from the policies of the preceding administration. Obama attempted to reach out to Arab leaders by granting his first interview to an Arab satellite TV network, Al Arabiya. On March 19, Obama continued his outreach to the Muslim world, releasing a New Year\\'s video message to the people and government of Iran. On June 4, 2009, Obama delivered a speech at Cairo University in Egypt calling for \"A New Beginning\" in relations between the Islamic world and the United States and promoting Middle East peace. On June 26, 2009, Obama condemned the Iranian government\\'s actions towards protesters following Iran\\'s 2009 presidential election.\\nIn 2011, Obama ordered a drone strike in Yemen which targeted and killed Anwar al-Awlaki, an American imam suspected of being a leading Al-Qaeda organizer. al-Awlaki became the first U.S. citizen to be targeted and killed by a U.S. drone strike. The Department of Justice released a memo justifying al-Awlaki\\'s death as a lawful act of war, while civil liberties advocates described it as a violation of al-Awlaki\\'s constitutional right to due process. The killing led to significant controversy. His teenage son and young daughter, also Americans, were later killed in separate U.S. military actions, although they were not targeted specifically.\\n\\nIn March 2015, Obama declared that he had authorized U.S. forces to provide logistical and intelligence support to the Saudis in their military intervention in Yemen, establishing a \"Joint Planning Cell\" with Saudi Arabia. In 2016, the Obama administration proposed a series of arms deals with Saudi Arabia worth $115 billion. Obama halted the sale of guided munition technology to Saudi Arabia after Saudi warplanes targeted a funeral in Yemen\\'s capital Sanaa, killing more than 140 people.\\nIn September 2016 Obama was snubbed by Xi Jinping and the Chinese Communist Party as he descended from Air Force One to the tarmac of Hangzhou International Airport for the 2016 G20 Hangzhou summit without the usual red carpet welcome.\\n\\n\\n==== War in Iraq ====\\n\\nOn February 27, 2009, Obama announced that combat operations in Iraq would end within 18 months. The Obama administration scheduled the withdrawal of combat troops to be completed by August 2010, decreasing troop\\'s levels from 142,000 while leaving a transitional force of about 50,000 in Iraq until the end of 2011. On August 19, 2010, the last U.S. combat brigade exited Iraq. Remaining troops transitioned from combat operations to counter-terrorism and the training, equipping, and advising of Iraqi security forces. On August 31, 2010, Obama announced that the United States combat mission in Iraq was over. On October 21, 2011, President Obama announced that all U.S. troops would leave Iraq in time to be \"home for the holidays.\"\\nIn June 2014, following the capture of Mosul by ISIL, Obama sent 275 troops to provide support and security for U.S. personnel and the U.S. Embassy in Baghdad. ISIS continued to gain ground and to commit widespread massacres and ethnic cleansing. In August 2014, during the Sinjar massacre, Obama ordered a campaign of U.S. airstrikes against ISIL. By the end of 2014, 3,100 American ground troops were committed to the conflict and 16,000 sorties were flown over the battlefield, primarily by U.S. Air Force and Navy pilots. In early 2015, with the addition of the \"Panther Brigade\" of the 82nd Airborne Division the number of U.S. ground troops in Iraq increased to 4,400, and by July American-led coalition air forces counted 44,000 sorties over the battlefield.\\n\\n\\n==== Afghanistan and Pakistan ====\\n\\nIn his election campaign, Obama called the war in Iraq a \"dangerous distraction\" and that emphasis should instead be put on the war in Afghanistan, the region he cites as being most likely where an attack against the United States could be launched again. Early in his presidency, Obama moved to bolster U.S. troop strength in Afghanistan. He announced an increase in U.S. troop levels to 17,000 military personnel in February 2009 to \"stabilize a deteriorating situation in Afghanistan\", an area he said had not received the \"strategic attention, direction and resources it urgently requires.\" He replaced the military commander in Afghanistan, General David D. McKiernan, with former Special Forces commander Lt. Gen. Stanley A. McChrystal in May 2009, indicating that McChrystal\\'s Special Forces experience would facilitate the use of counterinsurgency tactics in the war. On December 1, 2009, Obama announced the deployment of an additional 30,000 military personnel to Afghanistan and proposed to begin troop withdrawals 18 months from that date; this took place in July 2011. David Petraeus replaced McChrystal in June 2010, after McChrystal\\'s staff criticized White House personnel in a magazine article. In February 2013, Obama said the U.S. military would reduce the troop level in Afghanistan from 68,000 to 34,000 U.S. troops by February 2014. In October 2015, the White House announced a plan to keep U.S. Forces in Afghanistan indefinitely in light of the deteriorating security situation.\\nRegarding neighboring Pakistan, Obama called its tribal border region the \"greatest threat\" to the security of Afghanistan and Americans, saying that he \"cannot tolerate a terrorist sanctuary.\" In the same speech, Obama claimed that the U.S. \"cannot succeed in Afghanistan or secure our homeland unless we change our Pakistan policy.\"\\n\\n\\n===== Death of Osama bin Laden =====\\n\\nStarting with information received from Central Intelligence Agency operatives in July 2010, the CIA developed intelligence over the next several months that determined what they believed to be the hideout of Osama bin Laden. He was living in seclusion in a large compound in Abbottabad, Pakistan, a suburban area 35 miles (56 km) from Islamabad. CIA head Leon Panetta reported this intelligence to President Obama in March 2011. Meeting with his national security advisers over the course of the next six weeks, Obama rejected a plan to bomb the compound, and authorized a \"surgical raid\" to be conducted by United States Navy SEALs. The operation took place on May 1, 2011, and resulted in the shooting death of bin Laden and the seizure of papers, computer drives and disks from the compound. DNA testing was one of five methods used to positively identify bin Laden\\'s corpse, which was buried at sea several hours later. Within minutes of the President\\'s announcement from Washington, DC, late in the evening on May 1, there were spontaneous celebrations around the country as crowds gathered outside the White House, and at New York City\\'s Ground Zero and Times Square. Reaction to the announcement was positive across party lines, including from former presidents Bill Clinton and George W. Bush.\\n\\n\\n==== Relations with Cuba ====\\n\\nSince the spring of 2013, secret meetings were conducted between the United States and Cuba in the neutral locations of Canada and Vatican City. The Vatican first became involved in 2013 when Pope Francis advised the U.S. and Cuba to exchange prisoners as a gesture of goodwill. On December 10, 2013, Cuban President Raúl Castro, in a significant public moment, greeted and shook hands with Obama at the Nelson Mandela memorial service in Johannesburg.\\nIn December 2014, after the secret meetings, it was announced that Obama, with Pope Francis as an intermediary, had negotiated a restoration of relations with Cuba, after nearly sixty years of détente. Popularly dubbed the Cuban Thaw, The New Republic deemed the Cuban Thaw to be \"Obama\\'s finest foreign policy achievement.\" On July 1, 2015, President Obama announced that formal diplomatic relations between Cuba and the United States would resume, and embassies would be opened in Washington and Havana. The countries\\' respective \"interests sections\" in one another\\'s capitals were upgraded to embassies on July 20 and August 13, 2015, respectively. Obama visited Havana, Cuba for two days in March 2016, becoming the first sitting U.S. president to arrive since Calvin Coolidge in 1928.\\n\\n\\n==== Israel ====\\n\\nDuring the initial years of the Obama administration, the U.S. increased military cooperation with Israel, including increased military aid, re-establishment of the U.S.–Israeli Joint Political Military Group and the Defense Policy Advisory Group, and an increase in visits among high-level military officials of both countries. The Obama administration asked Congress to allocate money toward funding the Iron Dome program in response to the waves of Palestinian rocket attacks on Israel. In March 2010, Obama took a public stance against plans by the government of Israeli prime minister Benjamin Netanyahu to continue building Jewish housing projects in predominantly Arab neighborhoods of East Jerusalem. In 2011, the United States vetoed a Security Council resolution condemning Israeli settlements, with the United States being the only nation to do so. Obama supports the two-state solution to the Arab–Israeli conflict based on the 1967 borders with land swaps.\\nIn 2013, Jeffrey Goldberg reported that, in Obama\\'s view, \"with each new settlement announcement, Netanyahu is moving his country down a path toward near-total isolation.\" In 2014, Obama likened the Zionist movement to the civil rights movement in the United States. He said both movements seek to bring justice and equal rights to historically persecuted peoples, explaining: \"To me, being pro-Israel and pro-Jewish is part and parcel with the values that I\\'ve been fighting for since I was politically conscious and started getting involved in politics.\" Obama expressed support for Israel\\'s right to defend itself during the 2014 Israel–Gaza conflict. In 2015, Obama was harshly criticized by Israel for advocating and signing the Iran Nuclear Deal; Israeli prime minister Benjamin Netanyahu, who had advocated the U.S. congress to oppose it, said the deal was \"dangerous\" and \"bad.\"\\nOn December 23, 2016, under the Obama administration, the United States abstained from United Nations Security Council Resolution 2334, which condemned Israeli settlement building in the occupied Palestinian territories as a violation of international law, effectively allowing it to pass. Netanyahu strongly criticized the Obama administration\\'s actions, and the Israeli government withdrew its annual dues from the organization, which totaled $6 million, on January 6, 2017. On January 5, 2017, the United States House of Representatives voted 342–80 to condemn the UN Resolution.\\n\\n\\n==== Libya ====\\n\\nIn February 2011, protests in Libya began against long-time dictator Muammar Gaddafi as part of the Arab Spring. They soon turned violent. In March, as forces loyal to Gaddafi advanced on rebels across Libya, calls for a no-fly zone came from around the world, including Europe, the Arab League, and a resolution passed unanimously by the U.S. Senate. In response to the passage of United Nations Security Council Resolution 1973 on March 17, the Foreign Minister of Libya Moussa Koussa announced a ceasefire. However Gaddafi\\'s forces continued to attack the rebels.\\nOn March 19, a multinational coalition led by France and the United Kingdom with Italian and U.S. support, approved by Obama, took part in air strikes to destroy the Libyan government\\'s air defense capabilities to protect civilians and enforce a no-fly-zone, including the use of Tomahawk missiles, B-2 Spirits, and fighter jets. Six days later, on March 25, by unanimous vote of all its 28 members, NATO took over leadership of the effort, dubbed Operation Unified Protector. Some members of Congress questioned whether Obama had the constitutional authority to order military action in addition to questioning its cost, structure and aftermath. In 2016 Obama said \"Our coalition could have and should have done more to fill a vacuum left behind\" and that it was \"a mess\". He has stated that the lack of preparation surrounding the days following the government\\'s overthrow was the \"worst mistake\" of his presidency.\\n\\n\\n==== Syrian civil war ====\\n\\nOn August 18, 2011, several months after the start of the Syrian civil war, Obama issued a written statement that said: \"The time has come for President Assad to step aside.\" This stance was reaffirmed in November 2015. In 2012, Obama authorized multiple programs run by the CIA and the Pentagon to train anti-Assad rebels. The Pentagon-run program was later found to have failed and was formally abandoned in October 2015.\\nIn the wake of a chemical weapons attack in Syria, formally blamed by the Obama administration on the Assad government, Obama chose not to enforce the \"red line\" he had pledged and, rather than authorize the promised military action against Assad, went along with the Russia-brokered deal that led to Assad giving up chemical weapons; however attacks with chlorine gas continued. In 2014, Obama authorized an air campaign aimed primarily at ISIL.\\n\\n\\n==== Iran nuclear talks ====\\n\\nOn October 1, 2009, the Obama administration went ahead with a Bush administration program, increasing nuclear weapons production. The \"Complex Modernization\" initiative expanded two existing nuclear sites to produce new bomb parts. In November 2013, the Obama administration opened negotiations with Iran to prevent it from acquiring nuclear weapons, which included an interim agreement. Negotiations took two years with numerous delays, with a deal being announced on July 14, 2015. The deal titled the \"Joint Comprehensive Plan of Action\" saw sanctions removed in exchange for measures that would prevent Iran from producing nuclear weapons. While Obama hailed the agreement as being a step towards a more hopeful world, the deal drew strong criticism from Republican and conservative quarters, and from Israeli Prime Minister Benjamin Netanyahu. In addition, the transfer of $1.7 billion in cash to Iran shortly after the deal was announced was criticized by the Republican party. The Obama administration said that the payment in cash was because of the \"effectiveness of U.S. and international sanctions.\" In order to advance the deal, the Obama administration shielded Hezbollah from the Drug Enforcement Administration\\'s Project Cassandra investigation regarding drug smuggling and from the Central Intelligence Agency.\\nOn a side note, the very same year, in December 2015, Obama started a $348 billion worth program to back the biggest U.S. buildup of nuclear arms since Ronald Reagan left the White House.\\n\\n\\n==== Russia ====\\n\\nIn March 2010, an agreement was reached with the administration of Russian President Dmitry Medvedev to replace the 1991 Strategic Arms Reduction Treaty with a new pact reducing the number of long-range nuclear weapons in the arsenals of both countries by about a third. Obama and Medvedev signed the New START treaty in April 2010, and the U.S. Senate ratified it in December 2010. In December 2011, Obama instructed agencies to consider LGBT rights when issuing financial aid to foreign countries. In August 2013, he criticized Russia\\'s law that discriminates against homosexual people, but he stopped short of advocating a boycott of the upcoming 2014 Winter Olympics in Sochi, Russia.\\nAfter Russia\\'s invasion of Crimea in 2014, military intervention in Syria in 2015, and the interference in the 2016 U.S. presidential election, George Robertson, a former UK defense secretary and NATO secretary-general, said Obama had \"allowed Putin to jump back on the world stage and test the resolve of the West\", adding that the legacy of this disaster would last.\\n\\n\\n== Cultural and political image ==\\n\\nObama\\'s family history, upbringing, and Ivy League education differ markedly from those of African-American politicians who rose to prominence in the 1960s through their involvement in the civil rights movement. Expressing puzzlement over questions about whether he is \"black enough\", Obama told an August 2007 meeting of the National Association of Black Journalists that \"we\\'re still locked in this notion that if you appeal to white folks then there must be something wrong.\" Obama acknowledged his youthful image in an October 2007 campaign speech, remarking: \"I wouldn\\'t be here if, time and again, the torch had not been passed to a new generation.\" Additionally, Obama has frequently been referred to as an exceptional orator. During his pre-inauguration transition period and continuing into his presidency, Obama delivered a series of weekly video addresses on YouTube.\\n\\n\\n=== Job approval ===\\n\\nAccording to the Gallup Organization, Obama began his presidency with a 68 percent approval rating, the fifth highest for a president following their swearing in. His ratings remained above the majority level until November 2009 and by August 2010 his approval was in the low 40s, a trend similar to Ronald Reagan\\'s and Bill Clinton\\'s first years in office. Following the death of Osama bin Laden on May 2, 2011, Obama experienced a small poll bounce and steadily maintained 50–53 percent approval for about a month, until his approval numbers dropped back to the low 40s.\\nHis approval rating fell to 38 percent on several occasions in late 2011 before recovering in mid-2012 with polls showing an average approval of 50 percent. After his second inauguration in 2013, Obama\\'s approval ratings remained stable around 52 percent before declining for the rest of the year and eventually bottoming out at 39 percent in December. In polling conducted before the 2014 midterm elections, Obama\\'s approval ratings were at their lowest with his disapproval rating reaching a high of 57 percent. His approval rating continued to lag throughout most of 2015 but began to reach the high 40s by the end of the year. According to Gallup, Obama\\'s approval rating reached 50 percent in March 2016, a level unseen since May 2013. In polling conducted January 16–19, 2017, Obama\\'s final approval rating was 59 percent, which placed him on par with George H. W. Bush and Dwight D. Eisenhower, whose final Gallup ratings also measured in the high 50s.\\nObama has maintained relatively positive public perceptions after his presidency. In Gallup\\'s retrospective approval polls of former presidents, Obama garnered a 63 percent approval rating in 2018 and again in 2023, ranking him the fourth most popular president since World War II.\\n\\n\\n=== Foreign perceptions ===\\nPolls showed strong support for Obama in other countries both before and during his presidency. In a February 2009 poll conducted in Western Europe and the U.S. by Harris Interactive for France 24 and the International Herald Tribune, Obama was rated as the most respected world leader, as well as the most powerful. In a similar poll conducted by Harris in May 2009, Obama was rated as the most popular world leader, as well as the one figure most people would pin their hopes on for pulling the world out of the economic downturn.\\nOn October 9, 2009—only nine months into his first term—the Norwegian Nobel Committee announced that Obama had won the 2009 Nobel Peace Prize \"for his extraordinary efforts to strengthen international diplomacy and cooperation between peoples\", which drew a mixture of praise and criticism from world leaders and media figures. He became the fourth U.S. president to be awarded the Nobel Peace Prize, and the third to become a Nobel laureate while in office. He himself called it a \"call to action\" and remarked: \"I do not view it as a recognition of my own accomplishments but rather an affirmation of American leadership on behalf of aspirations held by people in all nations\".\\n\\n\\n=== Thanks, Obama ===\\n\\nIn 2009, the saying \"thanks, Obama\" first appeared in a Twitter hashtag, \"#thanks Obama\", and was later used in a demotivational poster. It was later adopted satirically to blame Obama for any socio-economic ills. Obama himself used the phrase in video in 2015 and 2016. In 2017, the phrase was used by Stephen Colbert to express gratitude to Obama on his last day in office. In 2022, President Joe Biden\\'s Twitter account posted the phrase.\\n\\n\\n== Post-presidency (2017–present) ==\\n\\nObama\\'s presidency ended on January 20, 2017, upon the inauguration of his successor, Donald Trump. The family moved to a house they rented in Kalorama, Washington, D.C. On March 2, the John F. Kennedy Presidential Library and Museum awarded the Profile in Courage Award to Obama \"for his enduring commitment to democratic ideals and elevating the standard of political courage.\" His first public appearance since leaving the office was a seminar at the University of Chicago on April 24, where he appealed for a new generation to participate in politics. On September 7, Obama partnered with former presidents Jimmy Carter, George H. W. Bush, Bill Clinton, and George W. Bush to work with One America Appeal to help the victims of Hurricane Harvey and Hurricane Irma in the Gulf Coast and Texas communities. From October 31 to November 1, Obama hosted the inaugural summit of the Obama Foundation, which he intended to be the central focus of his post-presidency and part of his ambitions for his subsequent activities following his presidency to be more consequential than his time in office.\\nBarack and Michelle Obama signed a deal on May 22, 2018, to produce docu-series, documentaries and features for Netflix under the Obamas\\' newly formed production company, Higher Ground Productions. Higher Ground\\'s first film, American Factory, won the Academy Award for Best Documentary Feature in 2020. On October 24, a pipe bomb addressed to Obama was intercepted by the Secret Service. It was one of several pipe-bombs that had been mailed out to Democratic lawmakers and officials. In 2019, Barack and Michelle Obama bought a home on Martha\\'s Vineyard from Wyc Grousbeck. On October 29, Obama criticized \"wokeness\" and call-out culture at the Obama Foundation\\'s annual summit.\\nObama was reluctant to make an endorsement in the 2020 Democratic presidential primaries because he wanted to position himself to unify the party, regardless of the nominee. On April 14, 2020, Obama endorsed Biden, the presumptive nominee, for president in the presidential election, stating that he has \"all the qualities we need in a president right now.\" In May, Obama criticized President Trump for his handling of the COVID-19 pandemic, calling his response to the crisis \"an absolute chaotic disaster\", and stating that the consequences of the Trump presidency have been \"our worst impulses unleashed, our proud reputation around the world badly diminished, and our democratic institutions threatened like never before.\" On November 17, Obama\\'s presidential memoir, A Promised Land, was released.\\nIn February 2021, Obama and musician Bruce Springsteen started a podcast called Renegades: Born in the USA where the two talk about \"their backgrounds, music and their \\'enduring love of America.\\'\" Later that year, Regina Hicks had signed a deal with Netflix, in a venture with his and Michelle\\'s Higher Ground to develop comedy projects.\\n\\nOn March 4, 2022, Obama won an Audio Publishers Association (APA) Award in the best narration by the author category for the narration of his memoir A Promised Land. On April 5, Obama visited the White House for the first time since leaving office, in an event celebrating the 12th annual anniversary of the signing of the Affordable Care Act. In June, it was announced that the Obamas and their podcast production company, Higher Ground, signed a multi-year deal with Audible. In September, Obama visited the White House to unveil his and Michelle\\'s official White House portraits. Around the same time, he won a Primetime Emmy Award for Outstanding Narrator for his narration in the Netflix documentary series Our Great National Parks.\\nIn 2022, Obama opposed expanding the Supreme Court beyond the present nine Justices.\\nIn March 2023, Obama traveled to Australia as a part of his speaking tour of the country. During the trip, Obama met with Australian prime minister Anthony Albanese and visited Melbourne for the first time. Obama was reportedly paid more than $1 million for two speeches.\\nIn October 2023, during the Gaza war, Obama declared that Israel must dismantle Hamas in the wake of the Hamas-led attack on Israel. Weeks later, Obama warned Israel that its actions could \"harden Palestinian attitudes for generations\" and weaken international support for Israel; any military strategy that ignored the war\\'s human costs \"could ultimately backfire.\"\\nIn July 2024, Obama expressed concerns about Biden\\'s campaign viability after his critically maligned debate performance against former president Trump. On July 21, Biden withdrew his candidacy and swiftly endorsed Vice President Harris right after to run as the Democratic nominee. Obama endorsed Harris alongside his wife Michelle five days later and delivered a speech at the 2024 Democratic National Convention formally endorsing her. He joined Harris on the campaign trail in October, traveling to various swing states and emphasizing her record as a prosecutor, senator, and vice president and advocating for increased voter turnout, and his criticisms of Donald Trump and the Republican Party were widely reported by various media outlets. After Trump was declared the winner of the election on November 6, Obama and Michelle congratulated him and Vice President–elect JD Vance while praising the Harris campaign and calling on liberal voters to continue supporting democracy and human rights.\\n\\n\\n== Legacy and recognition ==\\nObama has been described as one of the most effective campaigners in American history (his 2008 campaign being particularly highlighted) as well as one of the most talented political orators of the 21st century. Historian Julian Zelizer credits Obama with \"a keen sense of how the institutions of government work and the ways that his team could design policy proposals.\" Zeitzer notes Obama\\'s policy successes included the economic stimulus package which ended the Great Recession and the Dodd-Frank financial and consumer protection reforms, as well as the Affordable Care Act. Zeitzer also notes the Democratic Party lost power and numbers of elected officials during Obama\\'s term, saying that the consensus among historians is that Obama \"turned out to be a very effective policymaker but not a tremendously successful party builder.\" Zeitzer calls this the \"defining paradox of Obama\\'s presidency\".\\nThe Brookings Institution noted that Obama passed \"only one major legislative achievement (Obamacare)—and a fragile one at that—the legacy of Obama\\'s presidency mainly rests on its tremendous symbolic importance and the fate of a patchwork of executive actions.\" David W. Wise noted that Obama fell short \"in areas many Progressives hold dear\", including the continuation of drone strikes, not going after big banks during the Great Recession, and failing to strengthen his coalition before pushing for Obamacare. Wise called Obama\\'s legacy that of \"a disappointingly conventional president\".\\nObama\\'s most significant accomplishment is generally considered to be the Affordable Care Act (ACA), provisions of which went into effect from 2010 to 2020. Many attempts by Senate Republicans to repeal the ACA, including a \"skinny repeal\", have thus far failed. However, in 2017, the penalty for violating the individual mandate was repealed effective 2019. Together with the Health Care and Education Reconciliation Act amendment, it represents the U.S. healthcare system\\'s most significant regulatory overhaul and expansion of coverage since the passage of Medicare and Medicaid in 1965.\\nMany commentators credit Obama with averting a threatened depression and pulling the economy back from the Great Recession. According to the U.S. Bureau of Labor Statistics, the Obama administration created 11.3 million jobs from the month after his first inauguration to the end of his second term. In 2010, Obama signed into effect the Dodd–Frank Wall Street Reform and Consumer Protection Act. Passed as a response to the 2008 financial crisis, it brought the most significant changes to financial regulation in the United States since the regulatory reform that followed the Great Depression under Democratic President Franklin D. Roosevelt.\\nIn 2009, Obama signed into law the National Defense Authorization Act for Fiscal Year 2010, which contained in it the Matthew Shepard and James Byrd Jr. Hate Crimes Prevention Act, the first addition to existing federal hate crime law in the United States since Democratic President Bill Clinton signed into law the Church Arson Prevention Act of 1996. The act expanded existing federal hate crime laws in the United States, and made it a federal crime to assault people based on sexual orientation, gender identity, or disability.\\nAs president, Obama advanced LGBT rights. In 2010, he signed the Don\\'t Ask, Don\\'t Tell Repeal Act, which brought an end to \"don\\'t ask, don\\'t tell\" policy in the U.S. armed forces that banned open service from LGBT people; the law went into effect the following year. In 2016, his administration brought an end to the ban on transgender people serving openly in the U.S. armed forces. A Gallup poll, taken in the final days of Obama\\'s term, showed that 68 percent of Americans believed the U.S. had made progress on LGBT rights during Obama\\'s eight years in office.\\nObama substantially escalated the use of drone strikes against suspected militants and terrorists associated with al-Qaeda and the Taliban. In 2016, the last year of his presidency, the U.S. dropped 26,171 bombs on seven different countries. Obama left about 8,400 U.S. troops in Afghanistan, 5,262 in Iraq, 503 in Syria, 133 in Pakistan, 106 in Somalia, seven in Yemen, and two in Libya at the end of his presidency.\\nAccording to Pew Research Center and United States Bureau of Justice Statistics, from December 31, 2009, to December 31, 2015, inmates sentenced in U.S. federal custody declined by five percent. This is the largest decline in sentenced inmates in U.S. federal custody since Democratic president Jimmy Carter. By contrast, the federal prison population increased significantly under presidents Ronald Reagan, George H. W. Bush, Bill Clinton, and George W. Bush.\\nHuman Rights Watch (HRW) called Obama\\'s human rights record \"mixed\", adding that \"he has often treated human rights as a secondary interest—nice to support when the cost was not too high, but nothing like a top priority he championed.\"\\nObama left office in January 2017 with a 60 percent approval rating. He gained 10 spots from the same survey in 2015 from the Brookings Institution that ranked him the 18th-greatest American president. In Gallup\\'s 2018 job approval poll for the past 10 U.S. presidents, he received a 63 percent approval rating.\\n\\n\\n=== Presidential library ===\\n\\nThe Barack Obama Presidential Center is Obama\\'s planned presidential library. It will be hosted by the University of Chicago and located in Jackson Park on the South Side of Chicago.\\n\\n\\n=== Awards and honors ===\\n\\nObama received the Norwegian Nobel Committee\\'s Nobel Peace Prize in 2009, The Shoah Foundation Institute for Visual History and Education\\'s Ambassador of Humanity Award in 2014, the John F. Kennedy Profile in Courage Award in 2017, and the Robert F. Kennedy Center for Justice and Human Rights Ripple of Hope Award in 2018. He was named TIME Magazine\\'s Time Person of the Year in 2008 and 2012. He also received two Grammy Awards for Best Spoken Word Album for Dreams from My Father (2006), and The Audacity of Hope (2008) as well as two Primetime Emmy Awards for Outstanding Narrator for Our Great National Parks (2022), and Working: What We Do All Day (2023). He also won two Children\\'s and Family Emmy Awards.\\n\\n\\n=== Eponymy ===\\n\\n\\n== Bibliography ==\\n\\n\\n== See also ==\\n\\n\\n=== Politics ===\\nDREAM Act\\nFraud Enforcement and Recovery Act of 2009\\nImmigration Reform and Control Act of 1986\\nIRS targeting controversy\\nMiddle Class Tax Relief and Job Creation Act of 2012\\nNational Broadband Plan (United States)\\nOffice of Energy Efficiency and Renewable Energy\\nSocial policy of the Barack Obama administration\\nSPEECH Act\\nStay with It\\nWhite House Office of Energy and Climate Change Policy\\n\\n\\n=== Other ===\\nRoberts Court\\nSpeeches of Barack Obama\\n\\n\\n=== Lists ===\\nAssassination threats against Barack Obama\\nList of African-American United States senators\\nList of Barack Obama 2008 presidential campaign endorsements\\nList of Barack Obama 2012 presidential campaign endorsements\\nList of federal political scandals, 2009–17\\nList of people granted executive clemency by Barack Obama\\nList of presidents of the United States\\nList of presidents of the United States by previous experience\\nList of things named after Barack Obama\\n\\n\\n== Notes ==\\n\\n\\n== References ==\\n\\n\\n=== Bibliography ===\\n\\n\\n== Further reading ==\\n\\n\\n== External links ==\\n\\n\\n=== Official ===\\nOfficial website of The Obama Foundation\\nOfficial website of the Barack Obama Presidential Library\\nOfficial website of Organizing for Action\\nWhite House biography\\n\\n\\n=== Other ===\\nColumn archive at The Huffington Post\\nBarack Obama on Twitter \\nUnited States Congress. \"Barack Obama (id: O000167)\". Biographical Directory of the United States Congress.\\nAppearances on C-SPAN\\nBarack Obama at IMDb\\nBarack Obama collected news and commentary at The New York Times\\nBarack Obama articles in the archive of the Chicago Tribune\\nWorks by Barack Obama at Project Gutenberg\\nWorks by or about Barack Obama at the Internet Archive\\nWorks by Barack Obama at LibriVox (public domain audiobooks) \\nBarack Obama on Nobelprize.org \\nBarack Obama at Politifact'},\n {'role': 'assistant',\n  'content': \"Tool Name: run_python_code\\nTool Input: {'code': 'from datetime import datetime\\\\nobama_birth_year = 1961\\\\ncurrent_year = datetime.now().year\\\\nobama_age = current_year - obama_birth_year\\\\nobama_age_squared = obama_age ** 2\\\\nobama_age_squared'}\\nObservation: 4096\"},\n {'role': 'assistant',\n  'content': Thought(type='final_answer', text='4096'),\n  'meta': {'input_tokens': 17998, 'output_tokens': 19}}]",
    "crumbs": [
      "Examples",
      "React"
    ]
  },
  {
    "objectID": "docs/examples/001_rag.html",
    "href": "docs/examples/001_rag.html",
    "title": "FewShot RAG Agent",
    "section": "",
    "text": "from pathlib import Path\nfrom pprint import pprint\n\nfrom ladle.diagrams import (\n    Define,Scope,\n    V,E,\n    draw_diagram\n)\nfrom ladle.chat import Chat\nfrom ladle.std import Condition as C\nfrom ladle.db import ChromaClient\n\n\nchorma_client = ChromaClient()\n\n\ndog_docs = [\n    {\n        'id': 'dog1',\n        'text': 'The Golden Retriever is a friendly, intelligent breed known for its golden coat. They make excellent family pets and are great with children.',\n        'metadata': {'breed': 'Golden Retriever'}\n    },\n    {\n        'id': 'dog2', \n        'text': 'German Shepherds are loyal, protective dogs often used in police work. They are highly trainable and good at various tasks.',\n        'metadata': {'breed': 'German Shepherd'}\n    },\n    {\n        'id': 'dog3',\n        'text': 'The Golden Retriever is a friendly, intelligent breed with a beautiful golden coat. They are wonderful family pets that get along well with kids.',\n        'metadata': {'breed': 'Golden Retriever'}  # Near duplicate of dog1\n    },\n    {\n        'id': 'dog4',\n        'text': 'Huskies are energetic working dogs bred for cold climates. They have thick fur and often blue eyes.',\n        'metadata': {'breed': 'Husky'}\n    },\n    {\n        'id': 'dog5',\n        'text': 'Siberian Huskies are active working dogs that thrive in cold weather. They are known for their thick coats and striking blue eyes.',\n        'metadata': {'breed': 'Husky'}  # Near duplicate of dog4\n    }\n]\n\n# Add documents to index\nchorma_client.add_collection(\"dog_docs\",exists_ok=True)\nchorma_client.upsert(collection_name=\"dog_docs\",docs=dog_docs)\n\n[{'id': 'dog1',\n  'text': 'The Golden Retriever is a friendly, intelligent breed known for its golden coat. They make excellent family pets and are great with children.',\n  'metadata': {'breed': 'Golden Retriever'}},\n {'id': 'dog2',\n  'text': 'German Shepherds are loyal, protective dogs often used in police work. They are highly trainable and good at various tasks.',\n  'metadata': {'breed': 'German Shepherd'}},\n {'id': 'dog3',\n  'text': 'The Golden Retriever is a friendly, intelligent breed with a beautiful golden coat. They are wonderful family pets that get along well with kids.',\n  'metadata': {'breed': 'Golden Retriever'}},\n {'id': 'dog4',\n  'text': 'Huskies are energetic working dogs bred for cold climates. They have thick fur and often blue eyes.',\n  'metadata': {'breed': 'Husky'}},\n {'id': 'dog5',\n  'text': 'Siberian Huskies are active working dogs that thrive in cold weather. They are known for their thick coats and striking blue eyes.',\n  'metadata': {'breed': 'Husky'}}]\n\n\n\n# Query about golden retrievers\nquery = \"Tell me about golden retrievers as family pets\"\n\n# Get similar documents\nresults = chorma_client.query(collection_name=\"dog_docs\",query=query,k=2)\nresults\n\n[{'id': 'dog1',\n  'text': 'The Golden Retriever is a friendly, intelligent breed known for its golden coat. They make excellent family pets and are great with children.',\n  'metadata': {'breed': 'Golden Retriever'},\n  'distance': 0.6284635066986084},\n {'id': 'dog3',\n  'text': 'The Golden Retriever is a friendly, intelligent breed with a beautiful golden coat. They are wonderful family pets that get along well with kids.',\n  'metadata': {'breed': 'Golden Retriever'},\n  'distance': 0.6371400952339172}]\n\n\n\nrag_prompt = [\n            {'role':'system','content':'''\n            You are a helpful assistant that answers questions about dogs.\n\n            Here are some examples of how to answer questions about dogs:\n            {% for example in examples %}\n            Question: {{example['question']}}\n            Answer: {{example['answer']}}\n            {% endfor %}\n\n            I found the following documents that may be relevant to the user's question:\n            {% for doc in docs %}\n            {{doc['text']}}\n            {% endfor %}\n            '''},\n            {'role':'user','content':'{{input}}'},\n            ]\n\nstyle_examples = [\n    {\n        'question': \"What are the key traits of Pandas?\",\n        'answer': \"\"\"Here are the key traits of Pandas:\n            • Pandas are a type of bear\n            • They are native to South America\n            • They are known for their black and white fur\n            • They are known for their love of bamboo\"\"\"\n    },\n    {\n        'question': \"What are the key traits of Lions?\",\n        'answer': \"\"\"Here are the key traits of Lions:\n            • Lions are a type of bear\n            • They are native to Africa\n            • They are known for their mane of hair\"\"\"\n    }\n]\n\npprint(json_render(rag_prompt,context={\n    'docs':results,\n    'input':\"Tell me about golden retrievers as family pets\",\n    'examples':style_examples\n    }))\n\n[{'content': 'You are a helpful assistant that answers questions about dogs.\\n'\n             '\\n'\n             'Here are some examples of how to answer questions about dogs:\\n'\n             '\\n'\n             'Question: What are the key traits of Pandas?\\n'\n             'Answer: Here are the key traits of Pandas:\\n'\n             '• Pandas are a type of bear\\n'\n             '• They are native to South America\\n'\n             '• They are known for their black and white fur\\n'\n             '• They are known for their love of bamboo\\n'\n             '\\n'\n             'Question: What are the key traits of Lions?\\n'\n             'Answer: Here are the key traits of Lions:\\n'\n             '• Lions are a type of bear\\n'\n             '• They are native to Africa\\n'\n             '• They are known for their mane of hair\\n'\n             '\\n'\n             '\\n'\n             'I found the following documents that may be relevant to the '\n             \"user's question:\\n\"\n             '\\n'\n             'The Golden Retriever is a friendly, intelligent breed known for '\n             'its golden coat. They make excellent family pets and are great '\n             'with children.\\n'\n             '\\n'\n             'The Golden Retriever is a friendly, intelligent breed with a '\n             'beautiful golden coat. They are wonderful family pets that get '\n             'along well with kids.',\n  'role': 'system'},\n {'content': 'Tell me about golden retrievers as family pets', 'role': 'user'}]\n\n\n\nrag_chat = Chat(model='gpt-4o-mini',messages=rag_prompt,examples=style_examples)\n\n\nwith Define('RAG Agent',type='flow') as RAG:\n    V('get_docs',chorma_client.query,\n        inputs=['Start(query=q,collection_name=collection_name,k=k)'],\n    )\n    V('chat',rag_chat,\n        inputs=['get_docs(docs)','Start(input=q)'],\n        outputs=['End']\n    )\n\n\n\n\n\n\n\n\n\nd = RAG()\nfor trace in d.run({'q':'tell me some stuff about golden retrievers','collection_name':'dog_docs','k':2}):\n    # trace.pprint()\n    pass\n\npprint(d.output)\n\n{'content': 'Here are some key traits of Golden Retrievers: They are a '\n            'friendly and intelligent breed, known for their beautiful golden '\n            'coat. They make excellent family pets and are great with '\n            'children.',\n 'meta': {'input_tokens': 315, 'output_tokens': 44},\n 'role': 'assistant'}",
    "crumbs": [
      "Examples",
      "RAG"
    ]
  },
  {
    "objectID": "docs/examples/099_future_agent_ideas.html",
    "href": "docs/examples/099_future_agent_ideas.html",
    "title": "ladle",
    "section": "",
    "text": "import os\nimport json\nfrom pathlib import Path\nfrom textwrap import dedent\nfrom pprint import pprint\nfrom pydantic import BaseModel,Field\nfrom typing import Union,Literal\n\nfrom ladle.diagrams import (\n    Define,Scope,\n    V,E,\n    draw_diagram\n)\nfrom ladle.core import has_missing\nfrom ladle.chat import Chat\nfrom ladle.std import Condition as C\nfrom ladle.tools import google_search, wikipedia_search,run_python_code\nfrom ladle.chat import speech_to_text,image_to_text\nimport logging\n\nimport sqlite3\nfrom sqlalchemy import create_engine, text\nfrom sqlmodel import SQLModel, Session, select, Field\nfrom typing import Optional\n\n\nlogger = logging.getLogger(__name__)\nTracing ideas: * log all trace objects to axiom * or langfuse (but they get expensive quickly, so maybe just log llm and rag calls and use them to define metrics)"
  },
  {
    "objectID": "docs/examples/099_future_agent_ideas.html#future",
    "href": "docs/examples/099_future_agent_ideas.html#future",
    "title": "ladle",
    "section": "Future",
    "text": "Future\n\n# TODO from here\n# supabase with pgvector RAG agents and RAG upload agents\n# collect userdata with SQL with explicit State management\n# monitor agent\n# supervisor agent\n\n\n# Rag summary, summarize each chunk if it is too long \n# and then use the summaries to answer the question\n\n# Superviser agent, deligate to sub agents, either QA, analytical or common sense question\n\n# reranking agent, rerank the results of the rag agent based on a smaller model, see how pinecone does it\n# and then use the reranked results to answer the question\n\n# chunked header, ask an llm to make a header and then embedd both of them.\n\n# write questions that the fragment can answer with LLM and embedd each question with the document fragment\n\n# contextual compression, ask an llm to extract the relevant information from the document based on the task\n\n# RAG with namespace that has a topics list, choose relevant topics and then rag them.\n\n# rag about splitting documents, have a context size around a splitted page\n    # put the before and after of the page in the metadata\n\n# rag with explanation about why each document is relevant\n\n# encoding source url for documnet in the metadata and use it to answer questions about the document as the sources.s\n\n# corrective RAG, if relevance of documents is not good enough, answer only based on a google search or combine \n# the google search with the retrived documents. List sources in the answer.\n    # for google search, use a 2 phase search, use the sources fo the first answer to rewrite the query into a better one\n\n# fusion retrieval - doucment store and keyword search, we take a weighted combination of the results of the two searches to rank the documents and then use them for generating the answer\n\n# graph RAG, we build a graph that links relevant chunks (see the graph rag nb)\n# than when querying, we take the best chunk, and gradually add more chunks to the context until we have a good answer\n# adding is based on  a dikjstra like algorithm that uses edge weights to add the most relevant additional chunk each time.\n\n\n# hierarchical RAG, we encode whole documents and their chunks into different vector dbs.\n# we than query the relevant chunks, and then look for the most relevant chunk out of those.\n# requires a filter on the metadata.\n\n# hypothetical rag, generate a hypothetical document that would answer the question and use it to query the vector db\n\n# proposition chunking, we generate self contained propositions from text with llm. \n# We then QA that the proposition is accurate and clear with an LLM.\n    # proposition generation and Grades for accuracy and clarity completeness etc are computed via structured output\n# we then use this propositions as the basis of a vector score for rag.\n\n# more examples of query transformations\n # rewrite query\n # generalize query \n # break apart the query into subqueries and then query each one from a vecdb\n\n\n# dynamic strategy agent, decompose the task into sub tasks, and then deligate the subtask into a REACT agent\n# that has a vecdb tool to use\n\n\ndef f(*x):\n    return sum(x)\n\nf(1,2,4)\n\n7\n\n\n\nlist_of_args = [1,2,3,4]\nf(*list_of_args)\n\n10\n\n\n\n# TODO clean up the examples and make the agent tutorial work without mocks\n# TODO maybe make the agent tutorial work with mocks of vecdb or something\n\n\n# than we get the user_id from start, we save it and we query the db for the user\n# if we get in the break point, the timeout string, we go to save data and then to end\n# if we there are no missing we go to save data.\n\n#TODO check for JSON type in sql\n\n\n# TODO show example of dynamically changing the choices of a Chat\n\n\n# Other agents to do\n\n# asking questions from user to fill out form\n# asking questions from user to fill out form continue from DB\n# routing to the right agent\n\n# saving documents and then using them, 2 different diagrams\n# programmer\n\n# diamant rag examples"
  },
  {
    "objectID": "docs/tutorials/batching.html",
    "href": "docs/tutorials/batching.html",
    "title": "Batching",
    "section": "",
    "text": "This feature is still in Beta and will likly evolve based on user feedback.\nAn advanced feature of flow diagrams is that they support async batching of operations. These means that if we want to process a list of tasks asynchronously, we dont have to write a node that processes the list.\nInstead, we write a node that processes a single item, and instruct Ladle to run our function on every item of a list in our input seperately.\nimport asyncio\nfrom ladle.diagrams import (\n    Define,\n    V,\n    E,\n)\nasync def async_add(a,b,c):\n    await asyncio.sleep(0.1)\n    return a+b+c\n\nclass Range:\n    def __init__(self,length,step=1):\n        self.length = length\n        self.step = step\n    def __call__(self,initial_value=0):\n        return list(range(initial_value,initial_value+self.length*self.step,self.step))\n    def __str__(self):\n        return f'Range({self.length},{self.step})'",
    "crumbs": [
      "Tutorials",
      "Batching"
    ]
  },
  {
    "objectID": "docs/tutorials/batching.html#for_each",
    "href": "docs/tutorials/batching.html#for_each",
    "title": "Batching",
    "section": "For_Each",
    "text": "For_Each\nWe can define a diagram as follows:\n\nwith Define('batch_adding',direction='LR') as D:\n    V('task_list1',Range(2),inputs=['Start(initial_value=a)'])\n    V('task_list2',Range(2),inputs=['Start(initial_value=b)'])\n    V('add_task',async_add,\n        inputs=['task_list1(a=.)','task_list2(b=.)','Start(c=c)'],\n        # for each is a list of input ports to map the function on\n        # in this case, we have input ports a,b and c\n        # a and b are for each, so we will run async_add for each combination of item from a and item from b\n        # c is not in for_each, so it will be the same for each run\n        for_each=['a','b'])\n    \n    # since async_add is now a foreach node, it will be called multiple times and the results will be collected into a list\n    # before being fed into a regular node\n    # we can sort the list to make sure that the results are deterministic\n    V('End',sorted,inputs=['add_task'])\n\n\n\n\n\n\n\n\n\nd=D()\nfor trace in d.run({'a':1000,'b':100,'c':10}):\n    trace.pprint()\n\nNode Start:\n{ 'input': {'a': 1000, 'b': 100, 'c': 10},\n  'output': {'a': 1000, 'b': 100, 'c': 10}}\n================================================================================\nNode task_list2:\n{'input': {'initial_value': 100}, 'output': [100, 101]}\n================================================================================\nNode task_list1:\n{'input': {'initial_value': 1000}, 'output': [1000, 1001]}\n================================================================================\nNode add_task[1]:\n{'input': {'a': 1000, 'b': 101, 'c': 10}, 'output': 1111}\n================================================================================\nNode add_task[0]:\n{'input': {'a': 1000, 'b': 100, 'c': 10}, 'output': 1110}\n================================================================================\nNode add_task[2]:\n{'input': {'a': 1001, 'b': 100, 'c': 10}, 'output': 1111}\n================================================================================\nNode add_task[3]:\n{'input': {'a': 1001, 'b': 101, 'c': 10}, 'output': 1112}\n================================================================================\nNode End:\n{'input': {0: [1111, 1110, 1111, 1112]}, 'output': [1110, 1111, 1111, 1112]}\n================================================================================",
    "crumbs": [
      "Tutorials",
      "Batching"
    ]
  },
  {
    "objectID": "docs/tutorials/batching.html#flat",
    "href": "docs/tutorials/batching.html#flat",
    "title": "Batching",
    "section": "Flat",
    "text": "Flat\nWorking with lists and lists of lists can get out of hand quickly. We also supply a flat that will flatten out nested lists\n\nwith Define('batch_adding',direction='TB') as D:\n    V('task_list',Range(3,step=10),inputs=['Start(initial_value=a)'])\n    \n    V('sub_task_list',Range(2),\n        inputs=['task_list(initial_value=.)'],\n        for_each=['initial_value'],\n        # Since Range returns lists, and it is a foreach node, the output of this node will be a list of lists\n        # flat=True will flatten this list of lists into a single list\n        flat=True)\n    \n    V('add_task',async_add,\n        inputs=['sub_task_list(a=.)','Start(b=b,c=c)'],\n        for_each=['a'],)\n    \n    # since async_add is now a foreach node, it will be called multiple times and the results will be collected into a list\n    V('End',sorted,inputs=['add_task'])\n\n\n\n\n\n\n\n\n\nd= D()\nfor trace in d.run({'a':1000,'b':0,'c':0}):\n    trace.pprint()\n\nNode Start:\n{'input': {'a': 1000, 'b': 0, 'c': 0}, 'output': {'a': 1000, 'b': 0, 'c': 0}}\n================================================================================\nNode task_list:\n{'input': {'initial_value': 1000}, 'output': [1000, 1010, 1020]}\n================================================================================\nNode sub_task_list[0]:\n{'input': {'initial_value': 1000}, 'output': [1000, 1001]}\n================================================================================\nNode sub_task_list[2]:\n{'input': {'initial_value': 1020}, 'output': [1020, 1021]}\n================================================================================\nNode sub_task_list[1]:\n{'input': {'initial_value': 1010}, 'output': [1010, 1011]}\n================================================================================\nNode add_task[1]:\n{'input': {'a': 1001, 'b': 0, 'c': 0}, 'output': 1001}\n================================================================================\nNode add_task[0]:\n{'input': {'a': 1000, 'b': 0, 'c': 0}, 'output': 1000}\n================================================================================\nNode add_task[4]:\n{'input': {'a': 1010, 'b': 0, 'c': 0}, 'output': 1010}\n================================================================================\nNode add_task[3]:\n{'input': {'a': 1021, 'b': 0, 'c': 0}, 'output': 1021}\n================================================================================\nNode add_task[2]:\n{'input': {'a': 1020, 'b': 0, 'c': 0}, 'output': 1020}\n================================================================================\nNode add_task[5]:\n{'input': {'a': 1011, 'b': 0, 'c': 0}, 'output': 1011}\n================================================================================\nNode End:\n{ 'input': {0: [1001, 1000, 1010, 1021, 1020, 1011]},\n  'output': [1000, 1001, 1010, 1011, 1020, 1021]}\n================================================================================",
    "crumbs": [
      "Tutorials",
      "Batching"
    ]
  },
  {
    "objectID": "docs/tutorials/batching.html#batching-beyond-ladle",
    "href": "docs/tutorials/batching.html#batching-beyond-ladle",
    "title": "Batching",
    "section": "Batching beyond Ladle",
    "text": "Batching beyond Ladle\nAt the moment Ladle’s batching is far from comprehensive. But this shouldn’t limit you. Not all of your logic needs to be in Ladle.\nLet us look at the following example. Lets say you are building a batch server and you would like to: * Process items every time you have 2 pending requests. * Send items to storage in batches of 3\nHere are some mocks for our ingress and egress logic\n\nclass InputQueue:\n    def __init__(self,items):\n        self.items = items\n    async def chunk(self):\n        # imagine that you are listening to a queue\n        # yield each 2 items as a list, pop them from the queue\n        while len(self.items) &gt;= 2:\n            await asyncio.sleep(0.1)\n            yield [self.items.pop(0),self.items.pop(0)]\n        if len(self.items) == 1:\n            await asyncio.sleep(0.1)\n            yield [self.items.pop(0)]\n\nclass OutputQueue:\n    def __init__(self):\n        self.items = []\n        self.upload_tasks = []  # Store pending upload tasks\n        self.processed_batches = []\n        \n    async def add(self, add_batch):\n        self.items.extend(add_batch)\n        \n        if len(self.items) &gt;= 3:\n            to_upload = [self.items.pop(0), self.items.pop(0), self.items.pop(0)]\n            # Create upload task but don't await it\n            upload_task = asyncio.create_task(self.upload(to_upload))\n            self.upload_tasks.append(upload_task)\n        return\n        \n    async def upload(self, add_batch):\n        # implement your upload logic here\n        await asyncio.sleep(0.1)\n        self.processed_batches.append(add_batch)\n        return True\n        \n    async def wait_for_uploads(self):\n        # Optional: Method to wait for all pending uploads to complete\n        if self.upload_tasks:\n            await asyncio.gather(*self.upload_tasks)\n            self.upload_tasks.clear()\n\nGiven a diagram that iterates over a single item.\n\ninput_queue = InputQueue([1,2,3,4,5,6,7,8,9,10])\noutput_queue = OutputQueue()\n\nwith Define('batch_adding',direction='TB') as D:\n    V('task_list1',Range(2),inputs=['Start(initial_value=a)'])\n    V('add_task',async_add,\n        inputs=['task_list1(a=.)','state/b(b=.)','state/c(c=.)'],\n        for_each=['a'])\n\n    V('sort_task',sorted,inputs=['add_task'])\n    \n    V('End',output_queue.add,inputs=['sort_task'])\n\n\n\n\n\n\n\n\nWe can run it like so:\n\nd= D()\n\nasync for batch in input_queue.chunk():\n    for item in batch:\n        async for trace in d.arun({'a':item},state={'b':0,'c':0}):\n            pass # send traces to log server\n\nawait output_queue.wait_for_uploads()\noutput_queue.processed_batches,output_queue.items\n\n([], [])",
    "crumbs": [
      "Tutorials",
      "Batching"
    ]
  },
  {
    "objectID": "docs/tutorials/best_practices.html",
    "href": "docs/tutorials/best_practices.html",
    "title": "Best Practices",
    "section": "",
    "text": "Here are some best practices for working with diagram.",
    "crumbs": [
      "Tutorials",
      "Best Practices"
    ]
  },
  {
    "objectID": "docs/tutorials/best_practices.html#diagram-factories",
    "href": "docs/tutorials/best_practices.html#diagram-factories",
    "title": "Best Practices",
    "section": "Diagram Factories",
    "text": "Diagram Factories\nWhen you have several sub agent’s that share alot of logic, do not repeat yourself by writing a diagram factory.\nFor example, if we have a different rag agents pointing to different DBs, with different instructions we could write it like so:\n\n# define the factory\ndef rag_factory(db_path,custom_instructions=None,**db_params):\n\n    # parametrize the document retriever\n    document_retriever = DocumentRetriever(db_path,**db_params)\n    \n    # add your custom instructions to a basic prompt\n    prompt = ... \n\n    with Define(f'RAG',type='decision') as D:\n        ... # define the diagram here\n\n    return D\n\n# than we can make different diagrams from the same factory\nRAG1 = rag_factory(db_path=\"...\",custom_instructions=\"...\",**db_params)\nRAG2 = rag_factory(db_path=\"...\",custom_instructions=\"...\",**db_params)\n\n# and use them normally\nr1 = RAG1()\nfor trace in r1.run({'question':'...'}):\n    trace.pprint()\n\nr2 = RAG2()\nfor trace in r2.run({'question':'...'}):\n    trace.pprint()\nYou can see a real example of this in the Interactive QA example.",
    "crumbs": [
      "Tutorials",
      "Best Practices"
    ]
  },
  {
    "objectID": "docs/tutorials/best_practices.html#managing-contexts-for-diagram-nodes",
    "href": "docs/tutorials/best_practices.html#managing-contexts-for-diagram-nodes",
    "title": "Best Practices",
    "section": "Managing contexts for diagram nodes",
    "text": "Managing contexts for diagram nodes\nOften, we have objects that we would like to access through a context manager, ie, accessing a DB’s session.\nFor example, imagine that we have a DB session that is invoked as follows:\nwith db.get_session(auth_keys) as Session:\n    session.execute_query(q)\nOur problem is that we do not want to instantiate the session when defining the diagram, only when running it. Meaning we would like something like:\n\ndef query1(session):\n  session.execute_query('....')\n\nwith Define(...) as D:\n  ...\n  V('q1',query1)\n  ...\n\nd=D()\n\nwith db.get_session(auth_keys) as Session:\n  for trace in d.run(input):\n    # somehow the diagram uses the Session we defined\n    pass\n\nBad solution\nWe could feed the session as input or as State, and rewrite our diagram to get the state\nwith db.get_session(auth_keys) as Session:\n  for trace in d.run(input,state={'Session':Session}):\n    pass\nThis is bad for several reasons: * The session object is not data and will likely not be serializable. * We are complicating our workflow graph for technical reasons.\n\n\nSolution #1 - using factories\n\ndef diagram_factory(Session):\n    with Define('RAG',type='decision') as D:\n        ...\n    return D\n\nwith db.get_session(auth_keys) as Session:\n    d = diagram_factory(Session)\n    for trace in d.run(input):\n        pass\n    \nThis is very straight forward and is a decent solution, though it may not be ideal since it couples defining and running the diagram.",
    "crumbs": [
      "Tutorials",
      "Best Practices"
    ]
  },
  {
    "objectID": "docs/tutorials/best_practices.html#solution-2---create-context-dependant-nodes-with-your-own-context-managers",
    "href": "docs/tutorials/best_practices.html#solution-2---create-context-dependant-nodes-with-your-own-context-managers",
    "title": "Best Practices",
    "section": "Solution #2 - create context dependant nodes with your own context managers",
    "text": "Solution #2 - create context dependant nodes with your own context managers\n\nNote, the following has nothing to do with Ladle, it is simply an ordinary design pattern\n\nWe can create functions that require an active context to run. There are many ways to do this, but one of them is with the singleton pattern. We will show an example using the singleton-decorator library.\nfrom singleton_decorator import singleton\n\n@singleton\nclass DBSession:\n    def __init__(self,auth_keys):\n        self.active_session= None\n\n    def __enter__(self,auth_keys):\n        self.active_session = db.get_session.__enter__(auth_keys)\n        return active_session\n        \n    def __exit__(self):\n        self.active_session.__exit__()\n        self.active_session = None\n\n    # def you can make specific queries here\n    def query_1(self,**params):\n        q = '...'.format(**params)\n        return self.active_session.execute_query(q)\n\n    # or make a factory for \n    def make_query(self,q_string):\n\n        def run_query(**params)\n            q = '...'.format(**params)\n            return self.active_session.execute_query(q)\n        return run_query\nThen you can use this as follows:\n# when defining diagrams:\nwith Define('...') as D:\n    ...\n    V('q1',DBsession().make_query('...'))\n    ...\n\n# when running diagrams:\nd=D()\nwith DBSession()(auth_keys) as Session:\n    # now the query_function will use the same session inside the diagram\n    for trace in d.run(input):\n        trace.pprint()\n        # we can also add sideeffect\n        Session.execute_query('... some metric logging query')",
    "crumbs": [
      "Tutorials",
      "Best Practices"
    ]
  },
  {
    "objectID": "docs/tutorials/nested_diagrams.html",
    "href": "docs/tutorials/nested_diagrams.html",
    "title": "Nested Diagrams",
    "section": "",
    "text": "from ladle.diagrams import (\n    Define,\n    V,\n    E,\n)\nfrom ladle.std import Condition\n\n\ndef add(a,b):\n    return a+b\n\nclass Pow():\n    def __init__(self,power):\n        self.power = power\n    def __call__(self,a):\n        return a**self.power\n    def __str__(self):\n        return f'Pow({self.power})'\n\nis_even = lambda x: x%2==0\n\nTo allow compositionality, a node can take a Diagram Schema object instead of a function. Here is an example:\n\nwith Define('Square or Cube',type='decision',direction='LR') as SquareOrCube:\n    V('square',Pow(2),inputs=[\n        ('Start(a=b)',Condition(is_even,mapping='x=b',name='is_b_even')),\n        ],\n        outputs=['End(square_result=.)'])\n    V('cube',Pow(3),inputs=['Start(a=b)'],outputs=['End(cube_result=.)'])\n\n\n\n\n\n\n\n\n\nwith Define('Several Decisions',type='flow',direction='LR') as SeveralDecisions:\n    V('square_or_cube',SquareOrCube,inputs=['Start(**)'],outputs=['End(square_or_cube_result=.)'])\n    V('cube_or_square',SquareOrCube,inputs=['Start(b=a,a=b)'],outputs=['End(cube_or_square_result=.)'])\n\n\n\n\n\n\n\n\n\nd=SeveralDecisions()\nfor trace in d.run({'a':3,'b':2}):\n    trace.pprint(skip_passthrough=True)\n\nd.output\n\nNode cube_or_square.cube:\n{'input': {'a': 3}, 'output': 27}\n================================================================================\nNode square_or_cube.square:\n{'input': {'a': 2}, 'output': 4}\n================================================================================\nNode cube_or_square:\n{'input': {'a': 2, 'b': 3}, 'output': {'cube_result': 27}}\n================================================================================\nNode square_or_cube:\n{'input': {'a': 3, 'b': 2}, 'output': {'square_result': 4}}\n================================================================================\n\n\n{'cube_or_square_result': {'cube_result': 27},\n 'square_or_cube_result': {'square_result': 4}}\n\n\nNote that traces of subdiagrams are also returned to you when running the main diagram. Their trace are namespaced with the name of the node that the subdiagram resides in.\nAll diagram types can be nested in all diagram types as deep as you want you can even react to breakpoints inside sub diagrams:\n\nclass EqualsTo:\n    def __init__(self,value):\n        self.value = value\n    def __call__(self,x):\n        return x==self.value\n    def __str__(self):\n        return f'EqualsTo({self.value})'\n\ndef fake_work(x):\n    return x\n\nwith Define('Break until 3 - Inner',type='decision',direction='LR') as InnerBreak:\n    V('SomeWork',fake_work,inputs=['Start'],\n    outputs=['breakpoint']\n    )\n    V('breakpoint',is_break=True,outputs=[\n        'SomeWork',\n        ('End',EqualsTo(3)),\n        ])\n\n\nwith Define('Break until 10 - Outer',type='decision',direction='LR') as OuterBreak:\n    V('SomeWork',InnerBreak,inputs=['Start'],\n        outputs=['breakpoint']\n    )\n    V('breakpoint',is_break=True,outputs=[\n        'SomeWork',\n        ('End',EqualsTo(10)),\n        ])\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nd = OuterBreak()\n\ninputs = [\n    0, # will stay in subdiagram until 3\n    1,\n    2, \n    3, # will exit subdiagram\n    5, # enter subdiagram again\n    10, # stay in subdiagram since its waiting for 3\n    3, # will exit subdiagram\n    10, # will exit diagram\n    100 # will not be touched\n]\n\n\nwhile True:\n    input = inputs.pop(0)\n    for trace in d.run(input):\n        # trace.pprint()\n        pass\n    if d.finished:\n        break\ninputs,d.output\n\n([100], 10)\n\n\nThere is only one caveat:\n\nDecision diagrams with breakpoints, cant be nested inside flow diagrams.\n\n\nimport pytest\nwith pytest.raises(ValueError) as exeinfo:\n    with Define('Undefined Behavior',direction='LR') as Schema:\n        V('sub1',InnerBreak,inputs=['Start'],outputs=['End(res1=.)'])\n        V('sub2',InnerBreak,inputs=['Start'],outputs=['End(res2=.)'])\nexeinfo",
    "crumbs": [
      "Tutorials",
      "Nested Diagrams"
    ]
  },
  {
    "objectID": "docs/tutorials/customizing_state.html",
    "href": "docs/tutorials/customizing_state.html",
    "title": "Custom State",
    "section": "",
    "text": "Up until now, we have seen simple reading and writing to state variables, like so:\ndef add(a,b):\n    return a+b\n\nclass Pow():\n    def __init__(self,power):\n        self.power = power\n    def __call__(self,a):\n        return a**self.power\n    def __str__(self):\n        return f'Pow({self.power})'\n\ndef is_b_even(obj):\n    return obj['b']%2==0\nfrom ladle.diagrams import (\n    Define,\n    V,\n    E,\n)\nwith Define('Remember Input',type='decision',direction='LR') as D:\n    V('square',Pow(2),inputs=[\n        ('Start(a=b)',is_b_even),\n        ],\n        outputs=['End(square_result=.)'])\n    V('cube',Pow(3),inputs=['Start(a=b)'],outputs=['End(cube_result=.)'])\n\n    E('Start-&gt;State/init_a(0=a)')\n    V('End',inputs=['State/init_a(init_a=.)'])\n    V('End',inputs=['State/remember(remember=.)'])\nd=D()\nfor trace in d.run({'a':1,'b':2},state={'remember':100}):\n    trace.pprint(skip_passthrough=True)\nd.output\n\nNode square:\n{'input': {'a': 2}, 'output': 4}\n================================================================================\n\n\n{'square_result': 4, 'init_a': 1, 'remember': 100}\nHowever, sometimes we would like to read and write state in a more customized way, for example:\nNaively, this requires as to complicate our diagrams with additional nodes and helper functions that obscure the business logic of our diagram.\nTo remedy this, Ladle allows passing custom state objects to be used.\nFirst, let us understand what is going on under the hood: * Ladle can accept as State any Pydantic Model. * By default, we supply every Ladle diagram with BaseModelExtra which we will see bellow. * If we want to be able to serialize the diagram state, we need to make sure our Model is json serializable.\nfrom ladle.diagrams import BaseModelExtra\nimport inspect\nAs you can see, BaseModelExtra is a pydantic model that allows setting and getting arbitraty attributes.\nprint(inspect.getsource(BaseModelExtra))\n\nclass BaseModelExtra(BaseModel):\n    model_config = ConfigDict(extra='allow')\nWhen we are calling run with the state argument, we can supply and object that can be initialized as our state object.\nIf we are calling run on a diagram that has stopped during a breakpoint, we can supply any object that can be merged with the existing state and then instantiated as our state class.\nLet us see several examples of custom states:",
    "crumbs": [
      "Tutorials",
      "Customizing State"
    ]
  },
  {
    "objectID": "docs/tutorials/customizing_state.html#tldr",
    "href": "docs/tutorials/customizing_state.html#tldr",
    "title": "Custom State",
    "section": "TLDR",
    "text": "TLDR\n\nfrom pydantic import BaseModel, ConfigDict, computed_field\nfrom typing import Annotated\n\n\n# a custom state is any basemodel\nclass CustomState(BaseModel):\n    # we can allow arbitrary attributes by setting extra='allow'\n    # this is useful for defining on the fly state keys with normal behavior\n    model_config = ConfigDict(extra='allow')\n\n    # we can define normal attributes that will be part of the serialized state\n    history:list[int] = list()\n    \n    # we can define private attributes that will not be part of the serialized state\n    # to be used internally by other methods\n    _hidden_attribute:str = 'hidden'\n\n    # we can define computed fields that will be computed on access\n    # these can be read, but not written to\n    @computed_field\n    def last_message(self)-&gt;int:\n        if len(self.history) == 0:\n            return 0\n        return self.history[-1]\n\n    # if we want to use the default getter for an object, but use a custom setter\n    # we can annotate the attribute with the setter function\n    annoated_list: Annotated[list[int],list.append] = list()\n\n    # we can write custom getter methods that only take self, that will be called when reading from\n    # state/first_message\n    def first_message(self)-&gt;int:\n        if len(self.history) == 0:\n            return 0\n        return self.history[0]\n\n    # we can write custom setter methods that only take self, and the value to set\n    # and will be called when writing to state/add_message\n    def add_message(self,value):\n        self.history.append(value)\n\n    # we can also define pythonic properties via the @property decorator\n    @property\n    def hidden(self):\n        return self._hidden_attribute\n    @hidden.setter\n    def hidden(self,value):\n        self._hidden_attribute = value",
    "crumbs": [
      "Tutorials",
      "Customizing State"
    ]
  },
  {
    "objectID": "docs/tutorials/customizing_state.html#saving-history-of-a-node-to-a-list",
    "href": "docs/tutorials/customizing_state.html#saving-history-of-a-node-to-a-list",
    "title": "Custom State",
    "section": "Saving history of a node to a list",
    "text": "Saving history of a node to a list\n\ndef add_1(a:int)-&gt;int:\n    return a+1\n\ndef is_mod_3(a:int)-&gt;bool:\n    return a%3==0\n\n\nclass CustomState(BaseModel):\n    # note that without the extra='allow' we would not be able to set any other state attributes\n    history:list[int] = list()\n\n    def append_to_history(self,value:int):\n        self.history.append(value)\n    \n    def last_item(self)-&gt;int:\n        return self.history[-1]\n    \nwith Define('remember_history',type='decision',direction='LR',state=CustomState) as D:\n    V('add_1',add_1,\n        inputs=['Start(a=.)'],\n        outputs=[\n            'State/append_to_history',\n            ('End',is_mod_3),\n            'add_1'\n            ])\n    V('End',inputs=[\n        'State/last_item(last_item=.)',\n        'State/history(history=.)'\n        ])\n\n\n\n\n\n\n\n\n\nd = D()\nfor trace in d.run(0):\n    trace.pprint(skip_passthrough=True)\nd.output\n\nNode add_1:\n{'input': {'a': 0}, 'output': 1}\n================================================================================\nNode add_1:\n{'input': {0: 1}, 'output': 2}\n================================================================================\nNode add_1:\n{'input': {0: 2}, 'output': 3}\n================================================================================\n\n\n{0: 3, 'last_item': 3, 'history': [1, 2, 3]}",
    "crumbs": [
      "Tutorials",
      "Customizing State"
    ]
  },
  {
    "objectID": "docs/tutorials/customizing_state.html#saving-history-to-list-with-annotation",
    "href": "docs/tutorials/customizing_state.html#saving-history-to-list-with-annotation",
    "title": "Custom State",
    "section": "Saving history to list with Annotation",
    "text": "Saving history to list with Annotation\nSince appending to a list is so simple, we can use the setter annotation to avoid implementing append_to_history\n\nclass CustomState(BaseModel):\n    # note that without the extra='allow' we would not be able to set any other state attributes\n    history:Annotated[list[int],list.append] = list()\n    \n    def last_item(self)-&gt;int:\n        return self.history[-1]\n    \nwith Define('remember_history',type='decision',direction='LR',state=CustomState) as D:\n    V('add_1',add_1,\n        inputs=['Start(a=.)'],\n        outputs=[\n            'State/history',\n            ('End',is_mod_3),\n            'add_1'\n            ])\n    V('End',inputs=[\n        'State/last_item(last_item=.)',\n        'State/history(history=.)'\n        ])\n\nd = D()\nfor trace in d.run(0):\n    trace.pprint(skip_passthrough=True)\nd.output\n\n\n\n\n\n\n\n\nNode add_1:\n{'input': {'a': 0}, 'output': 1}\n================================================================================\nNode add_1:\n{'input': {0: 1}, 'output': 2}\n================================================================================\nNode add_1:\n{'input': {0: 2}, 'output': 3}\n================================================================================\n\n\n{0: 3, 'last_item': 3, 'history': [1, 2, 3]}",
    "crumbs": [
      "Tutorials",
      "Customizing State"
    ]
  },
  {
    "objectID": "docs/tutorials/customizing_state.html#doing-a-queue-of-tasks",
    "href": "docs/tutorials/customizing_state.html#doing-a-queue-of-tasks",
    "title": "Custom State",
    "section": "Doing a queue of tasks",
    "text": "Doing a queue of tasks\n\nfrom ladle.std import Condition\n\n\nclass CustomState(BaseModel):\n\n    queue: list = list()\n\n    def enqueue(self,value):\n        self.queue.append(value)\n\n    def pop(self):\n        return self.queue.pop(0)\n\n    def len(self):\n        return len(self.queue)\n    \ndef do_A_task(task):\n    return f'A{task['result']}'\n\ndef do_default_task(task):\n    return f'Default{task['result']}'\n\nempty = lambda x: x == 0\n\n\nwith Define('Action Queue',type='decision',direction='TB',state=CustomState) as D:\n    V('Start',outputs=[\n        'State/queue',\n        'tasks_left(_)'\n        ])\n    \n    V('tasks_left',\n        inputs=['State/len'],\n        outputs=[\n            ('End',empty),\n            'do_next_task(_)'\n        ]\n        )\n    V('do_next_task',\n        inputs=['State/pop'],\n        outputs=[\n            ('do_A_task',Condition('A','(0=type)')),\n            'do_default_task',\n        ])\n\n    V('do_A_task',do_A_task,outputs=['tasks_left(_)'])\n    V('do_default_task',do_default_task,outputs=['tasks_left(_)'])\n\n\n\n\n\n\n\n\n\nd = D()\n\ntasks = [\n    {'type':'A','result':1},\n    {'type':'B','result':2},\n    {'type':'A','result':3},\n    {'type':'C','result':4},\n]\nfor trace in d.run(tasks):\n    trace.pprint(skip_passthrough=True)\nd.output\n\nNode do_A_task:\n{'input': {0: {'result': 1, 'type': 'A'}}, 'output': 'A1'}\n================================================================================\nNode do_default_task:\n{'input': {0: {'result': 2, 'type': 'B'}}, 'output': 'Default2'}\n================================================================================\nNode do_A_task:\n{'input': {0: {'result': 3, 'type': 'A'}}, 'output': 'A3'}\n================================================================================\nNode do_default_task:\n{'input': {0: {'result': 4, 'type': 'C'}}, 'output': 'Default4'}\n================================================================================\n\n\n0",
    "crumbs": [
      "Tutorials",
      "Customizing State"
    ]
  },
  {
    "objectID": "docs/tutorials/getting_started.html",
    "href": "docs/tutorials/getting_started.html",
    "title": "Getting Started",
    "section": "",
    "text": "Working with ladle Involves two steps:\nLets look at an example step by step.\nLet us first define some helper functions and function objects:\ndef add(a,b):\n    return a+b\n\nclass Pow():\n    def __init__(self,power):\n        self.power = power\n    def __call__(self,a):\n        return a**self.power\n    def __str__(self):\n        return f'Pow({self.power})'\nAnd export our basic building blocks\nfrom ladle.diagrams import (\n    Define,\n    V,\n    E,\n)",
    "crumbs": [
      "Tutorials",
      "Getting Started"
    ]
  },
  {
    "objectID": "docs/tutorials/getting_started.html#defining-diagrams",
    "href": "docs/tutorials/getting_started.html#defining-diagrams",
    "title": "Getting Started",
    "section": "Defining Diagrams",
    "text": "Defining Diagrams\nWe define a diagram as follows:\n\nwith Define('hello world',direction='LR') as Schema:\n    # each node has a name and an optional function\n    V('Start')\n    V('add',add)\n    V('square',Pow(2))\n    # nodes that have no function are called \"pass through\" nodes\n    # they simply collect outputs passed to them into a dict\n    V('End')\n\n    # we can define edges using the E function\n    # edges are defined via a 'source-&gt;target(port_mapping)' syntax\n    E('Start-&gt;square(a=b)')\n    # you can learn more about port mapping in the port mapping section\n    E('Start-&gt;add(**=.)')\n    E('add-&gt;End(add_result=.)')\n    E('square-&gt;End(square_result=.)')\n\n# by default, the diagram is drawn once we finisehd defining it\n\n\n\n\n\n\n\n\nAlternatively, we can define incoming and outgoing edges within the node definition\n\nwith Define('hello world',direction='LR') as Schema:\n    # Start and End are created automatically as pass through nodes if not defined otherwise\n\n    V('add',add,inputs=['Start(**=.)'],outputs=['End(add_result=.)'])\n    V('square',Pow(2),inputs=['Start(a=b)'],outputs=['End(square_result=.)'])\n\n\n\n\n\n\n\n\nOr\n\nwith Define('hello world',direction='LR') as Schema:\n    V('Start',outputs=['add(**=.)','square(a=b)'])\n    V('End',inputs=['add(add_result=.)','square(square_result=.)'])\n    V('add',add)\n    V('square',Pow(2))\n\n\n\n\n\n\n\n\nWe now have a DiagramSchema object\n\nSchema\n\n&lt;ladle.diagrams.DiagramSchema&gt;\n\n\nWhich we can use to instantiate a new diagram.\n\nd = Schema()\nd\n\n&lt;ladle.diagrams.Diagram&gt;",
    "crumbs": [
      "Tutorials",
      "Getting Started"
    ]
  },
  {
    "objectID": "docs/tutorials/getting_started.html#running-diagrams",
    "href": "docs/tutorials/getting_started.html#running-diagrams",
    "title": "Getting Started",
    "section": "Running Diagrams",
    "text": "Running Diagrams\nWe can run diagrams end-to-end like so:\n\nd.run_all({'a':1,'b':2})\n\n{'square_result': 4, 'add_result': 3}\n\n\nbut in most cases, we would like to monitor the traces of each nodes, which is why we usually run it like so:\n\nd=Schema()\nfor trace in d.run({'a':1,'b':2}):\n    # put here any side affect you want\n    trace.pprint()\n\nNode Start:\n{'input': {'a': 1, 'b': 2}, 'output': {'a': 1, 'b': 2}}\n================================================================================\nNode square:\n{'input': {'a': 2}, 'output': 4}\n================================================================================\nNode add:\n{'input': {'a': 1, 'b': 2}, 'output': 3}\n================================================================================\nNode End:\n{ 'input': {'add_result': 3, 'square_result': 4},\n  'output': {'add_result': 3, 'square_result': 4}}\n================================================================================\n\n\nAccessing the output via the output attribute of our diagram\n\nd.output\n\n{'square_result': 4, 'add_result': 3}\n\n\nLadle works with transparently with both sync and async functions. For example:\n\nimport time\nimport timeit\nimport asyncio\n\n\nasync def async_add(a,b):\n    await asyncio.sleep(0.1)\n    return a+b\n\nclass AsyncPow():\n    def __init__(self,power):\n        self.power = power\n    async def __call__(self,a):\n        await asyncio.sleep(0.1)\n        return a**self.power\n    def __str__(self):\n        return f'AsyncPow({self.power})'\n\nCan be used exactly the same as the sync versions:\n\nwith Define('hello world',direction='LR') as Schema:\n    V('add',async_add,inputs=['Start(**=.)'],outputs=['End(add_result=.)'])\n    V('square',AsyncPow(2),inputs=['Start(a=b)'],outputs=['End(square_result=.)'])\n\n\n\n\n\n\n\n\n\nd=Schema()\nstart_time = timeit.default_timer()\nfor trace in d.run({'a':1,'b':2}):\n    trace.pprint()\nend_time = timeit.default_timer()\n\nNode Start:\n{'input': {'a': 1, 'b': 2}, 'output': {'a': 1, 'b': 2}}\n================================================================================\nNode square:\n{'input': {'a': 2}, 'output': 4}\n================================================================================\nNode add:\n{'input': {'a': 1, 'b': 2}, 'output': 3}\n================================================================================\nNode End:\n{ 'input': {'add_result': 3, 'square_result': 4},\n  'output': {'add_result': 3, 'square_result': 4}}\n================================================================================\n\n\nNote that these functions were run asynchronously\n\nprint(f'Time taken: {end_time-start_time:.2f} seconds')\n\nTime taken: 0.10 seconds\n\n\nIf we want some asynchronous side effects, like logging our traces to our server, for example with this mock class:\n\nclass Logserver():\n    def __init__(self):\n        self.logs=[]\n    async def log(self,trace):\n        self.logs.append(trace)\n        # time.sleep(0.5)\n        await asyncio.sleep(0.1)\n        return trace.pretty_name()\n\nWe can use the asynchronous arun method.\n\nlogserver = Logserver()\nlogs = []\n\nstart_time = timeit.default_timer()\n\nasync for trace in d.arun({'a':1,'b':2}):\n    log_task = logserver.log(trace)\n    logs.append(log_task)\n\nres = await asyncio.gather(*logs)\n\nend_time = timeit.default_timer()\nres\n\n['Start', 'square', 'add', 'End']\n\n\n\nprint(f'Time taken: {end_time-start_time:.2f} seconds')\n\nTime taken: 0.28 seconds",
    "crumbs": [
      "Tutorials",
      "Getting Started"
    ]
  },
  {
    "objectID": "docs/tutorials/getting_started.html#drawing-diagrams",
    "href": "docs/tutorials/getting_started.html#drawing-diagrams",
    "title": "Getting Started",
    "section": "Drawing Diagrams",
    "text": "Drawing Diagrams\nWe can also draw diagrams directly:\n\nfrom ladle.diagrams import draw_diagram\n\n\ndraw_diagram(Schema,direction='TB')",
    "crumbs": [
      "Tutorials",
      "Getting Started"
    ]
  },
  {
    "objectID": "docs/reference/diagrams_reference.html",
    "href": "docs/reference/diagrams_reference.html",
    "title": "Diagrams",
    "section": "",
    "text": "## Define\n\nsource\n\n\nSignature: Define(diagram_name, type: str = 'flow', state: pydantic.main.BaseModel = &lt;class 'ladle.diagrams.BaseModelExtra'&gt;, draw: bool = True, draw_raw: bool = False, validate: bool = True, direction: str = 'TB')\n\nDefine a new diagram using a context manager.\n\n\n\n\n\n\n\n\n\nParameter\nType\nDefault\nDescription\n\n\n\n\ndiagram_name\nNone\nNone\nName for the new diagram\n\n\ntype\n&lt;class ‘str’&gt;\nflow\nThe type of diagram to create. Defaults to ‘flow’\n\n\nstate\n&lt;class ‘pydantic.main.BaseModel’&gt;\n&lt;class ‘ladle.diagrams.BaseModelExtra’&gt;\nThe state class to use for the diagram. Defaults to BaseModelExtra\n\n\nsolve_name_conflicts\nNone\nNone\nIf True, append numbers to duplicate names. If False, raise error. Defaults to False\n\n\ndraw\n&lt;class ‘bool’&gt;\nTrue\nIf True, draws the diagram after definition. Defaults to True\n\n\ndraw_raw\n&lt;class ‘bool’&gt;\nFalse\nIf True, draws the raw graph after definition. Defaults to False\n\n\nvalidate\n&lt;class ‘bool’&gt;\nTrue\nIf True, validates diagram structure after definition. Defaults to True\n\n\ndirection\n&lt;class ‘str’&gt;\nTB\nthe direction to draw the diagram in, either TB or LR. Defaults to TB\n\n\n:Returns:\nNone\n-\nThe created diagram object\n\n\n\n## V\n\nsource\n\n\nSignature: V(name: str, func: Callable = None, inputs: Any = None, outputs=None, is_break: bool = False, for_each: Optional[List[str]] = None, filter: bool = False, flat: bool = False, as_start: bool = False, as_end: bool = False) -&gt; None\n\nAdd a vertex (node) to the current diagram.\n\n\n\n\n\n\n\n\n\nParameter\nType\nDefault\nDescription\n\n\n\n\nname\n&lt;class ‘str’&gt;\nNone\nName of the node\n\n\nfunc\ntyping.Callable\nNone\nFunction to execute at this node. If None, node acts as a passthrough\n\n\ninputs\ntyping.Any\nNone\nList of input edge descriptors. Each descriptor can be either:- A string in format “source_node.source_port-&gt;target_port” - A tuple (edge_descriptor, condition_func) for conditional edges\n\n\noutputs\nList[str]\nNone\nList of output edge descriptors. Each descriptor can be either:- A string in format “source_port-&gt;target_node.target_port”- A tuple (edge_descriptor, condition_func) for conditional edges\n\n\nis_break\n&lt;class ‘bool’&gt;\nFalse\nIf True, execution will pause at this node. Not allowed in flow scopes\n\n\nfor_each\ntyping.Optional[typing.List[str]]\nNone\nList of input keys to iterate over. Used for batching operations in Flow diagrams.If provided, the node will be executed once for each product of items in the input list.This for each keys must get iteratbles from the input edges.\n\n\nfilter\n&lt;class ‘bool’&gt;\nFalse\nUsed for batching operations in Flow diagrams. If True, falsy node outputs will be filtered out. Cannot be used with flat=True\n\n\nflat\n&lt;class ‘bool’&gt;\nFalse\nUsed for batching operations in Flow diagrams.If True, node output lists will be flattened into a single list.Cannot be used with filter=True\n\n\nas_start\n&lt;class ‘bool’&gt;\nFalse\nIf True, marks this node as the diagram’s start node\n\n\nas_end\n&lt;class ‘bool’&gt;\nFalse\nIf True, marks this node as the diagram’s end node\n\n\n:Returns:\nNone\n-\nName of the created node\n\n\n\n## E\n\nsource\n\n\nSignature: E(edge_string: str, cond: Callable = None, type: str = None) -&gt; None\n\nAdd an edge to the current diagram\n\n\n\n\n\n\n\n\n\nParameter\nType\nDefault\nDescription\n\n\n\n\nedge_string\n&lt;class ‘str’&gt;\nNone\nThe edge descriptor string\n\n\ncond\ntyping.Callable\nNone\nThe condition of the edge\n\n\ntype\n&lt;class ‘str’&gt;\nNone\nThe type of the edge, either ‘flow’ or ‘decision’, by default, the type is determined by the current scope\n\n\n:Returns:\nNone\n-\n\n\n\n\n## Scope\n\nsource\n\n\nSignature: Scope(scope: str)\n\nContext manager for defining a flow/decision scope in a diagram of a different type\n\n\n\n\n\n\n\n\n\nParameter\nType\nDefault\nDescription\n\n\n\n\nscope\n&lt;class ‘str’&gt;\nNone\nThe scope type to start. Can be either a string (‘flow’ or ‘decision’).\n\n\n\n\n\n## draw_diagram\n\nsource\n\n\nSignature: draw_diagram(diagram, name=None, return_dot=False, direction='TB', recursive: Union[bool, List[str]] = False, factored=False, **kwargs)\n\nDraw a diagram using graphviz. kwargs are sent to wrap to constrain node and edge labels\n\n\n\n\n\n\n\n\n\nParameter\nType\nDefault\nDescription\n\n\n\n\ndiagram\nNone\nNone\nEither a diagram object or a diagram scheme object\n\n\nname\nNone\nNone\nIf provided, uses this name for the diagram in the Mermaid title\n\n\nreturn_dot\nNone\nFalse\nIf True, returns the graphviz dot object\n\n\ndirection\nNone\nTB\ndirection to draw, either TB (top to bottom) or LR (left to right), defaults to TB\n\n\nrecursive\ntyping.Union[bool, typing.List[str]]\nFalse\nWhether to draw subdiagrams as well. If False, only the top level diagram is drawn.If True, all subdiagrams are drawn.If a list of strings, only the subdiagrams with whose names the regex strings are drawn.\n\n\nfactored\nNone\nFalse\nIf True, draws the factored graph, used for debugging\n\n\n:Returns:\nNone\n-\nIf return_dot is True, returns dot objectsOtherwise displays diagram when in an Ipython environment",
    "crumbs": [
      "Reference",
      "Diagrams"
    ]
  },
  {
    "objectID": "docs/reference/diagrams_reference.html#defining-diagrams",
    "href": "docs/reference/diagrams_reference.html#defining-diagrams",
    "title": "Diagrams",
    "section": "",
    "text": "## Define\n\nsource\n\n\nSignature: Define(diagram_name, type: str = 'flow', state: pydantic.main.BaseModel = &lt;class 'ladle.diagrams.BaseModelExtra'&gt;, draw: bool = True, draw_raw: bool = False, validate: bool = True, direction: str = 'TB')\n\nDefine a new diagram using a context manager.\n\n\n\n\n\n\n\n\n\nParameter\nType\nDefault\nDescription\n\n\n\n\ndiagram_name\nNone\nNone\nName for the new diagram\n\n\ntype\n&lt;class ‘str’&gt;\nflow\nThe type of diagram to create. Defaults to ‘flow’\n\n\nstate\n&lt;class ‘pydantic.main.BaseModel’&gt;\n&lt;class ‘ladle.diagrams.BaseModelExtra’&gt;\nThe state class to use for the diagram. Defaults to BaseModelExtra\n\n\nsolve_name_conflicts\nNone\nNone\nIf True, append numbers to duplicate names. If False, raise error. Defaults to False\n\n\ndraw\n&lt;class ‘bool’&gt;\nTrue\nIf True, draws the diagram after definition. Defaults to True\n\n\ndraw_raw\n&lt;class ‘bool’&gt;\nFalse\nIf True, draws the raw graph after definition. Defaults to False\n\n\nvalidate\n&lt;class ‘bool’&gt;\nTrue\nIf True, validates diagram structure after definition. Defaults to True\n\n\ndirection\n&lt;class ‘str’&gt;\nTB\nthe direction to draw the diagram in, either TB or LR. Defaults to TB\n\n\n:Returns:\nNone\n-\nThe created diagram object\n\n\n\n## V\n\nsource\n\n\nSignature: V(name: str, func: Callable = None, inputs: Any = None, outputs=None, is_break: bool = False, for_each: Optional[List[str]] = None, filter: bool = False, flat: bool = False, as_start: bool = False, as_end: bool = False) -&gt; None\n\nAdd a vertex (node) to the current diagram.\n\n\n\n\n\n\n\n\n\nParameter\nType\nDefault\nDescription\n\n\n\n\nname\n&lt;class ‘str’&gt;\nNone\nName of the node\n\n\nfunc\ntyping.Callable\nNone\nFunction to execute at this node. If None, node acts as a passthrough\n\n\ninputs\ntyping.Any\nNone\nList of input edge descriptors. Each descriptor can be either:- A string in format “source_node.source_port-&gt;target_port” - A tuple (edge_descriptor, condition_func) for conditional edges\n\n\noutputs\nList[str]\nNone\nList of output edge descriptors. Each descriptor can be either:- A string in format “source_port-&gt;target_node.target_port”- A tuple (edge_descriptor, condition_func) for conditional edges\n\n\nis_break\n&lt;class ‘bool’&gt;\nFalse\nIf True, execution will pause at this node. Not allowed in flow scopes\n\n\nfor_each\ntyping.Optional[typing.List[str]]\nNone\nList of input keys to iterate over. Used for batching operations in Flow diagrams.If provided, the node will be executed once for each product of items in the input list.This for each keys must get iteratbles from the input edges.\n\n\nfilter\n&lt;class ‘bool’&gt;\nFalse\nUsed for batching operations in Flow diagrams. If True, falsy node outputs will be filtered out. Cannot be used with flat=True\n\n\nflat\n&lt;class ‘bool’&gt;\nFalse\nUsed for batching operations in Flow diagrams.If True, node output lists will be flattened into a single list.Cannot be used with filter=True\n\n\nas_start\n&lt;class ‘bool’&gt;\nFalse\nIf True, marks this node as the diagram’s start node\n\n\nas_end\n&lt;class ‘bool’&gt;\nFalse\nIf True, marks this node as the diagram’s end node\n\n\n:Returns:\nNone\n-\nName of the created node\n\n\n\n## E\n\nsource\n\n\nSignature: E(edge_string: str, cond: Callable = None, type: str = None) -&gt; None\n\nAdd an edge to the current diagram\n\n\n\n\n\n\n\n\n\nParameter\nType\nDefault\nDescription\n\n\n\n\nedge_string\n&lt;class ‘str’&gt;\nNone\nThe edge descriptor string\n\n\ncond\ntyping.Callable\nNone\nThe condition of the edge\n\n\ntype\n&lt;class ‘str’&gt;\nNone\nThe type of the edge, either ‘flow’ or ‘decision’, by default, the type is determined by the current scope\n\n\n:Returns:\nNone\n-\n\n\n\n\n## Scope\n\nsource\n\n\nSignature: Scope(scope: str)\n\nContext manager for defining a flow/decision scope in a diagram of a different type\n\n\n\n\n\n\n\n\n\nParameter\nType\nDefault\nDescription\n\n\n\n\nscope\n&lt;class ‘str’&gt;\nNone\nThe scope type to start. Can be either a string (‘flow’ or ‘decision’).\n\n\n\n\n\n## draw_diagram\n\nsource\n\n\nSignature: draw_diagram(diagram, name=None, return_dot=False, direction='TB', recursive: Union[bool, List[str]] = False, factored=False, **kwargs)\n\nDraw a diagram using graphviz. kwargs are sent to wrap to constrain node and edge labels\n\n\n\n\n\n\n\n\n\nParameter\nType\nDefault\nDescription\n\n\n\n\ndiagram\nNone\nNone\nEither a diagram object or a diagram scheme object\n\n\nname\nNone\nNone\nIf provided, uses this name for the diagram in the Mermaid title\n\n\nreturn_dot\nNone\nFalse\nIf True, returns the graphviz dot object\n\n\ndirection\nNone\nTB\ndirection to draw, either TB (top to bottom) or LR (left to right), defaults to TB\n\n\nrecursive\ntyping.Union[bool, typing.List[str]]\nFalse\nWhether to draw subdiagrams as well. If False, only the top level diagram is drawn.If True, all subdiagrams are drawn.If a list of strings, only the subdiagrams with whose names the regex strings are drawn.\n\n\nfactored\nNone\nFalse\nIf True, draws the factored graph, used for debugging\n\n\n:Returns:\nNone\n-\nIf return_dot is True, returns dot objectsOtherwise displays diagram when in an Ipython environment",
    "crumbs": [
      "Reference",
      "Diagrams"
    ]
  },
  {
    "objectID": "docs/reference/diagrams_reference.html#running-diagrams",
    "href": "docs/reference/diagrams_reference.html#running-diagrams",
    "title": "Diagrams",
    "section": "Running diagrams",
    "text": "Running diagrams\n## Diagram\n\nsource\n\n\nSignature: Diagram(**kwargs)\n\nAn instance of a ladle diagram. Instantiated by calling the Schema()\nHas the following public attributes: output - the output of the last run finished - whether the diagram has reached the End node state - the current state of the diagram\n\n\n\nParameter\nType\nDefault\nDescription\n\n\n\n\n\n\nget_node_func\nGet the function associated with a node in the diagram.\n\nSignature: Diagram.get_node_func(self: ladle.diagrams.Diagram, node)\n\n\n\n\nParameter\nType\nDefault\nDescription\n\n\n\n\nnode\nNone\nNone\nThe node identifier to get the function for\n\n\n\n\n\nrun_all\nRun the diagram to completion and return the final output.\n\nSignature: Diagram.run_all(self: ladle.diagrams.Diagram, input: Any, state: Union[pydantic.main.BaseModel, Dict] = None, progress_bars: bool = True, trace_nested: bool = True)\n\n\n\n\n\n\n\n\n\n\nParameter\nType\nDefault\nDescription\n\n\n\n\ninput\ntyping.Any\nNone\nThe input data to process through the diagram\n\n\nstate\ntyping.Union[pydantic.main.BaseModel, typing.Dict]\nNone\nOptional state to initialize the diagram with\n\n\nprogress_bars\n&lt;class ‘bool’&gt;\nTrue\nWhether to display progress bars during execution (default True). Deprecated.\n\n\ntrace_nested\n&lt;class ‘bool’&gt;\nTrue\nWhether to trace nested diagram execution (default True)\n\n\n\n\n\nrun\nRun the diagram with the given input and state.\n\nSignature: Diagram.run(self: ladle.diagrams.Diagram, input: Any, state: Union[pydantic.main.BaseModel, Dict] = None, progress_bars: bool = True, trace_nested: bool = True)\n\n\n\n\n\n\n\n\n\n\nParameter\nType\nDefault\nDescription\n\n\n\n\ninput\ntyping.Any\nNone\nThe input data to process through the diagram\n\n\nstate\ntyping.Union[pydantic.main.BaseModel, typing.Dict]\nNone\nOptional state to initialize the diagram with\n\n\nprogress_bars\n&lt;class ‘bool’&gt;\nTrue\nWhether to display progress bars during execution (default True). Deprecated.\n\n\ntrace_nested\n&lt;class ‘bool’&gt;\nTrue\nWhether to trace nested diagram execution (default True)\n\n\n\n\n\narun\nAsynchronously run the diagram with the given input and state.\n\nSignature: Diagram.arun(self: ladle.diagrams.Diagram, input: Any, state: Union[pydantic.main.BaseModel, Dict] = None, progress_bars: bool = True, trace_nested: bool = True)\n\n\n\n\n\n\n\n\n\n\nParameter\nType\nDefault\nDescription\n\n\n\n\ninput\ntyping.Any\nNone\nThe input data to process through the diagram\n\n\nstate\ntyping.Union[pydantic.main.BaseModel, typing.Dict]\nNone\nOptional state to initialize the diagram with\n\n\nprogress_bars\n&lt;class ‘bool’&gt;\nTrue\nWhether to display progress bars during execution (default True). Deprecated.\n\n\ntrace_nested\n&lt;class ‘bool’&gt;\nTrue\nWhether to trace nested diagram execution (default True)",
    "crumbs": [
      "Reference",
      "Diagrams"
    ]
  },
  {
    "objectID": "diagram_serialization.html",
    "href": "diagram_serialization.html",
    "title": "Basic Diagram Examples",
    "section": "",
    "text": "def plus(x,y):\n    return x+y\n\n# EXPLAIN start and end are by default\n# with checkLogs(name='__main__'):\nwith Define('multiedge',type='flow') as D:\n\n    V('plus',plus,\n        inputs=[\n        'Start(x=a,y=b)',\n        ],\n        outputs=['End']\n        )\n\n---\ntitle: multiedge\n---\nflowchart LR;\nnode0[\"plus[plus]\"]\nnode1[\"Start\"]\nnode2[\"End\"]\nnode0 --&gt; node2\nnode1 --&gt;|\"a-#gt;x,b-#gt;y\"| node0\n\n\n\ndraw_nx(D.graph)\n\n\nflowchart TB\nplus[\"plus\nfunc=#lt;function plus at 0x1134afec0#gt;, regular_fathers={#quot;Start#quot;}, for_each_fathers=set(), mapping={#quot;Start#quot;: {#quot;x#quot;: (#quot;a#quot;,), #quot;y#quot;: (#quot;b#quot;,)}}\"]\nStart[\"Start\nregular_fathers=set(), for_each_fathers=set(), mapping={}\"]\nEnd[\"End\nregular_fathers={#quot;plus#quot;}, for_each_fathers=set(), mapping={#quot;plus#quot;: {0: (#quot;.#quot;,)}}\"]\nplus --&gt;|\"type=#lt;DiagramType.flow: #quot;flow#quot;#gt;, mapping={0: (#quot;.#quot;,)}\"| End\nStart --&gt;|\"type=#lt;DiagramType.flow: #quot;flow#quot;#gt;, mapping={#quot;x#quot;: (#quot;a#quot;,), #quot;y#quot;: (#quot;b#quot;,)}\"| plus\n\n\n\n\nnode_link_data = json_graph.node_link_data(D.graph,edges='edges')\nnode_link_data\n\n{'directed': True,\n 'multigraph': False,\n 'graph': {},\n 'nodes': [{'func': &lt;function __main__.plus(x, y)&gt;,\n   'regular_fathers': {'Start'},\n   'for_each_fathers': set(),\n   'mapping': {'Start': {'x': ('a',), 'y': ('b',)}},\n   'id': 'plus'},\n  {'regular_fathers': set(),\n   'for_each_fathers': set(),\n   'mapping': {},\n   'id': 'Start'},\n  {'regular_fathers': {'plus'},\n   'for_each_fathers': set(),\n   'mapping': {'plus': {0: ('.',)}},\n   'id': 'End'}],\n 'edges': [{'type': &lt;DiagramType.flow: 'flow'&gt;,\n   'mapping': {0: ('.',)},\n   'source': 'plus',\n   'target': 'End'},\n  {'type': &lt;DiagramType.flow: 'flow'&gt;,\n   'mapping': {'x': ('a',), 'y': ('b',)},\n   'source': 'Start',\n   'target': 'plus'}]}\n\n\n\nsource\n\n\n\n serialize_to_json (obj:Any)\n\n\nsource\n\n\n\n\n Encoder (skipkeys=False, ensure_ascii=True, check_circular=True,\n          allow_nan=True, sort_keys=False, indent=None, separators=None,\n          default=None)\n\n*Extensible JSON https://json.org encoder for Python data structures.\nSupports the following objects and types by default:\n\n\n\n\n\n\n\nPython\nJSON\n\n\n\n\ndict\nobject\n\n\nlist, tuple\narray\n\n\nstr\nstring\n\n\nint, float\nnumber\n\n\nTrue\ntrue\n\n\nFalse\nfalse\n\n\nNone\nnull\n\n\n\nTo extend this to recognize other objects, subclass and implement a .default() method with another method that returns a serializable object for o if possible, otherwise it should call the superclass implementation (to raise TypeError).*\n\nprint(serialize_to_json(node_link_data))\n\n{\n  \"directed\": true,\n  \"multigraph\": false,\n  \"graph\": {},\n  \"nodes\": [\n    {\n      \"func\": \"plus\",\n      \"regular_fathers\": [\n        \"Start\"\n      ],\n      \"for_each_fathers\": [],\n      \"mapping\": {\n        \"Start\": {\n          \"x\": [\n            \"a\"\n          ],\n          \"y\": [\n            \"b\"\n          ]\n        }\n      },\n      \"id\": \"plus\"\n    },\n    {\n      \"regular_fathers\": [],\n      \"for_each_fathers\": [],\n      \"mapping\": {},\n      \"id\": \"Start\"\n    },\n    {\n      \"regular_fathers\": [\n        \"plus\"\n      ],\n      \"for_each_fathers\": [],\n      \"mapping\": {\n        \"plus\": {\n          \"0\": [\n            \".\"\n          ]\n        }\n      },\n      \"id\": \"End\"\n    }\n  ],\n  \"edges\": [\n    {\n      \"type\": \"DiagramType.flow\",\n      \"mapping\": {\n        \"0\": [\n          \".\"\n        ]\n      },\n      \"source\": \"plus\",\n      \"target\": \"End\"\n    },\n    {\n      \"type\": \"DiagramType.flow\",\n      \"mapping\": {\n        \"x\": [\n          \"a\"\n        ],\n        \"y\": [\n          \"b\"\n        ]\n      },\n      \"source\": \"Start\",\n      \"target\": \"plus\"\n    }\n  ]\n}"
  },
  {
    "objectID": "diagram_serialization.html#imports",
    "href": "diagram_serialization.html#imports",
    "title": "Basic Diagram Examples",
    "section": "",
    "text": "def plus(x,y):\n    return x+y\n\n# EXPLAIN start and end are by default\n# with checkLogs(name='__main__'):\nwith Define('multiedge',type='flow') as D:\n\n    V('plus',plus,\n        inputs=[\n        'Start(x=a,y=b)',\n        ],\n        outputs=['End']\n        )\n\n---\ntitle: multiedge\n---\nflowchart LR;\nnode0[\"plus[plus]\"]\nnode1[\"Start\"]\nnode2[\"End\"]\nnode0 --&gt; node2\nnode1 --&gt;|\"a-#gt;x,b-#gt;y\"| node0\n\n\n\ndraw_nx(D.graph)\n\n\nflowchart TB\nplus[\"plus\nfunc=#lt;function plus at 0x1134afec0#gt;, regular_fathers={#quot;Start#quot;}, for_each_fathers=set(), mapping={#quot;Start#quot;: {#quot;x#quot;: (#quot;a#quot;,), #quot;y#quot;: (#quot;b#quot;,)}}\"]\nStart[\"Start\nregular_fathers=set(), for_each_fathers=set(), mapping={}\"]\nEnd[\"End\nregular_fathers={#quot;plus#quot;}, for_each_fathers=set(), mapping={#quot;plus#quot;: {0: (#quot;.#quot;,)}}\"]\nplus --&gt;|\"type=#lt;DiagramType.flow: #quot;flow#quot;#gt;, mapping={0: (#quot;.#quot;,)}\"| End\nStart --&gt;|\"type=#lt;DiagramType.flow: #quot;flow#quot;#gt;, mapping={#quot;x#quot;: (#quot;a#quot;,), #quot;y#quot;: (#quot;b#quot;,)}\"| plus\n\n\n\n\nnode_link_data = json_graph.node_link_data(D.graph,edges='edges')\nnode_link_data\n\n{'directed': True,\n 'multigraph': False,\n 'graph': {},\n 'nodes': [{'func': &lt;function __main__.plus(x, y)&gt;,\n   'regular_fathers': {'Start'},\n   'for_each_fathers': set(),\n   'mapping': {'Start': {'x': ('a',), 'y': ('b',)}},\n   'id': 'plus'},\n  {'regular_fathers': set(),\n   'for_each_fathers': set(),\n   'mapping': {},\n   'id': 'Start'},\n  {'regular_fathers': {'plus'},\n   'for_each_fathers': set(),\n   'mapping': {'plus': {0: ('.',)}},\n   'id': 'End'}],\n 'edges': [{'type': &lt;DiagramType.flow: 'flow'&gt;,\n   'mapping': {0: ('.',)},\n   'source': 'plus',\n   'target': 'End'},\n  {'type': &lt;DiagramType.flow: 'flow'&gt;,\n   'mapping': {'x': ('a',), 'y': ('b',)},\n   'source': 'Start',\n   'target': 'plus'}]}\n\n\n\nsource\n\n\n\n serialize_to_json (obj:Any)\n\n\nsource\n\n\n\n\n Encoder (skipkeys=False, ensure_ascii=True, check_circular=True,\n          allow_nan=True, sort_keys=False, indent=None, separators=None,\n          default=None)\n\n*Extensible JSON https://json.org encoder for Python data structures.\nSupports the following objects and types by default:\n\n\n\n\n\n\n\nPython\nJSON\n\n\n\n\ndict\nobject\n\n\nlist, tuple\narray\n\n\nstr\nstring\n\n\nint, float\nnumber\n\n\nTrue\ntrue\n\n\nFalse\nfalse\n\n\nNone\nnull\n\n\n\nTo extend this to recognize other objects, subclass and implement a .default() method with another method that returns a serializable object for o if possible, otherwise it should call the superclass implementation (to raise TypeError).*\n\nprint(serialize_to_json(node_link_data))\n\n{\n  \"directed\": true,\n  \"multigraph\": false,\n  \"graph\": {},\n  \"nodes\": [\n    {\n      \"func\": \"plus\",\n      \"regular_fathers\": [\n        \"Start\"\n      ],\n      \"for_each_fathers\": [],\n      \"mapping\": {\n        \"Start\": {\n          \"x\": [\n            \"a\"\n          ],\n          \"y\": [\n            \"b\"\n          ]\n        }\n      },\n      \"id\": \"plus\"\n    },\n    {\n      \"regular_fathers\": [],\n      \"for_each_fathers\": [],\n      \"mapping\": {},\n      \"id\": \"Start\"\n    },\n    {\n      \"regular_fathers\": [\n        \"plus\"\n      ],\n      \"for_each_fathers\": [],\n      \"mapping\": {\n        \"plus\": {\n          \"0\": [\n            \".\"\n          ]\n        }\n      },\n      \"id\": \"End\"\n    }\n  ],\n  \"edges\": [\n    {\n      \"type\": \"DiagramType.flow\",\n      \"mapping\": {\n        \"0\": [\n          \".\"\n        ]\n      },\n      \"source\": \"plus\",\n      \"target\": \"End\"\n    },\n    {\n      \"type\": \"DiagramType.flow\",\n      \"mapping\": {\n        \"x\": [\n          \"a\"\n        ],\n        \"y\": [\n          \"b\"\n        ]\n      },\n      \"source\": \"Start\",\n      \"target\": \"plus\"\n    }\n  ]\n}"
  },
  {
    "objectID": "diagram_serialization.html#export",
    "href": "diagram_serialization.html#export",
    "title": "Basic Diagram Examples",
    "section": "Export",
    "text": "Export"
  },
  {
    "objectID": "doc_utils.html",
    "href": "doc_utils.html",
    "title": "Visualization",
    "section": "",
    "text": "from ladle.diagrams import Define,V,DiagramSchema,Diagram\nfrom ladle.std import Condition,JsonRenderer\n\n\nsource\n\n\n\n clean_sig_data (obj)\n\n\nclean_sig_data(V)\n\n{'params': {'name': {'type': str},\n  'func': {'type': typing.Callable, 'default': None},\n  'inputs': {'type': typing.Any, 'default': None},\n  'outputs': {'default': None},\n  'is_break': {'type': bool, 'default': False},\n  'for_each': {'type': typing.Optional[typing.List[str]], 'default': None},\n  'filter': {'type': bool, 'default': False},\n  'flat': {'type': bool, 'default': False},\n  'as_start': {'type': bool, 'default': False},\n  'as_end': {'type': bool, 'default': False}},\n 'signature': '(name: str, func: Callable = None, inputs: Any = None, outputs=None, is_break: bool = False, for_each: Optional[List[str]] = None, filter: bool = False, flat: bool = False, as_start: bool = False, as_end: bool = False) -&gt; None',\n 'returns': {'type': None}}\n\n\n\nclean_sig_data(JsonRenderer)\n\n{'params': {'json_obj': {}, 'kwargs': {}}, 'signature': '(json_obj, **kwargs)'}\n\n\n\nclean_sig_data(JsonRenderer.__call__)\n\n{'params': {'self': {}, 'kwargs': {}}, 'signature': '(self, **kwargs)'}\n\n\n\nsource\n\n\n\n\n clean_doc_data (obj)\n\n\nclean_doc_data(V)\n\n{'description': 'Add a vertex (node) to the current diagram.\\n',\n 'params': {'name': {'name': 'name',\n   'type': 'str',\n   'default': None,\n   'description': 'Name of the node'},\n  'func': {'name': 'func',\n   'type': 'callable',\n   'default': None,\n   'description': 'Function to execute at this node. If None, node acts as a passthrough'},\n  'inputs': {'name': 'inputs',\n   'type': 'List[str]',\n   'default': None,\n   'description': 'List of input edge descriptors. Each descriptor can be either:\\n- A string in format \"source_node.source_port-&gt;target_port\" \\n- A tuple (edge_descriptor, condition_func) for conditional edges'},\n  'outputs': {'name': 'outputs',\n   'type': 'List[str]',\n   'default': None,\n   'description': 'List of output edge descriptors. Each descriptor can be either:\\n- A string in format \"source_port-&gt;target_node.target_port\"\\n- A tuple (edge_descriptor, condition_func) for conditional edges'},\n  'is_break': {'name': 'is_break',\n   'type': 'bool',\n   'default': None,\n   'description': 'If True, execution will pause at this node. Not allowed in flow scopes'},\n  'for_each': {'name': 'for_each',\n   'type': 'List[str|int]',\n   'default': None,\n   'description': 'List of input keys to iterate over. \\nUsed for batching operations in Flow diagrams.\\nIf provided, the node will be executed once for each product of items in the input list.\\nThis for each keys must get iteratbles from the input edges.'},\n  'filter': {'name': 'filter',\n   'type': 'bool',\n   'default': None,\n   'description': 'Used for batching operations in Flow diagrams. \\nIf True, falsy node outputs will be filtered out. \\nCannot be used with flat=True'},\n  'flat': {'name': 'flat',\n   'type': 'bool',\n   'default': None,\n   'description': 'Used for batching operations in Flow diagrams.\\nIf True, node output lists will be flattened into a single list.\\nCannot be used with filter=True'},\n  'as_start': {'name': 'as_start',\n   'type': 'bool',\n   'default': None,\n   'description': \"If True, marks this node as the diagram's start node\"},\n  'as_end': {'name': 'as_end',\n   'type': 'bool',\n   'default': None,\n   'description': \"If True, marks this node as the diagram's end node\"}},\n 'param_order': ['name',\n  'func',\n  'inputs',\n  'outputs',\n  'is_break',\n  'for_each',\n  'filter',\n  'flat',\n  'as_start',\n  'as_end'],\n 'returns': {'type': 'str', 'description': 'Name of the created node'}}\n\n\n\nsource\n\n\n\n\n get_methods (cls, include=None)\n\n\nget_methods(DiagramSchema)\n\n['get_input_only_state_keys', 'get_unique_name', 'new_id', 'post_def']\n\n\n\nsource\n\n\n\n\n get_source_link (obj)\n\n\nfrom ladle.tools import google_search\n\n\nclean_sig_data(google_search.func)\n\n{'params': {'q': {'type': str},\n  'location': {'type': str, 'default': 'Austin, Texas'},\n  'engine': {'type': str, 'default': 'google_scholar'}},\n 'signature': \"(q: str, location: str = 'Austin, Texas', engine: str = 'google_scholar')\"}\n\n\n\nsource\n\n\n\n\n clean_obj_data (obj)\n\n\nsource\n\n\n\n\n escape_dunder (name)\n\n\nclean_obj_data(V)\n\n{'description': 'Add a vertex (node) to the current diagram.\\n',\n 'params': [{'name': 'name',\n   'type': str,\n   'default': None,\n   'description': 'Name of the node'},\n  {'name': 'func',\n   'type': typing.Callable,\n   'default': None,\n   'description': 'Function to execute at this node. If None, node acts as a passthrough'},\n  {'name': 'inputs',\n   'type': typing.Any,\n   'default': None,\n   'description': 'List of input edge descriptors. Each descriptor can be either:\\n- A string in format \"source_node.source_port-&gt;target_port\" \\n- A tuple (edge_descriptor, condition_func) for conditional edges'},\n  {'name': 'outputs',\n   'type': 'List[str]',\n   'default': None,\n   'description': 'List of output edge descriptors. Each descriptor can be either:\\n- A string in format \"source_port-&gt;target_node.target_port\"\\n- A tuple (edge_descriptor, condition_func) for conditional edges'},\n  {'name': 'is_break',\n   'type': bool,\n   'default': False,\n   'description': 'If True, execution will pause at this node. Not allowed in flow scopes'},\n  {'name': 'for_each',\n   'type': typing.Optional[typing.List[str]],\n   'default': None,\n   'description': 'List of input keys to iterate over. \\nUsed for batching operations in Flow diagrams.\\nIf provided, the node will be executed once for each product of items in the input list.\\nThis for each keys must get iteratbles from the input edges.'},\n  {'name': 'filter',\n   'type': bool,\n   'default': False,\n   'description': 'Used for batching operations in Flow diagrams. \\nIf True, falsy node outputs will be filtered out. \\nCannot be used with flat=True'},\n  {'name': 'flat',\n   'type': bool,\n   'default': False,\n   'description': 'Used for batching operations in Flow diagrams.\\nIf True, node output lists will be flattened into a single list.\\nCannot be used with filter=True'},\n  {'name': 'as_start',\n   'type': bool,\n   'default': False,\n   'description': \"If True, marks this node as the diagram's start node\"},\n  {'name': 'as_end',\n   'type': bool,\n   'default': False,\n   'description': \"If True, marks this node as the diagram's end node\"}],\n 'param_order': ['name',\n  'func',\n  'inputs',\n  'outputs',\n  'is_break',\n  'for_each',\n  'filter',\n  'flat',\n  'as_start',\n  'as_end'],\n 'returns': {'type': None, 'description': 'Name of the created node'},\n 'signature': '(name: str, func: Callable = None, inputs: Any = None, outputs=None, is_break: bool = False, for_each: Optional[List[str]] = None, filter: bool = False, flat: bool = False, as_start: bool = False, as_end: bool = False) -&gt; None',\n 'name': 'V',\n 'source': 'https://github.com/DeanLight/ladle/blob/main/ladle/diagrams.py'}\n\n\n\nsource\n\n\n\n\n clean_class (cls, methods=None)\n\n\nclean_class(JsonRenderer,methods=['__call__'])\n\n{'description': 'A class for rendering JSON objects with nested jinja2 templates.\\n\\nAllows setting template variables both during init and when calling the object.',\n 'params': [{'name': 'json_obj',\n   'type': None,\n   'default': None,\n   'description': 'A JSON object to render.'},\n  {'name': '**kwargs',\n   'type': None,\n   'default': None,\n   'description': 'Context variables to use in the rendering.'}],\n 'param_order': ['json_obj', '**kwargs'],\n 'returns': {'type': None, 'description': 'A rendered JSON object.'},\n 'signature': '(json_obj, **kwargs)',\n 'name': 'JsonRenderer',\n 'source': 'https://github.com/DeanLight/ladle/blob/main/ladle/std.py',\n 'methods': [{'description': None,\n   'params': [],\n   'param_order': [],\n   'signature': '(self, **kwargs)',\n   'name': '\\\\_\\\\_call\\\\_\\\\_',\n   'source': 'https://github.com/DeanLight/ladle/blob/main/ladle/std.py'}]}"
  },
  {
    "objectID": "doc_utils.html#get-object-documentation-data",
    "href": "doc_utils.html#get-object-documentation-data",
    "title": "Visualization",
    "section": "",
    "text": "from ladle.diagrams import Define,V,DiagramSchema,Diagram\nfrom ladle.std import Condition,JsonRenderer\n\n\nsource\n\n\n\n clean_sig_data (obj)\n\n\nclean_sig_data(V)\n\n{'params': {'name': {'type': str},\n  'func': {'type': typing.Callable, 'default': None},\n  'inputs': {'type': typing.Any, 'default': None},\n  'outputs': {'default': None},\n  'is_break': {'type': bool, 'default': False},\n  'for_each': {'type': typing.Optional[typing.List[str]], 'default': None},\n  'filter': {'type': bool, 'default': False},\n  'flat': {'type': bool, 'default': False},\n  'as_start': {'type': bool, 'default': False},\n  'as_end': {'type': bool, 'default': False}},\n 'signature': '(name: str, func: Callable = None, inputs: Any = None, outputs=None, is_break: bool = False, for_each: Optional[List[str]] = None, filter: bool = False, flat: bool = False, as_start: bool = False, as_end: bool = False) -&gt; None',\n 'returns': {'type': None}}\n\n\n\nclean_sig_data(JsonRenderer)\n\n{'params': {'json_obj': {}, 'kwargs': {}}, 'signature': '(json_obj, **kwargs)'}\n\n\n\nclean_sig_data(JsonRenderer.__call__)\n\n{'params': {'self': {}, 'kwargs': {}}, 'signature': '(self, **kwargs)'}\n\n\n\nsource\n\n\n\n\n clean_doc_data (obj)\n\n\nclean_doc_data(V)\n\n{'description': 'Add a vertex (node) to the current diagram.\\n',\n 'params': {'name': {'name': 'name',\n   'type': 'str',\n   'default': None,\n   'description': 'Name of the node'},\n  'func': {'name': 'func',\n   'type': 'callable',\n   'default': None,\n   'description': 'Function to execute at this node. If None, node acts as a passthrough'},\n  'inputs': {'name': 'inputs',\n   'type': 'List[str]',\n   'default': None,\n   'description': 'List of input edge descriptors. Each descriptor can be either:\\n- A string in format \"source_node.source_port-&gt;target_port\" \\n- A tuple (edge_descriptor, condition_func) for conditional edges'},\n  'outputs': {'name': 'outputs',\n   'type': 'List[str]',\n   'default': None,\n   'description': 'List of output edge descriptors. Each descriptor can be either:\\n- A string in format \"source_port-&gt;target_node.target_port\"\\n- A tuple (edge_descriptor, condition_func) for conditional edges'},\n  'is_break': {'name': 'is_break',\n   'type': 'bool',\n   'default': None,\n   'description': 'If True, execution will pause at this node. Not allowed in flow scopes'},\n  'for_each': {'name': 'for_each',\n   'type': 'List[str|int]',\n   'default': None,\n   'description': 'List of input keys to iterate over. \\nUsed for batching operations in Flow diagrams.\\nIf provided, the node will be executed once for each product of items in the input list.\\nThis for each keys must get iteratbles from the input edges.'},\n  'filter': {'name': 'filter',\n   'type': 'bool',\n   'default': None,\n   'description': 'Used for batching operations in Flow diagrams. \\nIf True, falsy node outputs will be filtered out. \\nCannot be used with flat=True'},\n  'flat': {'name': 'flat',\n   'type': 'bool',\n   'default': None,\n   'description': 'Used for batching operations in Flow diagrams.\\nIf True, node output lists will be flattened into a single list.\\nCannot be used with filter=True'},\n  'as_start': {'name': 'as_start',\n   'type': 'bool',\n   'default': None,\n   'description': \"If True, marks this node as the diagram's start node\"},\n  'as_end': {'name': 'as_end',\n   'type': 'bool',\n   'default': None,\n   'description': \"If True, marks this node as the diagram's end node\"}},\n 'param_order': ['name',\n  'func',\n  'inputs',\n  'outputs',\n  'is_break',\n  'for_each',\n  'filter',\n  'flat',\n  'as_start',\n  'as_end'],\n 'returns': {'type': 'str', 'description': 'Name of the created node'}}\n\n\n\nsource\n\n\n\n\n get_methods (cls, include=None)\n\n\nget_methods(DiagramSchema)\n\n['get_input_only_state_keys', 'get_unique_name', 'new_id', 'post_def']\n\n\n\nsource\n\n\n\n\n get_source_link (obj)\n\n\nfrom ladle.tools import google_search\n\n\nclean_sig_data(google_search.func)\n\n{'params': {'q': {'type': str},\n  'location': {'type': str, 'default': 'Austin, Texas'},\n  'engine': {'type': str, 'default': 'google_scholar'}},\n 'signature': \"(q: str, location: str = 'Austin, Texas', engine: str = 'google_scholar')\"}\n\n\n\nsource\n\n\n\n\n clean_obj_data (obj)\n\n\nsource\n\n\n\n\n escape_dunder (name)\n\n\nclean_obj_data(V)\n\n{'description': 'Add a vertex (node) to the current diagram.\\n',\n 'params': [{'name': 'name',\n   'type': str,\n   'default': None,\n   'description': 'Name of the node'},\n  {'name': 'func',\n   'type': typing.Callable,\n   'default': None,\n   'description': 'Function to execute at this node. If None, node acts as a passthrough'},\n  {'name': 'inputs',\n   'type': typing.Any,\n   'default': None,\n   'description': 'List of input edge descriptors. Each descriptor can be either:\\n- A string in format \"source_node.source_port-&gt;target_port\" \\n- A tuple (edge_descriptor, condition_func) for conditional edges'},\n  {'name': 'outputs',\n   'type': 'List[str]',\n   'default': None,\n   'description': 'List of output edge descriptors. Each descriptor can be either:\\n- A string in format \"source_port-&gt;target_node.target_port\"\\n- A tuple (edge_descriptor, condition_func) for conditional edges'},\n  {'name': 'is_break',\n   'type': bool,\n   'default': False,\n   'description': 'If True, execution will pause at this node. Not allowed in flow scopes'},\n  {'name': 'for_each',\n   'type': typing.Optional[typing.List[str]],\n   'default': None,\n   'description': 'List of input keys to iterate over. \\nUsed for batching operations in Flow diagrams.\\nIf provided, the node will be executed once for each product of items in the input list.\\nThis for each keys must get iteratbles from the input edges.'},\n  {'name': 'filter',\n   'type': bool,\n   'default': False,\n   'description': 'Used for batching operations in Flow diagrams. \\nIf True, falsy node outputs will be filtered out. \\nCannot be used with flat=True'},\n  {'name': 'flat',\n   'type': bool,\n   'default': False,\n   'description': 'Used for batching operations in Flow diagrams.\\nIf True, node output lists will be flattened into a single list.\\nCannot be used with filter=True'},\n  {'name': 'as_start',\n   'type': bool,\n   'default': False,\n   'description': \"If True, marks this node as the diagram's start node\"},\n  {'name': 'as_end',\n   'type': bool,\n   'default': False,\n   'description': \"If True, marks this node as the diagram's end node\"}],\n 'param_order': ['name',\n  'func',\n  'inputs',\n  'outputs',\n  'is_break',\n  'for_each',\n  'filter',\n  'flat',\n  'as_start',\n  'as_end'],\n 'returns': {'type': None, 'description': 'Name of the created node'},\n 'signature': '(name: str, func: Callable = None, inputs: Any = None, outputs=None, is_break: bool = False, for_each: Optional[List[str]] = None, filter: bool = False, flat: bool = False, as_start: bool = False, as_end: bool = False) -&gt; None',\n 'name': 'V',\n 'source': 'https://github.com/DeanLight/ladle/blob/main/ladle/diagrams.py'}\n\n\n\nsource\n\n\n\n\n clean_class (cls, methods=None)\n\n\nclean_class(JsonRenderer,methods=['__call__'])\n\n{'description': 'A class for rendering JSON objects with nested jinja2 templates.\\n\\nAllows setting template variables both during init and when calling the object.',\n 'params': [{'name': 'json_obj',\n   'type': None,\n   'default': None,\n   'description': 'A JSON object to render.'},\n  {'name': '**kwargs',\n   'type': None,\n   'default': None,\n   'description': 'Context variables to use in the rendering.'}],\n 'param_order': ['json_obj', '**kwargs'],\n 'returns': {'type': None, 'description': 'A rendered JSON object.'},\n 'signature': '(json_obj, **kwargs)',\n 'name': 'JsonRenderer',\n 'source': 'https://github.com/DeanLight/ladle/blob/main/ladle/std.py',\n 'methods': [{'description': None,\n   'params': [],\n   'param_order': [],\n   'signature': '(self, **kwargs)',\n   'name': '\\\\_\\\\_call\\\\_\\\\_',\n   'source': 'https://github.com/DeanLight/ladle/blob/main/ladle/std.py'}]}"
  },
  {
    "objectID": "doc_utils.html#rendering-to-markdown",
    "href": "doc_utils.html#rendering-to-markdown",
    "title": "Visualization",
    "section": "Rendering to markdown",
    "text": "Rendering to markdown\n\nFunctions\n\nfunc_data = clean_obj_data(V)\n# print(jinja_render(function_doc_template,func_data))\n\n\ndisplay(Markdown(jinja_render(function_doc_template,func_data)))\n\n## V\n\nsource\n\n\nSignature: V(name: str, func: Callable = None, inputs: Any = None, outputs=None, is_break: bool = False, for_each: Optional[List[str]] = None, filter: bool = False, flat: bool = False, as_start: bool = False, as_end: bool = False) -&gt; None\n\nAdd a vertex (node) to the current diagram.\n\n\n\n\n\n\n\n\n\nParameter\nType\nDefault\nDescription\n\n\n\n\nname\n&lt;class ‘str’&gt;\nNone\nName of the node\n\n\nfunc\ntyping.Callable\nNone\nFunction to execute at this node. If None, node acts as a passthrough\n\n\ninputs\ntyping.Any\nNone\nList of input edge descriptors. Each descriptor can be either:- A string in format “source_node.source_port-&gt;target_port” - A tuple (edge_descriptor, condition_func) for conditional edges\n\n\noutputs\nList[str]\nNone\nList of output edge descriptors. Each descriptor can be either:- A string in format “source_port-&gt;target_node.target_port”- A tuple (edge_descriptor, condition_func) for conditional edges\n\n\nis_break\n&lt;class ‘bool’&gt;\nFalse\nIf True, execution will pause at this node. Not allowed in flow scopes\n\n\nfor_each\ntyping.Optional[typing.List[str]]\nNone\nList of input keys to iterate over. Used for batching operations in Flow diagrams.If provided, the node will be executed once for each product of items in the input list.This for each keys must get iteratbles from the input edges.\n\n\nfilter\n&lt;class ‘bool’&gt;\nFalse\nUsed for batching operations in Flow diagrams. If True, falsy node outputs will be filtered out. Cannot be used with flat=True\n\n\nflat\n&lt;class ‘bool’&gt;\nFalse\nUsed for batching operations in Flow diagrams.If True, node output lists will be flattened into a single list.Cannot be used with filter=True\n\n\nas_start\n&lt;class ‘bool’&gt;\nFalse\nIf True, marks this node as the diagram’s start node\n\n\nas_end\n&lt;class ‘bool’&gt;\nFalse\nIf True, marks this node as the diagram’s end node\n\n\n:Returns:\nNone\n-\nName of the created node\n\n\n\n\n\n\n\nClasses\n\nclass_data = clean_class(JsonRenderer)\nclass_data\n\n{'description': 'A class for rendering JSON objects with nested jinja2 templates.\\n\\nAllows setting template variables both during init and when calling the object.',\n 'params': [{'name': 'json_obj',\n   'type': None,\n   'default': None,\n   'description': 'A JSON object to render.'},\n  {'name': '**kwargs',\n   'type': None,\n   'default': None,\n   'description': 'Context variables to use in the rendering.'}],\n 'param_order': ['json_obj', '**kwargs'],\n 'returns': {'type': None, 'description': 'A rendered JSON object.'},\n 'signature': '(json_obj, **kwargs)',\n 'name': 'JsonRenderer',\n 'source': 'https://github.com/DeanLight/ladle/blob/main/ladle/std.py',\n 'methods': []}\n\n\n\nprint(jinja_render(class_doc_template,params=class_data))\n\n ## JsonRenderer\n&lt;p align=\"right\"&gt; &lt;a href=\"https://github.com/DeanLight/ladle/blob/main/ladle/std.py\"&gt;source&lt;/a&gt; &lt;/p&gt;\n\n&gt; **Signature:** `JsonRenderer(json_obj, **kwargs)`\n\nA class for rendering JSON objects with nested jinja2 templates.\n\nAllows setting template variables both during init and when calling the object.\n\n| Parameter | Type | Default | Description |\n|-----------|------|---------|-------------|\n| json_obj | None | None | A JSON object to render. |\n| **kwargs | None | None | Context variables to use in the rendering. |\n| :Returns: | None | - | A rendered JSON object. |\n\n\n\n\n\n\ndisplay(Markdown(jinja_render(class_doc_template,params=class_data)))\n\n## JsonRenderer\n\nsource\n\n\nSignature: JsonRenderer(json_obj, **kwargs)\n\nA class for rendering JSON objects with nested jinja2 templates.\nAllows setting template variables both during init and when calling the object.\n\n\n\nParameter\nType\nDefault\nDescription\n\n\n\n\njson_obj\nNone\nNone\nA JSON object to render.\n\n\n**kwargs\nNone\nNone\nContext variables to use in the rendering.\n\n\n:Returns:\nNone\n-\nA rendered JSON object.\n\n\n\n\n\n\n\nAll together\n## show_doc\n\nsource\n\n\nSignature: show_doc(obj, methods=None)\n\nNone\n\n\n\nParameter\nType\nDefault\nDescription\n\n\n\n\n\n## V\n\nsource\n\n\nSignature: V(name: str, func: Callable = None, inputs: Any = None, outputs=None, is_break: bool = False, for_each: Optional[List[str]] = None, filter: bool = False, flat: bool = False, as_start: bool = False, as_end: bool = False) -&gt; None\n\nAdd a vertex (node) to the current diagram.\n\n\n\n\n\n\n\n\n\nParameter\nType\nDefault\nDescription\n\n\n\n\nname\n&lt;class ‘str’&gt;\nNone\nName of the node\n\n\nfunc\ntyping.Callable\nNone\nFunction to execute at this node. If None, node acts as a passthrough\n\n\ninputs\ntyping.Any\nNone\nList of input edge descriptors. Each descriptor can be either:- A string in format “source_node.source_port-&gt;target_port” - A tuple (edge_descriptor, condition_func) for conditional edges\n\n\noutputs\nList[str]\nNone\nList of output edge descriptors. Each descriptor can be either:- A string in format “source_port-&gt;target_node.target_port”- A tuple (edge_descriptor, condition_func) for conditional edges\n\n\nis_break\n&lt;class ‘bool’&gt;\nFalse\nIf True, execution will pause at this node. Not allowed in flow scopes\n\n\nfor_each\ntyping.Optional[typing.List[str]]\nNone\nList of input keys to iterate over. Used for batching operations in Flow diagrams.If provided, the node will be executed once for each product of items in the input list.This for each keys must get iteratbles from the input edges.\n\n\nfilter\n&lt;class ‘bool’&gt;\nFalse\nUsed for batching operations in Flow diagrams. If True, falsy node outputs will be filtered out. Cannot be used with flat=True\n\n\nflat\n&lt;class ‘bool’&gt;\nFalse\nUsed for batching operations in Flow diagrams.If True, node output lists will be flattened into a single list.Cannot be used with filter=True\n\n\nas_start\n&lt;class ‘bool’&gt;\nFalse\nIf True, marks this node as the diagram’s start node\n\n\nas_end\n&lt;class ‘bool’&gt;\nFalse\nIf True, marks this node as the diagram’s end node\n\n\n:Returns:\nNone\n-\nName of the created node\n\n\n\n## JsonRenderer\n\nsource\n\n\nSignature: JsonRenderer(json_obj, **kwargs)\n\nA class for rendering JSON objects with nested jinja2 templates.\nAllows setting template variables both during init and when calling the object.\n\n\n\nParameter\nType\nDefault\nDescription\n\n\n\n\njson_obj\nNone\nNone\nA JSON object to render.\n\n\n**kwargs\nNone\nNone\nContext variables to use in the rendering.\n\n\n:Returns:\nNone\n-\nA rendered JSON object.\n\n\n\n\n\n__call__\nNone &gt; Signature: JsonRenderer.\\_\\_call\\_\\_(self, **kwargs)\n\n\n\nParameter\nType\nDefault\nDescription\n\n\n\n\n:Returns:\nNone\n-\nA rendered JSON object.\n\n\n\n\n\n__str__\nNone &gt; Signature: JsonRenderer.\\_\\_str\\_\\_(self)\n\n\n\nParameter\nType\nDefault\nDescription\n\n\n\n\n:Returns:\nNone\n-\nA rendered JSON object."
  }
]